/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest = {
  /**
   * The account id.
   */
  accountId: string;
  /**
   * The achWithdrawalSchedule id.
   */
  achWithdrawalScheduleId: string;
  cancelAchWithdrawalScheduleRequestCreate:
    components.CancelAchWithdrawalScheduleRequestCreate;
};

export type AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  achWithdrawalSchedule?: components.AchWithdrawalSchedule | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   *
   * @remarks
   * FAILED_PRECONDITION: The schedule is in a state that doesn't allow cancellation.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$inboundSchema:
  z.ZodType<
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account_id: z.string(),
    achWithdrawalSchedule_id: z.string(),
    CancelAchWithdrawalScheduleRequestCreate:
      components.CancelAchWithdrawalScheduleRequestCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
      "achWithdrawalSchedule_id": "achWithdrawalScheduleId",
      "CancelAchWithdrawalScheduleRequestCreate":
        "cancelAchWithdrawalScheduleRequestCreate",
    });
  });

/** @internal */
export type AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$Outbound =
  {
    account_id: string;
    achWithdrawalSchedule_id: string;
    CancelAchWithdrawalScheduleRequestCreate:
      components.CancelAchWithdrawalScheduleRequestCreate$Outbound;
  };

/** @internal */
export const AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$outboundSchema:
  z.ZodType<
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$Outbound,
    z.ZodTypeDef,
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest
  > = z.object({
    accountId: z.string(),
    achWithdrawalScheduleId: z.string(),
    cancelAchWithdrawalScheduleRequestCreate:
      components.CancelAchWithdrawalScheduleRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
      achWithdrawalScheduleId: "achWithdrawalSchedule_id",
      cancelAchWithdrawalScheduleRequestCreate:
        "CancelAchWithdrawalScheduleRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$ {
  /** @deprecated use `AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$inboundSchema` instead. */
  export const inboundSchema =
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$inboundSchema;
  /** @deprecated use `AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$outboundSchema` instead. */
  export const outboundSchema =
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$outboundSchema;
  /** @deprecated use `AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$Outbound` instead. */
  export type Outbound =
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$Outbound;
}

export function achWithdrawalSchedulesCancelAchWithdrawalScheduleRequestToJSON(
  achWithdrawalSchedulesCancelAchWithdrawalScheduleRequest:
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest,
): string {
  return JSON.stringify(
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$outboundSchema
      .parse(achWithdrawalSchedulesCancelAchWithdrawalScheduleRequest),
  );
}

export function achWithdrawalSchedulesCancelAchWithdrawalScheduleRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AchWithdrawalSchedulesCancelAchWithdrawalScheduleRequest' from JSON`,
  );
}

/** @internal */
export const AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$inboundSchema:
  z.ZodType<
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    AchWithdrawalSchedule: components.AchWithdrawalSchedule$inboundSchema
      .optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "AchWithdrawalSchedule": "achWithdrawalSchedule",
      "Status": "status",
    });
  });

/** @internal */
export type AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$Outbound =
  {
    HttpMeta: components.HTTPMetadata$Outbound;
    AchWithdrawalSchedule?:
      | components.AchWithdrawalSchedule$Outbound
      | undefined;
    Status?: components.Status$Outbound | undefined;
  };

/** @internal */
export const AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$outboundSchema:
  z.ZodType<
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$Outbound,
    z.ZodTypeDef,
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    achWithdrawalSchedule: components.AchWithdrawalSchedule$outboundSchema
      .optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      achWithdrawalSchedule: "AchWithdrawalSchedule",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$ {
  /** @deprecated use `AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$inboundSchema` instead. */
  export const inboundSchema =
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$inboundSchema;
  /** @deprecated use `AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$outboundSchema` instead. */
  export const outboundSchema =
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$outboundSchema;
  /** @deprecated use `AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$Outbound` instead. */
  export type Outbound =
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$Outbound;
}

export function achWithdrawalSchedulesCancelAchWithdrawalScheduleResponseToJSON(
  achWithdrawalSchedulesCancelAchWithdrawalScheduleResponse:
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse,
): string {
  return JSON.stringify(
    AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$outboundSchema
      .parse(achWithdrawalSchedulesCancelAchWithdrawalScheduleResponse),
  );
}

export function achWithdrawalSchedulesCancelAchWithdrawalScheduleResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse' from JSON`,
  );
}
