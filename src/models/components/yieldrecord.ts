/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

/**
 * The yield percentage at which the transaction was effected
 */
export type YieldPercent = {
  /**
   * The decimal value, as a string; Refer to [Googleâ€™s Decimal type protocol buffer](https://github.com/googleapis/googleapis/blob/40203ca1880849480bbff7b8715491060bbccdf1/google/type/decimal.proto#L33) for details
   */
  value?: string | undefined;
};

/**
 * Characterization of a yield percentage
 */
export enum YieldType {
  YieldTypeUnspecified = "YIELD_TYPE_UNSPECIFIED",
  YieldToCall = "YIELD_TO_CALL",
  YieldToMaturity = "YIELD_TO_MATURITY",
  YieldToPut = "YIELD_TO_PUT",
  YieldToWorst = "YIELD_TO_WORST",
}
/**
 * Characterization of a yield percentage
 */
export type YieldTypeOpen = OpenEnum<typeof YieldType>;

/**
 * Contains details about the yields associated with a trade in fixed income instruments
 */
export type YieldRecord = {
  /**
   * The yield percentage at which the transaction was effected
   */
  yieldPercent?: YieldPercent | null | undefined;
  /**
   * Characterization of a yield percentage
   */
  yieldType?: YieldTypeOpen | undefined;
};

/** @internal */
export const YieldPercent$inboundSchema: z.ZodType<
  YieldPercent,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.string().optional(),
});

/** @internal */
export type YieldPercent$Outbound = {
  value?: string | undefined;
};

/** @internal */
export const YieldPercent$outboundSchema: z.ZodType<
  YieldPercent$Outbound,
  z.ZodTypeDef,
  YieldPercent
> = z.object({
  value: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace YieldPercent$ {
  /** @deprecated use `YieldPercent$inboundSchema` instead. */
  export const inboundSchema = YieldPercent$inboundSchema;
  /** @deprecated use `YieldPercent$outboundSchema` instead. */
  export const outboundSchema = YieldPercent$outboundSchema;
  /** @deprecated use `YieldPercent$Outbound` instead. */
  export type Outbound = YieldPercent$Outbound;
}

/** @internal */
export const YieldType$inboundSchema: z.ZodType<
  YieldTypeOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(YieldType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const YieldType$outboundSchema: z.ZodType<
  YieldTypeOpen,
  z.ZodTypeDef,
  YieldTypeOpen
> = z.union([
  z.nativeEnum(YieldType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace YieldType$ {
  /** @deprecated use `YieldType$inboundSchema` instead. */
  export const inboundSchema = YieldType$inboundSchema;
  /** @deprecated use `YieldType$outboundSchema` instead. */
  export const outboundSchema = YieldType$outboundSchema;
}

/** @internal */
export const YieldRecord$inboundSchema: z.ZodType<
  YieldRecord,
  z.ZodTypeDef,
  unknown
> = z.object({
  yield_percent: z.nullable(z.lazy(() => YieldPercent$inboundSchema))
    .optional(),
  yield_type: YieldType$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "yield_percent": "yieldPercent",
    "yield_type": "yieldType",
  });
});

/** @internal */
export type YieldRecord$Outbound = {
  yield_percent?: YieldPercent$Outbound | null | undefined;
  yield_type?: string | undefined;
};

/** @internal */
export const YieldRecord$outboundSchema: z.ZodType<
  YieldRecord$Outbound,
  z.ZodTypeDef,
  YieldRecord
> = z.object({
  yieldPercent: z.nullable(z.lazy(() => YieldPercent$outboundSchema))
    .optional(),
  yieldType: YieldType$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    yieldPercent: "yield_percent",
    yieldType: "yield_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace YieldRecord$ {
  /** @deprecated use `YieldRecord$inboundSchema` instead. */
  export const inboundSchema = YieldRecord$inboundSchema;
  /** @deprecated use `YieldRecord$outboundSchema` instead. */
  export const outboundSchema = YieldRecord$outboundSchema;
  /** @deprecated use `YieldRecord$Outbound` instead. */
  export type Outbound = YieldRecord$Outbound;
}
