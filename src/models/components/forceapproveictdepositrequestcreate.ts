/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Request to simulate the approval of an ICT deposit
 */
export type ForceApproveIctDepositRequestCreate = {
  /**
   * Full name of the ICT deposit resource to force an approval on. Contains account id and ICT deposit id.
   */
  name: string;
};

/** @internal */
export const ForceApproveIctDepositRequestCreate$inboundSchema: z.ZodType<
  ForceApproveIctDepositRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ForceApproveIctDepositRequestCreate$Outbound = {
  name: string;
};

/** @internal */
export const ForceApproveIctDepositRequestCreate$outboundSchema: z.ZodType<
  ForceApproveIctDepositRequestCreate$Outbound,
  z.ZodTypeDef,
  ForceApproveIctDepositRequestCreate
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForceApproveIctDepositRequestCreate$ {
  /** @deprecated use `ForceApproveIctDepositRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    ForceApproveIctDepositRequestCreate$inboundSchema;
  /** @deprecated use `ForceApproveIctDepositRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    ForceApproveIctDepositRequestCreate$outboundSchema;
  /** @deprecated use `ForceApproveIctDepositRequestCreate$Outbound` instead. */
  export type Outbound = ForceApproveIctDepositRequestCreate$Outbound;
}

export function forceApproveIctDepositRequestCreateToJSON(
  forceApproveIctDepositRequestCreate: ForceApproveIctDepositRequestCreate,
): string {
  return JSON.stringify(
    ForceApproveIctDepositRequestCreate$outboundSchema.parse(
      forceApproveIctDepositRequestCreate,
    ),
  );
}

export function forceApproveIctDepositRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<ForceApproveIctDepositRequestCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ForceApproveIctDepositRequestCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ForceApproveIctDepositRequestCreate' from JSON`,
  );
}
