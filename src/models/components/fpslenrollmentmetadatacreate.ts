/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Percentages for FPSL Enrollment, must equal 100
 */
export type FPSLEnrollmentMetaDataCreate = {};

/** @internal */
export const FPSLEnrollmentMetaDataCreate$inboundSchema: z.ZodType<
  FPSLEnrollmentMetaDataCreate,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type FPSLEnrollmentMetaDataCreate$Outbound = {};

/** @internal */
export const FPSLEnrollmentMetaDataCreate$outboundSchema: z.ZodType<
  FPSLEnrollmentMetaDataCreate$Outbound,
  z.ZodTypeDef,
  FPSLEnrollmentMetaDataCreate
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FPSLEnrollmentMetaDataCreate$ {
  /** @deprecated use `FPSLEnrollmentMetaDataCreate$inboundSchema` instead. */
  export const inboundSchema = FPSLEnrollmentMetaDataCreate$inboundSchema;
  /** @deprecated use `FPSLEnrollmentMetaDataCreate$outboundSchema` instead. */
  export const outboundSchema = FPSLEnrollmentMetaDataCreate$outboundSchema;
  /** @deprecated use `FPSLEnrollmentMetaDataCreate$Outbound` instead. */
  export type Outbound = FPSLEnrollmentMetaDataCreate$Outbound;
}

export function fpslEnrollmentMetaDataCreateToJSON(
  fpslEnrollmentMetaDataCreate: FPSLEnrollmentMetaDataCreate,
): string {
  return JSON.stringify(
    FPSLEnrollmentMetaDataCreate$outboundSchema.parse(
      fpslEnrollmentMetaDataCreate,
    ),
  );
}

export function fpslEnrollmentMetaDataCreateFromJSON(
  jsonString: string,
): SafeParseResult<FPSLEnrollmentMetaDataCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FPSLEnrollmentMetaDataCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FPSLEnrollmentMetaDataCreate' from JSON`,
  );
}
