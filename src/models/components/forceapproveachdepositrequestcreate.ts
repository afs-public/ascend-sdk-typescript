/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Request to force approval of an existing ACH deposit that is pending review. FOR TESTING ONLY!
 */
export type ForceApproveAchDepositRequestCreate = {
  /**
   * The name of the ACH deposit to force approve.
   */
  name: string;
};

/** @internal */
export const ForceApproveAchDepositRequestCreate$inboundSchema: z.ZodType<
  ForceApproveAchDepositRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ForceApproveAchDepositRequestCreate$Outbound = {
  name: string;
};

/** @internal */
export const ForceApproveAchDepositRequestCreate$outboundSchema: z.ZodType<
  ForceApproveAchDepositRequestCreate$Outbound,
  z.ZodTypeDef,
  ForceApproveAchDepositRequestCreate
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForceApproveAchDepositRequestCreate$ {
  /** @deprecated use `ForceApproveAchDepositRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    ForceApproveAchDepositRequestCreate$inboundSchema;
  /** @deprecated use `ForceApproveAchDepositRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    ForceApproveAchDepositRequestCreate$outboundSchema;
  /** @deprecated use `ForceApproveAchDepositRequestCreate$Outbound` instead. */
  export type Outbound = ForceApproveAchDepositRequestCreate$Outbound;
}

export function forceApproveAchDepositRequestCreateToJSON(
  forceApproveAchDepositRequestCreate: ForceApproveAchDepositRequestCreate,
): string {
  return JSON.stringify(
    ForceApproveAchDepositRequestCreate$outboundSchema.parse(
      forceApproveAchDepositRequestCreate,
    ),
  );
}

export function forceApproveAchDepositRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<ForceApproveAchDepositRequestCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ForceApproveAchDepositRequestCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ForceApproveAchDepositRequestCreate' from JSON`,
  );
}
