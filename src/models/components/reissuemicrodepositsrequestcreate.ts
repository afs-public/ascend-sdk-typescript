/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Request to reissue micro deposits for bank relationship verification.
 */
export type ReissueMicroDepositsRequestCreate = {
  /**
   * The name of the relationship to reissue micro deposits on.
   */
  name: string;
};

/** @internal */
export const ReissueMicroDepositsRequestCreate$inboundSchema: z.ZodType<
  ReissueMicroDepositsRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ReissueMicroDepositsRequestCreate$Outbound = {
  name: string;
};

/** @internal */
export const ReissueMicroDepositsRequestCreate$outboundSchema: z.ZodType<
  ReissueMicroDepositsRequestCreate$Outbound,
  z.ZodTypeDef,
  ReissueMicroDepositsRequestCreate
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReissueMicroDepositsRequestCreate$ {
  /** @deprecated use `ReissueMicroDepositsRequestCreate$inboundSchema` instead. */
  export const inboundSchema = ReissueMicroDepositsRequestCreate$inboundSchema;
  /** @deprecated use `ReissueMicroDepositsRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    ReissueMicroDepositsRequestCreate$outboundSchema;
  /** @deprecated use `ReissueMicroDepositsRequestCreate$Outbound` instead. */
  export type Outbound = ReissueMicroDepositsRequestCreate$Outbound;
}

export function reissueMicroDepositsRequestCreateToJSON(
  reissueMicroDepositsRequestCreate: ReissueMicroDepositsRequestCreate,
): string {
  return JSON.stringify(
    ReissueMicroDepositsRequestCreate$outboundSchema.parse(
      reissueMicroDepositsRequestCreate,
    ),
  );
}

export function reissueMicroDepositsRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<ReissueMicroDepositsRequestCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReissueMicroDepositsRequestCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReissueMicroDepositsRequestCreate' from JSON`,
  );
}
