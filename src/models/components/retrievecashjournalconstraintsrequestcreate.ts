/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Request to retrieve retirement constraints for two accounts in a cash journal transfer
 */
export type RetrieveCashJournalConstraintsRequestCreate = {
  /**
   * Destination account name for a cash journal transfer
   */
  destinationAccount: string;
  /**
   * Source account name for a cash journal transfer
   */
  sourceAccount: string;
};

/** @internal */
export const RetrieveCashJournalConstraintsRequestCreate$inboundSchema:
  z.ZodType<
    RetrieveCashJournalConstraintsRequestCreate,
    z.ZodTypeDef,
    unknown
  > = z.object({
    destination_account: z.string(),
    source_account: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "destination_account": "destinationAccount",
      "source_account": "sourceAccount",
    });
  });

/** @internal */
export type RetrieveCashJournalConstraintsRequestCreate$Outbound = {
  destination_account: string;
  source_account: string;
};

/** @internal */
export const RetrieveCashJournalConstraintsRequestCreate$outboundSchema:
  z.ZodType<
    RetrieveCashJournalConstraintsRequestCreate$Outbound,
    z.ZodTypeDef,
    RetrieveCashJournalConstraintsRequestCreate
  > = z.object({
    destinationAccount: z.string(),
    sourceAccount: z.string(),
  }).transform((v) => {
    return remap$(v, {
      destinationAccount: "destination_account",
      sourceAccount: "source_account",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveCashJournalConstraintsRequestCreate$ {
  /** @deprecated use `RetrieveCashJournalConstraintsRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    RetrieveCashJournalConstraintsRequestCreate$inboundSchema;
  /** @deprecated use `RetrieveCashJournalConstraintsRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    RetrieveCashJournalConstraintsRequestCreate$outboundSchema;
  /** @deprecated use `RetrieveCashJournalConstraintsRequestCreate$Outbound` instead. */
  export type Outbound = RetrieveCashJournalConstraintsRequestCreate$Outbound;
}

export function retrieveCashJournalConstraintsRequestCreateToJSON(
  retrieveCashJournalConstraintsRequestCreate:
    RetrieveCashJournalConstraintsRequestCreate,
): string {
  return JSON.stringify(
    RetrieveCashJournalConstraintsRequestCreate$outboundSchema.parse(
      retrieveCashJournalConstraintsRequestCreate,
    ),
  );
}

export function retrieveCashJournalConstraintsRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<
  RetrieveCashJournalConstraintsRequestCreate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      RetrieveCashJournalConstraintsRequestCreate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'RetrieveCashJournalConstraintsRequestCreate' from JSON`,
  );
}
