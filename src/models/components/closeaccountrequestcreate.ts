/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The request for closing an Account.
 */
export type CloseAccountRequestCreate = {
  /**
   * The FDID of a replacement Account, if one exists.
   */
  replacedFdid?: string | undefined;
};

/** @internal */
export const CloseAccountRequestCreate$inboundSchema: z.ZodType<
  CloseAccountRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  replaced_fdid: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "replaced_fdid": "replacedFdid",
  });
});

/** @internal */
export type CloseAccountRequestCreate$Outbound = {
  replaced_fdid?: string | undefined;
};

/** @internal */
export const CloseAccountRequestCreate$outboundSchema: z.ZodType<
  CloseAccountRequestCreate$Outbound,
  z.ZodTypeDef,
  CloseAccountRequestCreate
> = z.object({
  replacedFdid: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    replacedFdid: "replaced_fdid",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CloseAccountRequestCreate$ {
  /** @deprecated use `CloseAccountRequestCreate$inboundSchema` instead. */
  export const inboundSchema = CloseAccountRequestCreate$inboundSchema;
  /** @deprecated use `CloseAccountRequestCreate$outboundSchema` instead. */
  export const outboundSchema = CloseAccountRequestCreate$outboundSchema;
  /** @deprecated use `CloseAccountRequestCreate$Outbound` instead. */
  export type Outbound = CloseAccountRequestCreate$Outbound;
}

export function closeAccountRequestCreateToJSON(
  closeAccountRequestCreate: CloseAccountRequestCreate,
): string {
  return JSON.stringify(
    CloseAccountRequestCreate$outboundSchema.parse(closeAccountRequestCreate),
  );
}

export function closeAccountRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<CloseAccountRequestCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CloseAccountRequestCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CloseAccountRequestCreate' from JSON`,
  );
}
