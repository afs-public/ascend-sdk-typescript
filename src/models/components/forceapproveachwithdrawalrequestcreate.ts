/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Request to force approval of an existing ACH withdrawal that is pending review. FOR TESTING ONLY!
 */
export type ForceApproveAchWithdrawalRequestCreate = {
  /**
   * The name of the ACH withdrawal to force approve.
   */
  name: string;
};

/** @internal */
export const ForceApproveAchWithdrawalRequestCreate$inboundSchema: z.ZodType<
  ForceApproveAchWithdrawalRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ForceApproveAchWithdrawalRequestCreate$Outbound = {
  name: string;
};

/** @internal */
export const ForceApproveAchWithdrawalRequestCreate$outboundSchema: z.ZodType<
  ForceApproveAchWithdrawalRequestCreate$Outbound,
  z.ZodTypeDef,
  ForceApproveAchWithdrawalRequestCreate
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForceApproveAchWithdrawalRequestCreate$ {
  /** @deprecated use `ForceApproveAchWithdrawalRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    ForceApproveAchWithdrawalRequestCreate$inboundSchema;
  /** @deprecated use `ForceApproveAchWithdrawalRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    ForceApproveAchWithdrawalRequestCreate$outboundSchema;
  /** @deprecated use `ForceApproveAchWithdrawalRequestCreate$Outbound` instead. */
  export type Outbound = ForceApproveAchWithdrawalRequestCreate$Outbound;
}

export function forceApproveAchWithdrawalRequestCreateToJSON(
  forceApproveAchWithdrawalRequestCreate:
    ForceApproveAchWithdrawalRequestCreate,
): string {
  return JSON.stringify(
    ForceApproveAchWithdrawalRequestCreate$outboundSchema.parse(
      forceApproveAchWithdrawalRequestCreate,
    ),
  );
}

export function forceApproveAchWithdrawalRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<ForceApproveAchWithdrawalRequestCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ForceApproveAchWithdrawalRequestCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ForceApproveAchWithdrawalRequestCreate' from JSON`,
  );
}
