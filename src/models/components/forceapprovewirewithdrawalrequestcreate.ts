/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Request to simulate approve of a wire withdrawal
 */
export type ForceApproveWireWithdrawalRequestCreate = {
  /**
   * The name of the wire withdrawal to force approve
   */
  name: string;
};

/** @internal */
export const ForceApproveWireWithdrawalRequestCreate$inboundSchema: z.ZodType<
  ForceApproveWireWithdrawalRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ForceApproveWireWithdrawalRequestCreate$Outbound = {
  name: string;
};

/** @internal */
export const ForceApproveWireWithdrawalRequestCreate$outboundSchema: z.ZodType<
  ForceApproveWireWithdrawalRequestCreate$Outbound,
  z.ZodTypeDef,
  ForceApproveWireWithdrawalRequestCreate
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ForceApproveWireWithdrawalRequestCreate$ {
  /** @deprecated use `ForceApproveWireWithdrawalRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    ForceApproveWireWithdrawalRequestCreate$inboundSchema;
  /** @deprecated use `ForceApproveWireWithdrawalRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    ForceApproveWireWithdrawalRequestCreate$outboundSchema;
  /** @deprecated use `ForceApproveWireWithdrawalRequestCreate$Outbound` instead. */
  export type Outbound = ForceApproveWireWithdrawalRequestCreate$Outbound;
}

export function forceApproveWireWithdrawalRequestCreateToJSON(
  forceApproveWireWithdrawalRequestCreate:
    ForceApproveWireWithdrawalRequestCreate,
): string {
  return JSON.stringify(
    ForceApproveWireWithdrawalRequestCreate$outboundSchema.parse(
      forceApproveWireWithdrawalRequestCreate,
    ),
  );
}

export function forceApproveWireWithdrawalRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<
  ForceApproveWireWithdrawalRequestCreate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ForceApproveWireWithdrawalRequestCreate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ForceApproveWireWithdrawalRequestCreate' from JSON`,
  );
}
