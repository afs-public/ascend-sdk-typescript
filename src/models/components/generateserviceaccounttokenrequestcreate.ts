/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * A request to obtain a JSON Web Token for a service account
 */
export type GenerateServiceAccountTokenRequestCreate = {
  /**
   * A signed JSON Web Token (JSON Web Signature) used to prove the caller's identity
   */
  jws: string;
};

/** @internal */
export const GenerateServiceAccountTokenRequestCreate$inboundSchema: z.ZodType<
  GenerateServiceAccountTokenRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  jws: z.string(),
});

/** @internal */
export type GenerateServiceAccountTokenRequestCreate$Outbound = {
  jws: string;
};

/** @internal */
export const GenerateServiceAccountTokenRequestCreate$outboundSchema: z.ZodType<
  GenerateServiceAccountTokenRequestCreate$Outbound,
  z.ZodTypeDef,
  GenerateServiceAccountTokenRequestCreate
> = z.object({
  jws: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateServiceAccountTokenRequestCreate$ {
  /** @deprecated use `GenerateServiceAccountTokenRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    GenerateServiceAccountTokenRequestCreate$inboundSchema;
  /** @deprecated use `GenerateServiceAccountTokenRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    GenerateServiceAccountTokenRequestCreate$outboundSchema;
  /** @deprecated use `GenerateServiceAccountTokenRequestCreate$Outbound` instead. */
  export type Outbound = GenerateServiceAccountTokenRequestCreate$Outbound;
}

export function generateServiceAccountTokenRequestCreateToJSON(
  generateServiceAccountTokenRequestCreate:
    GenerateServiceAccountTokenRequestCreate,
): string {
  return JSON.stringify(
    GenerateServiceAccountTokenRequestCreate$outboundSchema.parse(
      generateServiceAccountTokenRequestCreate,
    ),
  );
}

export function generateServiceAccountTokenRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<
  GenerateServiceAccountTokenRequestCreate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GenerateServiceAccountTokenRequestCreate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GenerateServiceAccountTokenRequestCreate' from JSON`,
  );
}
