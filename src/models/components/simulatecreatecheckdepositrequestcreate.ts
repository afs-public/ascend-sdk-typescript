/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DecimalCreate,
  DecimalCreate$inboundSchema,
  DecimalCreate$Outbound,
  DecimalCreate$outboundSchema,
} from "./decimalcreate.js";

/**
 * Request to simulate a check deposit FOR TESTING ONLY!
 */
export type SimulateCreateCheckDepositRequestCreate = {
  /**
   * A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].
   *
   * @remarks
   *
   *  [BigDecimal]:
   *  https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
   *  [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
   */
  amount: DecimalCreate;
  /**
   * The parent account of the check deposit
   */
  parent: string;
};

/** @internal */
export const SimulateCreateCheckDepositRequestCreate$inboundSchema: z.ZodType<
  SimulateCreateCheckDepositRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: DecimalCreate$inboundSchema,
  parent: z.string(),
});

/** @internal */
export type SimulateCreateCheckDepositRequestCreate$Outbound = {
  amount: DecimalCreate$Outbound;
  parent: string;
};

/** @internal */
export const SimulateCreateCheckDepositRequestCreate$outboundSchema: z.ZodType<
  SimulateCreateCheckDepositRequestCreate$Outbound,
  z.ZodTypeDef,
  SimulateCreateCheckDepositRequestCreate
> = z.object({
  amount: DecimalCreate$outboundSchema,
  parent: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SimulateCreateCheckDepositRequestCreate$ {
  /** @deprecated use `SimulateCreateCheckDepositRequestCreate$inboundSchema` instead. */
  export const inboundSchema =
    SimulateCreateCheckDepositRequestCreate$inboundSchema;
  /** @deprecated use `SimulateCreateCheckDepositRequestCreate$outboundSchema` instead. */
  export const outboundSchema =
    SimulateCreateCheckDepositRequestCreate$outboundSchema;
  /** @deprecated use `SimulateCreateCheckDepositRequestCreate$Outbound` instead. */
  export type Outbound = SimulateCreateCheckDepositRequestCreate$Outbound;
}

export function simulateCreateCheckDepositRequestCreateToJSON(
  simulateCreateCheckDepositRequestCreate:
    SimulateCreateCheckDepositRequestCreate,
): string {
  return JSON.stringify(
    SimulateCreateCheckDepositRequestCreate$outboundSchema.parse(
      simulateCreateCheckDepositRequestCreate,
    ),
  );
}

export function simulateCreateCheckDepositRequestCreateFromJSON(
  jsonString: string,
): SafeParseResult<
  SimulateCreateCheckDepositRequestCreate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SimulateCreateCheckDepositRequestCreate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'SimulateCreateCheckDepositRequestCreate' from JSON`,
  );
}
