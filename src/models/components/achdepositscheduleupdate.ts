/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DepositScheduleDetailsUpdate,
  DepositScheduleDetailsUpdate$inboundSchema,
  DepositScheduleDetailsUpdate$Outbound,
  DepositScheduleDetailsUpdate$outboundSchema,
} from "./depositscheduledetailsupdate.js";

/**
 * A deposit transfer schedule using the ACH mechanism
 */
export type AchDepositScheduleUpdate = {
  /**
   * Details of deposit schedule transfers
   */
  scheduleDetails?: DepositScheduleDetailsUpdate | undefined;
};

/** @internal */
export const AchDepositScheduleUpdate$inboundSchema: z.ZodType<
  AchDepositScheduleUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  schedule_details: DepositScheduleDetailsUpdate$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "schedule_details": "scheduleDetails",
  });
});

/** @internal */
export type AchDepositScheduleUpdate$Outbound = {
  schedule_details?: DepositScheduleDetailsUpdate$Outbound | undefined;
};

/** @internal */
export const AchDepositScheduleUpdate$outboundSchema: z.ZodType<
  AchDepositScheduleUpdate$Outbound,
  z.ZodTypeDef,
  AchDepositScheduleUpdate
> = z.object({
  scheduleDetails: DepositScheduleDetailsUpdate$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    scheduleDetails: "schedule_details",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AchDepositScheduleUpdate$ {
  /** @deprecated use `AchDepositScheduleUpdate$inboundSchema` instead. */
  export const inboundSchema = AchDepositScheduleUpdate$inboundSchema;
  /** @deprecated use `AchDepositScheduleUpdate$outboundSchema` instead. */
  export const outboundSchema = AchDepositScheduleUpdate$outboundSchema;
  /** @deprecated use `AchDepositScheduleUpdate$Outbound` instead. */
  export type Outbound = AchDepositScheduleUpdate$Outbound;
}

export function achDepositScheduleUpdateToJSON(
  achDepositScheduleUpdate: AchDepositScheduleUpdate,
): string {
  return JSON.stringify(
    AchDepositScheduleUpdate$outboundSchema.parse(achDepositScheduleUpdate),
  );
}

export function achDepositScheduleUpdateFromJSON(
  jsonString: string,
): SafeParseResult<AchDepositScheduleUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AchDepositScheduleUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AchDepositScheduleUpdate' from JSON`,
  );
}
