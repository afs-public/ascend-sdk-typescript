"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTestHTTPClient = createTestHTTPClient;
const crypto_1 = require("crypto");
const http_js_1 = require("../lib/http.js");
function createTestHTTPClient(testName) {
    const httpClient = new http_js_1.HTTPClient({
        fetcher: (request) => {
            return fetch(request);
        },
    });
    const testInstanceId = genTestId();
    httpClient.addHook("beforeRequest", (request) => {
        const nextRequest = new Request(request, {
            signal: request.signal || AbortSignal.timeout(5000),
        });
        nextRequest.headers.set("x-speakeasy-test-name", testName);
        nextRequest.headers.set("x-speakeasy-test-instance-id", testInstanceId);
        return nextRequest;
    });
    return httpClient;
}
function genTestId() {
    const b = new Uint8Array(16);
    (0, crypto_1.getRandomValues)(b);
    return `${buf2hex(b.slice(0, 4))}-${buf2hex(b.slice(4, 6))}-${buf2hex(b.slice(6, 8))}-${buf2hex(b.slice(8, 10))}-${buf2hex(b.slice(10))}`;
}
// Helper function to convert buffer to hex string
function buf2hex(buffer) {
    return [...buffer]
        .map((x) => x.toString(16).padStart(2, "0"))
        .join("")
        .toUpperCase();
}
//# sourceMappingURL=testclient.js.map