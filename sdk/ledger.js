/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { ledgerGetActivity } from "../funcs/ledgerGetActivity.js";
import { ledgerGetEntry } from "../funcs/ledgerGetEntry.js";
import { ledgerListActivities } from "../funcs/ledgerListActivities.js";
import { ledgerListEntries } from "../funcs/ledgerListEntries.js";
import { ledgerListPositions } from "../funcs/ledgerListPositions.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
import { unwrapResultIterator } from "../types/operations.js";
export class Ledger extends ClientSDK {
    /**
     * List Entries
     *
     * @remarks
     * List all Entries based on a filter
     */
    async listEntries(accountId, pageSize, pageToken, filter, options) {
        return unwrapResultIterator(ledgerListEntries(this, accountId, pageSize, pageToken, filter, options));
    }
    /**
     * List Activities
     *
     * @remarks
     * List all Completed Activities based on a filter
     */
    async listActivities(accountId, pageSize, pageToken, filter, options) {
        return unwrapResultIterator(ledgerListActivities(this, accountId, pageSize, pageToken, filter, options));
    }
    /**
     * List Positions
     *
     * @remarks
     * List positions based on a filter
     */
    async listPositions(accountId, pageSize, pageToken, filter, options) {
        return unwrapResultIterator(ledgerListPositions(this, accountId, pageSize, pageToken, filter, options));
    }
    /**
     * Get Activity
     *
     * @remarks
     * Get an activity
     */
    async getActivity(accountId, activityId, options) {
        return unwrapAsync(ledgerGetActivity(this, accountId, activityId, options));
    }
    /**
     * Get Entry
     *
     * @remarks
     * Get an entry
     */
    async getEntry(accountId, entryId, options) {
        return unwrapAsync(ledgerGetEntry(this, accountId, entryId, options));
    }
}
//# sourceMappingURL=ledger.js.map