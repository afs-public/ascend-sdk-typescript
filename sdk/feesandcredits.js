/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { feesAndCreditsCancelCredit } from "../funcs/feesAndCreditsCancelCredit.js";
import { feesAndCreditsCancelFee } from "../funcs/feesAndCreditsCancelFee.js";
import { feesAndCreditsCreateCredit } from "../funcs/feesAndCreditsCreateCredit.js";
import { feesAndCreditsCreateFee } from "../funcs/feesAndCreditsCreateFee.js";
import { feesAndCreditsGetCredit } from "../funcs/feesAndCreditsGetCredit.js";
import { feesAndCreditsGetFee } from "../funcs/feesAndCreditsGetFee.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class FeesAndCredits extends ClientSDK {
    /**
     * Create Fee
     *
     * @remarks
     * Create a fee
     */
    async createFee(transfersFeeCreate, accountId, options) {
        return unwrapAsync(feesAndCreditsCreateFee(this, transfersFeeCreate, accountId, options));
    }
    /**
     * Get Fee
     *
     * @remarks
     * Retrieve an existing fee
     */
    async getFee(accountId, feeId, options) {
        return unwrapAsync(feesAndCreditsGetFee(this, accountId, feeId, options));
    }
    /**
     * Cancel Fee
     *
     * @remarks
     * Cancel an existing fee
     */
    async cancelFee(cancelFeeRequestCreate, accountId, feeId, options) {
        return unwrapAsync(feesAndCreditsCancelFee(this, cancelFeeRequestCreate, accountId, feeId, options));
    }
    /**
     * Create Credit
     *
     * @remarks
     * Create a credit
     */
    async createCredit(transfersCreditCreate, accountId, options) {
        return unwrapAsync(feesAndCreditsCreateCredit(this, transfersCreditCreate, accountId, options));
    }
    /**
     * Get Credit
     *
     * @remarks
     * Retrieve an existing credit
     */
    async getCredit(accountId, creditId, options) {
        return unwrapAsync(feesAndCreditsGetCredit(this, accountId, creditId, options));
    }
    /**
     * Cancel Credit
     *
     * @remarks
     * Cancel an existing credit
     */
    async cancelCredit(cancelCreditRequestCreate, accountId, creditId, options) {
        return unwrapAsync(feesAndCreditsCancelCredit(this, cancelCreditRequestCreate, accountId, creditId, options));
    }
}
//# sourceMappingURL=feesandcredits.js.map