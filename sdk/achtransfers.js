/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import { achTransfersCancelACHDeposit } from "../funcs/achTransfersCancelACHDeposit.js";
import { achTransfersCancelACHWithdrawal } from "../funcs/achTransfersCancelACHWithdrawal.js";
import { achTransfersCreateACHDeposit } from "../funcs/achTransfersCreateACHDeposit.js";
import { achTransfersCreateACHWithdrawal } from "../funcs/achTransfersCreateACHWithdrawal.js";
import { achTransfersGetACHDeposit } from "../funcs/achTransfersGetACHDeposit.js";
import { achTransfersGetACHWithdrawal } from "../funcs/achTransfersGetACHWithdrawal.js";
import { ClientSDK } from "../lib/sdks.js";
import { unwrapAsync } from "../types/fp.js";
export class ACHTransfers extends ClientSDK {
    /**
     * Create ACH Deposit
     *
     * @remarks
     * Creates an ACH deposit.
     */
    async createAchDeposit(achDepositCreate, accountId, options) {
        return unwrapAsync(achTransfersCreateACHDeposit(this, achDepositCreate, accountId, options));
    }
    /**
     * Get ACH Deposit
     *
     * @remarks
     * Gets an existing ACH deposit.
     */
    async getAchDeposit(accountId, achDepositId, options) {
        return unwrapAsync(achTransfersGetACHDeposit(this, accountId, achDepositId, options));
    }
    /**
     * Cancel ACH Deposit
     *
     * @remarks
     * Cancels an existing ACH deposit.
     */
    async cancelAchDeposit(cancelAchDepositRequestCreate, accountId, achDepositId, options) {
        return unwrapAsync(achTransfersCancelACHDeposit(this, cancelAchDepositRequestCreate, accountId, achDepositId, options));
    }
    /**
     * Create ACH Withdrawal
     *
     * @remarks
     * Creates an ACH withdrawal.
     */
    async createAchWithdrawal(achWithdrawalCreate, accountId, options) {
        return unwrapAsync(achTransfersCreateACHWithdrawal(this, achWithdrawalCreate, accountId, options));
    }
    /**
     * Get ACH Withdrawal
     *
     * @remarks
     * Gets an existing ACH withdrawal.
     */
    async getAchWithdrawal(accountId, achWithdrawalId, options) {
        return unwrapAsync(achTransfersGetACHWithdrawal(this, accountId, achWithdrawalId, options));
    }
    /**
     * Cancel ACH Withdrawal
     *
     * @remarks
     * Cancels an existing ACH withdrawal.
     */
    async cancelAchWithdrawal(cancelAchWithdrawalRequestCreate, accountId, achWithdrawalId, options) {
        return unwrapAsync(achTransfersCancelACHWithdrawal(this, cancelAchWithdrawalRequestCreate, accountId, achWithdrawalId, options));
    }
}
//# sourceMappingURL=achtransfers.js.map