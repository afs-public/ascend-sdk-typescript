/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The type of retirement distribution.
 */
export var AchWithdrawalScheduleType;
(function (AchWithdrawalScheduleType) {
    AchWithdrawalScheduleType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    AchWithdrawalScheduleType["Normal"] = "NORMAL";
    AchWithdrawalScheduleType["Disability"] = "DISABILITY";
    AchWithdrawalScheduleType["Sosepp"] = "SOSEPP";
    AchWithdrawalScheduleType["Premature"] = "PREMATURE";
    AchWithdrawalScheduleType["Death"] = "DEATH";
    AchWithdrawalScheduleType["ExcessContributionRemovalBeforeTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE";
    AchWithdrawalScheduleType["ExcessContributionRemovalAfterTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE";
    AchWithdrawalScheduleType["RolloverToQualifiedPlan"] = "ROLLOVER_TO_QUALIFIED_PLAN";
    AchWithdrawalScheduleType["RolloverToIra"] = "ROLLOVER_TO_IRA";
    AchWithdrawalScheduleType["DistributionTransfer"] = "DISTRIBUTION_TRANSFER";
    AchWithdrawalScheduleType["RecharacterizationPriorYear"] = "RECHARACTERIZATION_PRIOR_YEAR";
    AchWithdrawalScheduleType["RecharacterizationCurrentYear"] = "RECHARACTERIZATION_CURRENT_YEAR";
    AchWithdrawalScheduleType["DistributionConversion"] = "DISTRIBUTION_CONVERSION";
    AchWithdrawalScheduleType["ManagementFee"] = "MANAGEMENT_FEE";
    AchWithdrawalScheduleType["PlanLoan401K"] = "PLAN_LOAN_401K";
    AchWithdrawalScheduleType["PrematureSimpleIraLessThan2Years"] = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS";
    AchWithdrawalScheduleType["NormalRothIraGreaterThan5Years"] = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS";
    AchWithdrawalScheduleType["NetIncomeAttributable"] = "NET_INCOME_ATTRIBUTABLE";
    AchWithdrawalScheduleType["Revocation"] = "REVOCATION";
    AchWithdrawalScheduleType["NonReportable"] = "NON_REPORTABLE";
})(AchWithdrawalScheduleType || (AchWithdrawalScheduleType = {}));
/**
 * The state of the represented schedule
 */
export var AchWithdrawalScheduleState;
(function (AchWithdrawalScheduleState) {
    AchWithdrawalScheduleState["Active"] = "ACTIVE";
    AchWithdrawalScheduleState["Canceled"] = "CANCELED";
    AchWithdrawalScheduleState["Completed"] = "COMPLETED";
})(AchWithdrawalScheduleState || (AchWithdrawalScheduleState = {}));
/**
 * The time unit used to calculate the interval between transfers. The time period between transfers in a scheduled series is the unit of time times the multiplier
 */
export var AchWithdrawalScheduleTimeUnit;
(function (AchWithdrawalScheduleTimeUnit) {
    AchWithdrawalScheduleTimeUnit["Day"] = "DAY";
    AchWithdrawalScheduleTimeUnit["Week"] = "WEEK";
    AchWithdrawalScheduleTimeUnit["Month"] = "MONTH";
})(AchWithdrawalScheduleTimeUnit || (AchWithdrawalScheduleTimeUnit = {}));
/** @internal */
export const AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$;
(function (AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$) {
    /** @deprecated use `AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$inboundSchema` instead. */
    AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$.inboundSchema = AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$outboundSchema` instead. */
    AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$.outboundSchema = AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$outboundSchema;
})(AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$ || (AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$ = {}));
export function achWithdrawalScheduleIraDistributionFederalTaxWithholdingAmountToJSON(achWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount) {
    return JSON.stringify(AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$outboundSchema
        .parse(achWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount));
}
export function achWithdrawalScheduleIraDistributionFederalTaxWithholdingAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount' from JSON`);
}
/** @internal */
export const AchWithdrawalSchedulePercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AchWithdrawalSchedulePercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalSchedulePercentage$;
(function (AchWithdrawalSchedulePercentage$) {
    /** @deprecated use `AchWithdrawalSchedulePercentage$inboundSchema` instead. */
    AchWithdrawalSchedulePercentage$.inboundSchema = AchWithdrawalSchedulePercentage$inboundSchema;
    /** @deprecated use `AchWithdrawalSchedulePercentage$outboundSchema` instead. */
    AchWithdrawalSchedulePercentage$.outboundSchema = AchWithdrawalSchedulePercentage$outboundSchema;
})(AchWithdrawalSchedulePercentage$ || (AchWithdrawalSchedulePercentage$ = {}));
export function achWithdrawalSchedulePercentageToJSON(achWithdrawalSchedulePercentage) {
    return JSON.stringify(AchWithdrawalSchedulePercentage$outboundSchema.parse(achWithdrawalSchedulePercentage));
}
export function achWithdrawalSchedulePercentageFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalSchedulePercentage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalSchedulePercentage' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleFederalTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => AchWithdrawalSchedulePercentage$inboundSchema)).optional(),
});
/** @internal */
export const AchWithdrawalScheduleFederalTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchWithdrawalScheduleIraDistributionFederalTaxWithholdingAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => AchWithdrawalSchedulePercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleFederalTaxWithholding$;
(function (AchWithdrawalScheduleFederalTaxWithholding$) {
    /** @deprecated use `AchWithdrawalScheduleFederalTaxWithholding$inboundSchema` instead. */
    AchWithdrawalScheduleFederalTaxWithholding$.inboundSchema = AchWithdrawalScheduleFederalTaxWithholding$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleFederalTaxWithholding$outboundSchema` instead. */
    AchWithdrawalScheduleFederalTaxWithholding$.outboundSchema = AchWithdrawalScheduleFederalTaxWithholding$outboundSchema;
})(AchWithdrawalScheduleFederalTaxWithholding$ || (AchWithdrawalScheduleFederalTaxWithholding$ = {}));
export function achWithdrawalScheduleFederalTaxWithholdingToJSON(achWithdrawalScheduleFederalTaxWithholding) {
    return JSON.stringify(AchWithdrawalScheduleFederalTaxWithholding$outboundSchema.parse(achWithdrawalScheduleFederalTaxWithholding));
}
export function achWithdrawalScheduleFederalTaxWithholdingFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleFederalTaxWithholding$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleFederalTaxWithholding' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleIraDistributionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AchWithdrawalScheduleIraDistributionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleIraDistributionAmount$;
(function (AchWithdrawalScheduleIraDistributionAmount$) {
    /** @deprecated use `AchWithdrawalScheduleIraDistributionAmount$inboundSchema` instead. */
    AchWithdrawalScheduleIraDistributionAmount$.inboundSchema = AchWithdrawalScheduleIraDistributionAmount$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleIraDistributionAmount$outboundSchema` instead. */
    AchWithdrawalScheduleIraDistributionAmount$.outboundSchema = AchWithdrawalScheduleIraDistributionAmount$outboundSchema;
})(AchWithdrawalScheduleIraDistributionAmount$ || (AchWithdrawalScheduleIraDistributionAmount$ = {}));
export function achWithdrawalScheduleIraDistributionAmountToJSON(achWithdrawalScheduleIraDistributionAmount) {
    return JSON.stringify(AchWithdrawalScheduleIraDistributionAmount$outboundSchema.parse(achWithdrawalScheduleIraDistributionAmount));
}
export function achWithdrawalScheduleIraDistributionAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleIraDistributionAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleIraDistributionAmount' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleIraDistributionPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AchWithdrawalScheduleIraDistributionPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleIraDistributionPercentage$;
(function (AchWithdrawalScheduleIraDistributionPercentage$) {
    /** @deprecated use `AchWithdrawalScheduleIraDistributionPercentage$inboundSchema` instead. */
    AchWithdrawalScheduleIraDistributionPercentage$.inboundSchema = AchWithdrawalScheduleIraDistributionPercentage$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleIraDistributionPercentage$outboundSchema` instead. */
    AchWithdrawalScheduleIraDistributionPercentage$.outboundSchema = AchWithdrawalScheduleIraDistributionPercentage$outboundSchema;
})(AchWithdrawalScheduleIraDistributionPercentage$ || (AchWithdrawalScheduleIraDistributionPercentage$ = {}));
export function achWithdrawalScheduleIraDistributionPercentageToJSON(achWithdrawalScheduleIraDistributionPercentage) {
    return JSON.stringify(AchWithdrawalScheduleIraDistributionPercentage$outboundSchema.parse(achWithdrawalScheduleIraDistributionPercentage));
}
export function achWithdrawalScheduleIraDistributionPercentageFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleIraDistributionPercentage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleIraDistributionPercentage' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleStateTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchWithdrawalScheduleIraDistributionAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => AchWithdrawalScheduleIraDistributionPercentage$inboundSchema)).optional(),
});
/** @internal */
export const AchWithdrawalScheduleStateTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchWithdrawalScheduleIraDistributionAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => AchWithdrawalScheduleIraDistributionPercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleStateTaxWithholding$;
(function (AchWithdrawalScheduleStateTaxWithholding$) {
    /** @deprecated use `AchWithdrawalScheduleStateTaxWithholding$inboundSchema` instead. */
    AchWithdrawalScheduleStateTaxWithholding$.inboundSchema = AchWithdrawalScheduleStateTaxWithholding$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleStateTaxWithholding$outboundSchema` instead. */
    AchWithdrawalScheduleStateTaxWithholding$.outboundSchema = AchWithdrawalScheduleStateTaxWithholding$outboundSchema;
})(AchWithdrawalScheduleStateTaxWithholding$ || (AchWithdrawalScheduleStateTaxWithholding$ = {}));
export function achWithdrawalScheduleStateTaxWithholdingToJSON(achWithdrawalScheduleStateTaxWithholding) {
    return JSON.stringify(AchWithdrawalScheduleStateTaxWithholding$outboundSchema.parse(achWithdrawalScheduleStateTaxWithholding));
}
export function achWithdrawalScheduleStateTaxWithholdingFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleStateTaxWithholding$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleStateTaxWithholding' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleType$inboundSchema = z
    .union([
    z.nativeEnum(AchWithdrawalScheduleType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchWithdrawalScheduleType$outboundSchema = z.union([
    z.nativeEnum(AchWithdrawalScheduleType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleType$;
(function (AchWithdrawalScheduleType$) {
    /** @deprecated use `AchWithdrawalScheduleType$inboundSchema` instead. */
    AchWithdrawalScheduleType$.inboundSchema = AchWithdrawalScheduleType$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleType$outboundSchema` instead. */
    AchWithdrawalScheduleType$.outboundSchema = AchWithdrawalScheduleType$outboundSchema;
})(AchWithdrawalScheduleType$ || (AchWithdrawalScheduleType$ = {}));
/** @internal */
export const IraDistribution$inboundSchema = z.object({
    federal_tax_withholding: z.nullable(z.lazy(() => AchWithdrawalScheduleFederalTaxWithholding$inboundSchema)).optional(),
    receiving_institution: z.string().optional(),
    state_tax_withholding: z.nullable(z.lazy(() => AchWithdrawalScheduleStateTaxWithholding$inboundSchema)).optional(),
    state_withholding_waiver: z.boolean().optional(),
    tax_year: z.number().int().optional(),
    type: AchWithdrawalScheduleType$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "federal_tax_withholding": "federalTaxWithholding",
        "receiving_institution": "receivingInstitution",
        "state_tax_withholding": "stateTaxWithholding",
        "state_withholding_waiver": "stateWithholdingWaiver",
        "tax_year": "taxYear",
    });
});
/** @internal */
export const IraDistribution$outboundSchema = z.object({
    federalTaxWithholding: z.nullable(z.lazy(() => AchWithdrawalScheduleFederalTaxWithholding$outboundSchema)).optional(),
    receivingInstitution: z.string().optional(),
    stateTaxWithholding: z.nullable(z.lazy(() => AchWithdrawalScheduleStateTaxWithholding$outboundSchema)).optional(),
    stateWithholdingWaiver: z.boolean().optional(),
    taxYear: z.number().int().optional(),
    type: AchWithdrawalScheduleType$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        federalTaxWithholding: "federal_tax_withholding",
        receivingInstitution: "receiving_institution",
        stateTaxWithholding: "state_tax_withholding",
        stateWithholdingWaiver: "state_withholding_waiver",
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IraDistribution$;
(function (IraDistribution$) {
    /** @deprecated use `IraDistribution$inboundSchema` instead. */
    IraDistribution$.inboundSchema = IraDistribution$inboundSchema;
    /** @deprecated use `IraDistribution$outboundSchema` instead. */
    IraDistribution$.outboundSchema = IraDistribution$outboundSchema;
})(IraDistribution$ || (IraDistribution$ = {}));
export function iraDistributionToJSON(iraDistribution) {
    return JSON.stringify(IraDistribution$outboundSchema.parse(iraDistribution));
}
export function iraDistributionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IraDistribution$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IraDistribution' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AchWithdrawalScheduleAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleAmount$;
(function (AchWithdrawalScheduleAmount$) {
    /** @deprecated use `AchWithdrawalScheduleAmount$inboundSchema` instead. */
    AchWithdrawalScheduleAmount$.inboundSchema = AchWithdrawalScheduleAmount$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleAmount$outboundSchema` instead. */
    AchWithdrawalScheduleAmount$.outboundSchema = AchWithdrawalScheduleAmount$outboundSchema;
})(AchWithdrawalScheduleAmount$ || (AchWithdrawalScheduleAmount$ = {}));
export function achWithdrawalScheduleAmountToJSON(achWithdrawalScheduleAmount) {
    return JSON.stringify(AchWithdrawalScheduleAmount$outboundSchema.parse(achWithdrawalScheduleAmount));
}
export function achWithdrawalScheduleAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleAmount' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleEndDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const AchWithdrawalScheduleEndDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleEndDate$;
(function (AchWithdrawalScheduleEndDate$) {
    /** @deprecated use `AchWithdrawalScheduleEndDate$inboundSchema` instead. */
    AchWithdrawalScheduleEndDate$.inboundSchema = AchWithdrawalScheduleEndDate$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleEndDate$outboundSchema` instead. */
    AchWithdrawalScheduleEndDate$.outboundSchema = AchWithdrawalScheduleEndDate$outboundSchema;
})(AchWithdrawalScheduleEndDate$ || (AchWithdrawalScheduleEndDate$ = {}));
export function achWithdrawalScheduleEndDateToJSON(achWithdrawalScheduleEndDate) {
    return JSON.stringify(AchWithdrawalScheduleEndDate$outboundSchema.parse(achWithdrawalScheduleEndDate));
}
export function achWithdrawalScheduleEndDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleEndDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleEndDate' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleStartDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const AchWithdrawalScheduleStartDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleStartDate$;
(function (AchWithdrawalScheduleStartDate$) {
    /** @deprecated use `AchWithdrawalScheduleStartDate$inboundSchema` instead. */
    AchWithdrawalScheduleStartDate$.inboundSchema = AchWithdrawalScheduleStartDate$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleStartDate$outboundSchema` instead. */
    AchWithdrawalScheduleStartDate$.outboundSchema = AchWithdrawalScheduleStartDate$outboundSchema;
})(AchWithdrawalScheduleStartDate$ || (AchWithdrawalScheduleStartDate$ = {}));
export function achWithdrawalScheduleStartDateToJSON(achWithdrawalScheduleStartDate) {
    return JSON.stringify(AchWithdrawalScheduleStartDate$outboundSchema.parse(achWithdrawalScheduleStartDate));
}
export function achWithdrawalScheduleStartDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleStartDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleStartDate' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleState$inboundSchema = z
    .union([
    z.nativeEnum(AchWithdrawalScheduleState),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchWithdrawalScheduleState$outboundSchema = z.union([
    z.nativeEnum(AchWithdrawalScheduleState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleState$;
(function (AchWithdrawalScheduleState$) {
    /** @deprecated use `AchWithdrawalScheduleState$inboundSchema` instead. */
    AchWithdrawalScheduleState$.inboundSchema = AchWithdrawalScheduleState$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleState$outboundSchema` instead. */
    AchWithdrawalScheduleState$.outboundSchema = AchWithdrawalScheduleState$outboundSchema;
})(AchWithdrawalScheduleState$ || (AchWithdrawalScheduleState$ = {}));
/** @internal */
export const AchWithdrawalScheduleTimeUnit$inboundSchema = z
    .union([
    z.nativeEnum(AchWithdrawalScheduleTimeUnit),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchWithdrawalScheduleTimeUnit$outboundSchema = z.union([
    z.nativeEnum(AchWithdrawalScheduleTimeUnit),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleTimeUnit$;
(function (AchWithdrawalScheduleTimeUnit$) {
    /** @deprecated use `AchWithdrawalScheduleTimeUnit$inboundSchema` instead. */
    AchWithdrawalScheduleTimeUnit$.inboundSchema = AchWithdrawalScheduleTimeUnit$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleTimeUnit$outboundSchema` instead. */
    AchWithdrawalScheduleTimeUnit$.outboundSchema = AchWithdrawalScheduleTimeUnit$outboundSchema;
})(AchWithdrawalScheduleTimeUnit$ || (AchWithdrawalScheduleTimeUnit$ = {}));
/** @internal */
export const AchWithdrawalScheduleScheduleProperties$inboundSchema = z.object({
    end_date: z.nullable(z.lazy(() => AchWithdrawalScheduleEndDate$inboundSchema))
        .optional(),
    occurrences: z.number().int().optional(),
    start_date: z.nullable(z.lazy(() => AchWithdrawalScheduleStartDate$inboundSchema)).optional(),
    state: AchWithdrawalScheduleState$inboundSchema.optional(),
    time_unit: AchWithdrawalScheduleTimeUnit$inboundSchema.optional(),
    unit_multiplier: z.number().int().optional(),
}).transform((v) => {
    return remap$(v, {
        "end_date": "endDate",
        "start_date": "startDate",
        "time_unit": "timeUnit",
        "unit_multiplier": "unitMultiplier",
    });
});
/** @internal */
export const AchWithdrawalScheduleScheduleProperties$outboundSchema = z.object({
    endDate: z.nullable(z.lazy(() => AchWithdrawalScheduleEndDate$outboundSchema))
        .optional(),
    occurrences: z.number().int().optional(),
    startDate: z.nullable(z.lazy(() => AchWithdrawalScheduleStartDate$outboundSchema)).optional(),
    state: AchWithdrawalScheduleState$outboundSchema.optional(),
    timeUnit: AchWithdrawalScheduleTimeUnit$outboundSchema.optional(),
    unitMultiplier: z.number().int().optional(),
}).transform((v) => {
    return remap$(v, {
        endDate: "end_date",
        startDate: "start_date",
        timeUnit: "time_unit",
        unitMultiplier: "unit_multiplier",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleScheduleProperties$;
(function (AchWithdrawalScheduleScheduleProperties$) {
    /** @deprecated use `AchWithdrawalScheduleScheduleProperties$inboundSchema` instead. */
    AchWithdrawalScheduleScheduleProperties$.inboundSchema = AchWithdrawalScheduleScheduleProperties$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleScheduleProperties$outboundSchema` instead. */
    AchWithdrawalScheduleScheduleProperties$.outboundSchema = AchWithdrawalScheduleScheduleProperties$outboundSchema;
})(AchWithdrawalScheduleScheduleProperties$ || (AchWithdrawalScheduleScheduleProperties$ = {}));
export function achWithdrawalScheduleSchedulePropertiesToJSON(achWithdrawalScheduleScheduleProperties) {
    return JSON.stringify(AchWithdrawalScheduleScheduleProperties$outboundSchema.parse(achWithdrawalScheduleScheduleProperties));
}
export function achWithdrawalScheduleSchedulePropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleScheduleProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleScheduleProperties' from JSON`);
}
/** @internal */
export const AchWithdrawalScheduleScheduleDetails$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchWithdrawalScheduleAmount$inboundSchema))
        .optional(),
    client_schedule_id: z.string().optional(),
    full_disbursement: z.boolean().optional(),
    schedule_properties: z.nullable(z.lazy(() => AchWithdrawalScheduleScheduleProperties$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "client_schedule_id": "clientScheduleId",
        "full_disbursement": "fullDisbursement",
        "schedule_properties": "scheduleProperties",
    });
});
/** @internal */
export const AchWithdrawalScheduleScheduleDetails$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchWithdrawalScheduleAmount$outboundSchema))
        .optional(),
    clientScheduleId: z.string().optional(),
    fullDisbursement: z.boolean().optional(),
    scheduleProperties: z.nullable(z.lazy(() => AchWithdrawalScheduleScheduleProperties$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        clientScheduleId: "client_schedule_id",
        fullDisbursement: "full_disbursement",
        scheduleProperties: "schedule_properties",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalScheduleScheduleDetails$;
(function (AchWithdrawalScheduleScheduleDetails$) {
    /** @deprecated use `AchWithdrawalScheduleScheduleDetails$inboundSchema` instead. */
    AchWithdrawalScheduleScheduleDetails$.inboundSchema = AchWithdrawalScheduleScheduleDetails$inboundSchema;
    /** @deprecated use `AchWithdrawalScheduleScheduleDetails$outboundSchema` instead. */
    AchWithdrawalScheduleScheduleDetails$.outboundSchema = AchWithdrawalScheduleScheduleDetails$outboundSchema;
})(AchWithdrawalScheduleScheduleDetails$ || (AchWithdrawalScheduleScheduleDetails$ = {}));
export function achWithdrawalScheduleScheduleDetailsToJSON(achWithdrawalScheduleScheduleDetails) {
    return JSON.stringify(AchWithdrawalScheduleScheduleDetails$outboundSchema.parse(achWithdrawalScheduleScheduleDetails));
}
export function achWithdrawalScheduleScheduleDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalScheduleScheduleDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalScheduleScheduleDetails' from JSON`);
}
/** @internal */
export const AchWithdrawalSchedule$inboundSchema = z.object({
    bank_relationship: z.string().optional(),
    ira_distribution: z.nullable(z.lazy(() => IraDistribution$inboundSchema))
        .optional(),
    name: z.string().optional(),
    schedule_details: z.nullable(z.lazy(() => AchWithdrawalScheduleScheduleDetails$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "bank_relationship": "bankRelationship",
        "ira_distribution": "iraDistribution",
        "schedule_details": "scheduleDetails",
    });
});
/** @internal */
export const AchWithdrawalSchedule$outboundSchema = z.object({
    bankRelationship: z.string().optional(),
    iraDistribution: z.nullable(z.lazy(() => IraDistribution$outboundSchema))
        .optional(),
    name: z.string().optional(),
    scheduleDetails: z.nullable(z.lazy(() => AchWithdrawalScheduleScheduleDetails$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        bankRelationship: "bank_relationship",
        iraDistribution: "ira_distribution",
        scheduleDetails: "schedule_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchWithdrawalSchedule$;
(function (AchWithdrawalSchedule$) {
    /** @deprecated use `AchWithdrawalSchedule$inboundSchema` instead. */
    AchWithdrawalSchedule$.inboundSchema = AchWithdrawalSchedule$inboundSchema;
    /** @deprecated use `AchWithdrawalSchedule$outboundSchema` instead. */
    AchWithdrawalSchedule$.outboundSchema = AchWithdrawalSchedule$outboundSchema;
})(AchWithdrawalSchedule$ || (AchWithdrawalSchedule$ = {}));
export function achWithdrawalScheduleToJSON(achWithdrawalSchedule) {
    return JSON.stringify(AchWithdrawalSchedule$outboundSchema.parse(achWithdrawalSchedule));
}
export function achWithdrawalScheduleFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchWithdrawalSchedule$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchWithdrawalSchedule' from JSON`);
}
//# sourceMappingURL=achwithdrawalschedule.js.map