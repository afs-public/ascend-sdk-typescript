/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CheckPartyTypeRequestCreate$inboundSchema = z.object({
    destination_account: z.string(),
    source_account: z.string(),
}).transform((v) => {
    return remap$(v, {
        "destination_account": "destinationAccount",
        "source_account": "sourceAccount",
    });
});
/** @internal */
export const CheckPartyTypeRequestCreate$outboundSchema = z.object({
    destinationAccount: z.string(),
    sourceAccount: z.string(),
}).transform((v) => {
    return remap$(v, {
        destinationAccount: "destination_account",
        sourceAccount: "source_account",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CheckPartyTypeRequestCreate$;
(function (CheckPartyTypeRequestCreate$) {
    /** @deprecated use `CheckPartyTypeRequestCreate$inboundSchema` instead. */
    CheckPartyTypeRequestCreate$.inboundSchema = CheckPartyTypeRequestCreate$inboundSchema;
    /** @deprecated use `CheckPartyTypeRequestCreate$outboundSchema` instead. */
    CheckPartyTypeRequestCreate$.outboundSchema = CheckPartyTypeRequestCreate$outboundSchema;
})(CheckPartyTypeRequestCreate$ || (CheckPartyTypeRequestCreate$ = {}));
export function checkPartyTypeRequestCreateToJSON(checkPartyTypeRequestCreate) {
    return JSON.stringify(CheckPartyTypeRequestCreate$outboundSchema.parse(checkPartyTypeRequestCreate));
}
export function checkPartyTypeRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CheckPartyTypeRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckPartyTypeRequestCreate' from JSON`);
}
//# sourceMappingURL=checkpartytyperequestcreate.js.map