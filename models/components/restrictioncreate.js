/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RestrictionCreate$inboundSchema = z.object({
    create_reason: z.string(),
    ended_reason: z.string().optional(),
    restriction_code: z.string(),
}).transform((v) => {
    return remap$(v, {
        "create_reason": "createReason",
        "ended_reason": "endedReason",
        "restriction_code": "restrictionCode",
    });
});
/** @internal */
export const RestrictionCreate$outboundSchema = z.object({
    createReason: z.string(),
    endedReason: z.string().optional(),
    restrictionCode: z.string(),
}).transform((v) => {
    return remap$(v, {
        createReason: "create_reason",
        endedReason: "ended_reason",
        restrictionCode: "restriction_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RestrictionCreate$;
(function (RestrictionCreate$) {
    /** @deprecated use `RestrictionCreate$inboundSchema` instead. */
    RestrictionCreate$.inboundSchema = RestrictionCreate$inboundSchema;
    /** @deprecated use `RestrictionCreate$outboundSchema` instead. */
    RestrictionCreate$.outboundSchema = RestrictionCreate$outboundSchema;
})(RestrictionCreate$ || (RestrictionCreate$ = {}));
export function restrictionCreateToJSON(restrictionCreate) {
    return JSON.stringify(RestrictionCreate$outboundSchema.parse(restrictionCreate));
}
export function restrictionCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RestrictionCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RestrictionCreate' from JSON`);
}
//# sourceMappingURL=restrictioncreate.js.map