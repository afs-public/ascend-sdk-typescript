/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { InvestmentVehicleExperienceCreate$inboundSchema, InvestmentVehicleExperienceCreate$outboundSchema, } from "./investmentvehicleexperiencecreate.js";
/**
 * Requested options level
 */
export var OptionsLevel;
(function (OptionsLevel) {
    OptionsLevel["OptionsLevelUnspecified"] = "OPTIONS_LEVEL_UNSPECIFIED";
    OptionsLevel["OptionsLevel2LongOptions"] = "OPTIONS_LEVEL_2_LONG_OPTIONS";
})(OptionsLevel || (OptionsLevel = {}));
/** @internal */
export const OptionsLevel$inboundSchema = z
    .union([
    z.nativeEnum(OptionsLevel),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const OptionsLevel$outboundSchema = z.union([
    z.nativeEnum(OptionsLevel),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OptionsLevel$;
(function (OptionsLevel$) {
    /** @deprecated use `OptionsLevel$inboundSchema` instead. */
    OptionsLevel$.inboundSchema = OptionsLevel$inboundSchema;
    /** @deprecated use `OptionsLevel$outboundSchema` instead. */
    OptionsLevel$.outboundSchema = OptionsLevel$outboundSchema;
})(OptionsLevel$ || (OptionsLevel$ = {}));
/** @internal */
export const OrdersOptionsTradingEnrollmentMetadataCreate$inboundSchema = z.object({
    investment_vehicle_experience: InvestmentVehicleExperienceCreate$inboundSchema,
    options_level: OptionsLevel$inboundSchema,
    total_years_options_trading_experience: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        "investment_vehicle_experience": "investmentVehicleExperience",
        "options_level": "optionsLevel",
        "total_years_options_trading_experience": "totalYearsOptionsTradingExperience",
    });
});
/** @internal */
export const OrdersOptionsTradingEnrollmentMetadataCreate$outboundSchema = z.object({
    investmentVehicleExperience: InvestmentVehicleExperienceCreate$outboundSchema,
    optionsLevel: OptionsLevel$outboundSchema,
    totalYearsOptionsTradingExperience: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        investmentVehicleExperience: "investment_vehicle_experience",
        optionsLevel: "options_level",
        totalYearsOptionsTradingExperience: "total_years_options_trading_experience",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrdersOptionsTradingEnrollmentMetadataCreate$;
(function (OrdersOptionsTradingEnrollmentMetadataCreate$) {
    /** @deprecated use `OrdersOptionsTradingEnrollmentMetadataCreate$inboundSchema` instead. */
    OrdersOptionsTradingEnrollmentMetadataCreate$.inboundSchema = OrdersOptionsTradingEnrollmentMetadataCreate$inboundSchema;
    /** @deprecated use `OrdersOptionsTradingEnrollmentMetadataCreate$outboundSchema` instead. */
    OrdersOptionsTradingEnrollmentMetadataCreate$.outboundSchema = OrdersOptionsTradingEnrollmentMetadataCreate$outboundSchema;
})(OrdersOptionsTradingEnrollmentMetadataCreate$ || (OrdersOptionsTradingEnrollmentMetadataCreate$ = {}));
export function ordersOptionsTradingEnrollmentMetadataCreateToJSON(ordersOptionsTradingEnrollmentMetadataCreate) {
    return JSON.stringify(OrdersOptionsTradingEnrollmentMetadataCreate$outboundSchema.parse(ordersOptionsTradingEnrollmentMetadataCreate));
}
export function ordersOptionsTradingEnrollmentMetadataCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrdersOptionsTradingEnrollmentMetadataCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrdersOptionsTradingEnrollmentMetadataCreate' from JSON`);
}
//# sourceMappingURL=ordersoptionstradingenrollmentmetadatacreate.js.map