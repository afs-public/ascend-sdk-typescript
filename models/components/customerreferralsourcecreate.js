/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerReferralSourceCreate$inboundSchema = z.object({
    name: z.string(),
    relationship_to_applicant: z.string(),
    relationship_years_with_applicant: z.number().int(),
    relationship_years_with_broker: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        "relationship_to_applicant": "relationshipToApplicant",
        "relationship_years_with_applicant": "relationshipYearsWithApplicant",
        "relationship_years_with_broker": "relationshipYearsWithBroker",
    });
});
/** @internal */
export const CustomerReferralSourceCreate$outboundSchema = z.object({
    name: z.string(),
    relationshipToApplicant: z.string(),
    relationshipYearsWithApplicant: z.number().int(),
    relationshipYearsWithBroker: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        relationshipToApplicant: "relationship_to_applicant",
        relationshipYearsWithApplicant: "relationship_years_with_applicant",
        relationshipYearsWithBroker: "relationship_years_with_broker",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerReferralSourceCreate$;
(function (CustomerReferralSourceCreate$) {
    /** @deprecated use `CustomerReferralSourceCreate$inboundSchema` instead. */
    CustomerReferralSourceCreate$.inboundSchema = CustomerReferralSourceCreate$inboundSchema;
    /** @deprecated use `CustomerReferralSourceCreate$outboundSchema` instead. */
    CustomerReferralSourceCreate$.outboundSchema = CustomerReferralSourceCreate$outboundSchema;
})(CustomerReferralSourceCreate$ || (CustomerReferralSourceCreate$ = {}));
export function customerReferralSourceCreateToJSON(customerReferralSourceCreate) {
    return JSON.stringify(CustomerReferralSourceCreate$outboundSchema.parse(customerReferralSourceCreate));
}
export function customerReferralSourceCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerReferralSourceCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerReferralSourceCreate' from JSON`);
}
//# sourceMappingURL=customerreferralsourcecreate.js.map