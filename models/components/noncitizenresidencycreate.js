/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
export var ResidencyStatus;
(function (ResidencyStatus) {
    ResidencyStatus["ResidencyStatusUnspecified"] = "RESIDENCY_STATUS_UNSPECIFIED";
    ResidencyStatus["UsPermanentResident"] = "US_PERMANENT_RESIDENT";
    ResidencyStatus["UsTemporaryResident"] = "US_TEMPORARY_RESIDENT";
    ResidencyStatus["UsNonResident"] = "US_NON_RESIDENT";
})(ResidencyStatus || (ResidencyStatus = {}));
/** @internal */
export const ResidencyStatus$inboundSchema = z
    .union([
    z.nativeEnum(ResidencyStatus),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const ResidencyStatus$outboundSchema = z.union([
    z.nativeEnum(ResidencyStatus),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ResidencyStatus$;
(function (ResidencyStatus$) {
    /** @deprecated use `ResidencyStatus$inboundSchema` instead. */
    ResidencyStatus$.inboundSchema = ResidencyStatus$inboundSchema;
    /** @deprecated use `ResidencyStatus$outboundSchema` instead. */
    ResidencyStatus$.outboundSchema = ResidencyStatus$outboundSchema;
})(ResidencyStatus$ || (ResidencyStatus$ = {}));
/** @internal */
export const NonCitizenResidencyCreate$inboundSchema = z.object({
    residency_status: ResidencyStatus$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "residency_status": "residencyStatus",
    });
});
/** @internal */
export const NonCitizenResidencyCreate$outboundSchema = z.object({
    residencyStatus: ResidencyStatus$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        residencyStatus: "residency_status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var NonCitizenResidencyCreate$;
(function (NonCitizenResidencyCreate$) {
    /** @deprecated use `NonCitizenResidencyCreate$inboundSchema` instead. */
    NonCitizenResidencyCreate$.inboundSchema = NonCitizenResidencyCreate$inboundSchema;
    /** @deprecated use `NonCitizenResidencyCreate$outboundSchema` instead. */
    NonCitizenResidencyCreate$.outboundSchema = NonCitizenResidencyCreate$outboundSchema;
})(NonCitizenResidencyCreate$ || (NonCitizenResidencyCreate$ = {}));
export function nonCitizenResidencyCreateToJSON(nonCitizenResidencyCreate) {
    return JSON.stringify(NonCitizenResidencyCreate$outboundSchema.parse(nonCitizenResidencyCreate));
}
export function nonCitizenResidencyCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => NonCitizenResidencyCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NonCitizenResidencyCreate' from JSON`);
}
//# sourceMappingURL=noncitizenresidencycreate.js.map