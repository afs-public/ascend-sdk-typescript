/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const AcceptTransferRequestCreate$inboundSchema = z.object({
    comment: z.string().optional(),
    name: z.string(),
});
/** @internal */
export const AcceptTransferRequestCreate$outboundSchema = z.object({
    comment: z.string().optional(),
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AcceptTransferRequestCreate$;
(function (AcceptTransferRequestCreate$) {
    /** @deprecated use `AcceptTransferRequestCreate$inboundSchema` instead. */
    AcceptTransferRequestCreate$.inboundSchema = AcceptTransferRequestCreate$inboundSchema;
    /** @deprecated use `AcceptTransferRequestCreate$outboundSchema` instead. */
    AcceptTransferRequestCreate$.outboundSchema = AcceptTransferRequestCreate$outboundSchema;
})(AcceptTransferRequestCreate$ || (AcceptTransferRequestCreate$ = {}));
export function acceptTransferRequestCreateToJSON(acceptTransferRequestCreate) {
    return JSON.stringify(AcceptTransferRequestCreate$outboundSchema.parse(acceptTransferRequestCreate));
}
export function acceptTransferRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AcceptTransferRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AcceptTransferRequestCreate' from JSON`);
}
//# sourceMappingURL=accepttransferrequestcreate.js.map