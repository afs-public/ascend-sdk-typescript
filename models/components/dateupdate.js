/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const DateUpdate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const DateUpdate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DateUpdate$;
(function (DateUpdate$) {
    /** @deprecated use `DateUpdate$inboundSchema` instead. */
    DateUpdate$.inboundSchema = DateUpdate$inboundSchema;
    /** @deprecated use `DateUpdate$outboundSchema` instead. */
    DateUpdate$.outboundSchema = DateUpdate$outboundSchema;
})(DateUpdate$ || (DateUpdate$ = {}));
export function dateUpdateToJSON(dateUpdate) {
    return JSON.stringify(DateUpdate$outboundSchema.parse(dateUpdate));
}
export function dateUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DateUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DateUpdate' from JSON`);
}
//# sourceMappingURL=dateupdate.js.map