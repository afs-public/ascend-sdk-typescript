/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { BeneficiaryEnrollmentMetadataCreate$inboundSchema, BeneficiaryEnrollmentMetadataCreate$outboundSchema, } from "./beneficiaryenrollmentmetadatacreate.js";
import { CorporationEnrollmentMetadataCreate$inboundSchema, CorporationEnrollmentMetadataCreate$outboundSchema, } from "./corporationenrollmentmetadatacreate.js";
import { CustodialEnrollmentMetadataCreate$inboundSchema, CustodialEnrollmentMetadataCreate$outboundSchema, } from "./custodialenrollmentmetadatacreate.js";
import { EstateEnrollmentMetadataCreate$inboundSchema, EstateEnrollmentMetadataCreate$outboundSchema, } from "./estateenrollmentmetadatacreate.js";
import { ForeignIndividualAccountEnrollmentMetadataCreate$inboundSchema, ForeignIndividualAccountEnrollmentMetadataCreate$outboundSchema, } from "./foreignindividualaccountenrollmentmetadatacreate.js";
import { ForeignJointAccountEnrollmentMetadataCreate$inboundSchema, ForeignJointAccountEnrollmentMetadataCreate$outboundSchema, } from "./foreignjointaccountenrollmentmetadatacreate.js";
import { FPSLEnrollmentMetaDataCreate$inboundSchema, FPSLEnrollmentMetaDataCreate$outboundSchema, } from "./fpslenrollmentmetadatacreate.js";
import { IndividualEnrollmentMetadataCreate$inboundSchema, IndividualEnrollmentMetadataCreate$outboundSchema, } from "./individualenrollmentmetadatacreate.js";
import { IRABeneficiaryEnrollmentMetadataCreate$inboundSchema, IRABeneficiaryEnrollmentMetadataCreate$outboundSchema, } from "./irabeneficiaryenrollmentmetadatacreate.js";
import { IRARolloverEnrollmentMetadataCreate$inboundSchema, IRARolloverEnrollmentMetadataCreate$outboundSchema, } from "./irarolloverenrollmentmetadatacreate.js";
import { IRARothEnrollmentMetadataCreate$inboundSchema, IRARothEnrollmentMetadataCreate$outboundSchema, } from "./irarothenrollmentmetadatacreate.js";
import { IRASEPEnrollmentMetadataCreate$inboundSchema, IRASEPEnrollmentMetadataCreate$outboundSchema, } from "./irasepenrollmentmetadatacreate.js";
import { IRASimpleEnrollmentMetadataCreate$inboundSchema, IRASimpleEnrollmentMetadataCreate$outboundSchema, } from "./irasimpleenrollmentmetadatacreate.js";
import { IRATraditionalEnrollmentMetadataCreate$inboundSchema, IRATraditionalEnrollmentMetadataCreate$outboundSchema, } from "./iratraditionalenrollmentmetadatacreate.js";
import { JointCommunityPropertyEnrollmentMetadataCreate$inboundSchema, JointCommunityPropertyEnrollmentMetadataCreate$outboundSchema, } from "./jointcommunitypropertyenrollmentmetadatacreate.js";
import { JointTenantsByEntiretyEnrollmentMetadataCreate$inboundSchema, JointTenantsByEntiretyEnrollmentMetadataCreate$outboundSchema, } from "./jointtenantsbyentiretyenrollmentmetadatacreate.js";
import { JointTenantsInCommonEnrollmentMetadataCreate$inboundSchema, JointTenantsInCommonEnrollmentMetadataCreate$outboundSchema, } from "./jointtenantsincommonenrollmentmetadatacreate.js";
import { JointWithRightsOfSurvivorshipEnrollmentMetadataCreate$inboundSchema, JointWithRightsOfSurvivorshipEnrollmentMetadataCreate$outboundSchema, } from "./jointwithrightsofsurvivorshipenrollmentmetadatacreate.js";
import { LLCEnrollmentMetadataCreate$inboundSchema, LLCEnrollmentMetadataCreate$outboundSchema, } from "./llcenrollmentmetadatacreate.js";
import { OperatingEnrollmentMetadataCreate$inboundSchema, OperatingEnrollmentMetadataCreate$outboundSchema, } from "./operatingenrollmentmetadatacreate.js";
import { OrdersOptionsTradingEnrollmentMetadataCreate$inboundSchema, OrdersOptionsTradingEnrollmentMetadataCreate$outboundSchema, } from "./ordersoptionstradingenrollmentmetadatacreate.js";
import { TrustEnrollmentMetadataCreate$inboundSchema, TrustEnrollmentMetadataCreate$outboundSchema, } from "./trustenrollmentmetadatacreate.js";
import { VirtualAccountNumberEnrollmentMetadataCreate$inboundSchema, VirtualAccountNumberEnrollmentMetadataCreate$outboundSchema, } from "./virtualaccountnumberenrollmentmetadatacreate.js";
/**
 * The consent method for the enrollment. Defaults to ESIGNATURE.
 */
export var EnrollmentCreateConsentMethod;
(function (EnrollmentCreateConsentMethod) {
    EnrollmentCreateConsentMethod["ConsentMethodUnspecified"] = "CONSENT_METHOD_UNSPECIFIED";
    EnrollmentCreateConsentMethod["Esignature"] = "ESIGNATURE";
    EnrollmentCreateConsentMethod["WetSignature"] = "WET_SIGNATURE";
    EnrollmentCreateConsentMethod["NegativeConsentConversion"] = "NEGATIVE_CONSENT_CONVERSION";
    EnrollmentCreateConsentMethod["InternalConversion"] = "INTERNAL_CONVERSION";
})(EnrollmentCreateConsentMethod || (EnrollmentCreateConsentMethod = {}));
/**
 * Describes the name of the enrollment; Expressed as an enum
 */
export var EnrollmentCreateType;
(function (EnrollmentCreateType) {
    EnrollmentCreateType["EnrollmentTypeUnspecified"] = "ENROLLMENT_TYPE_UNSPECIFIED";
    EnrollmentCreateType["RegistrationIndividual"] = "REGISTRATION_INDIVIDUAL";
    EnrollmentCreateType["LendingFullyPaidStockLoan"] = "LENDING_FULLY_PAID_STOCK_LOAN";
    EnrollmentCreateType["BeneficiaryDesignation"] = "BENEFICIARY_DESIGNATION";
    EnrollmentCreateType["RegistrationJointWros"] = "REGISTRATION_JOINT_WROS";
    EnrollmentCreateType["RegistrationJointTic"] = "REGISTRATION_JOINT_TIC";
    EnrollmentCreateType["RegistrationJointTbe"] = "REGISTRATION_JOINT_TBE";
    EnrollmentCreateType["RegistrationJointCp"] = "REGISTRATION_JOINT_CP";
    EnrollmentCreateType["RegistrationEstate"] = "REGISTRATION_ESTATE";
    EnrollmentCreateType["RegistrationIraTraditional"] = "REGISTRATION_IRA_TRADITIONAL";
    EnrollmentCreateType["RegistrationIraSimple"] = "REGISTRATION_IRA_SIMPLE";
    EnrollmentCreateType["RegistrationIraSep"] = "REGISTRATION_IRA_SEP";
    EnrollmentCreateType["RegistrationIraRoth"] = "REGISTRATION_IRA_ROTH";
    EnrollmentCreateType["RegistrationIraRollover"] = "REGISTRATION_IRA_ROLLOVER";
    EnrollmentCreateType["RegistrationTrust"] = "REGISTRATION_TRUST";
    EnrollmentCreateType["RegistrationCorporation"] = "REGISTRATION_CORPORATION";
    EnrollmentCreateType["RegistrationLlc"] = "REGISTRATION_LLC";
    EnrollmentCreateType["CashFdicCashSweep"] = "CASH_FDIC_CASH_SWEEP";
    EnrollmentCreateType["RetirementBeneficiaryDesignation"] = "RETIREMENT_BENEFICIARY_DESIGNATION";
    EnrollmentCreateType["DividendReinvestmentPlan"] = "DIVIDEND_REINVESTMENT_PLAN";
    EnrollmentCreateType["RegistrationIraBeneficiaryTraditional"] = "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL";
    EnrollmentCreateType["RegistrationIraBeneficiaryRoth"] = "REGISTRATION_IRA_BENEFICIARY_ROTH";
    EnrollmentCreateType["RegistrationIndividualForeign"] = "REGISTRATION_INDIVIDUAL_FOREIGN";
    EnrollmentCreateType["RegistrationCustodial"] = "REGISTRATION_CUSTODIAL";
    EnrollmentCreateType["VirtualAccountNumber"] = "VIRTUAL_ACCOUNT_NUMBER";
})(EnrollmentCreateType || (EnrollmentCreateType = {}));
/** @internal */
export const EnrollmentCreateConsentMethod$inboundSchema = z
    .union([
    z.nativeEnum(EnrollmentCreateConsentMethod),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const EnrollmentCreateConsentMethod$outboundSchema = z.union([
    z.nativeEnum(EnrollmentCreateConsentMethod),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EnrollmentCreateConsentMethod$;
(function (EnrollmentCreateConsentMethod$) {
    /** @deprecated use `EnrollmentCreateConsentMethod$inboundSchema` instead. */
    EnrollmentCreateConsentMethod$.inboundSchema = EnrollmentCreateConsentMethod$inboundSchema;
    /** @deprecated use `EnrollmentCreateConsentMethod$outboundSchema` instead. */
    EnrollmentCreateConsentMethod$.outboundSchema = EnrollmentCreateConsentMethod$outboundSchema;
})(EnrollmentCreateConsentMethod$ || (EnrollmentCreateConsentMethod$ = {}));
/** @internal */
export const EnrollmentCreateType$inboundSchema = z
    .union([
    z.nativeEnum(EnrollmentCreateType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const EnrollmentCreateType$outboundSchema = z.union([
    z.nativeEnum(EnrollmentCreateType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EnrollmentCreateType$;
(function (EnrollmentCreateType$) {
    /** @deprecated use `EnrollmentCreateType$inboundSchema` instead. */
    EnrollmentCreateType$.inboundSchema = EnrollmentCreateType$inboundSchema;
    /** @deprecated use `EnrollmentCreateType$outboundSchema` instead. */
    EnrollmentCreateType$.outboundSchema = EnrollmentCreateType$outboundSchema;
})(EnrollmentCreateType$ || (EnrollmentCreateType$ = {}));
/** @internal */
export const EnrollmentCreate$inboundSchema = z.object({
    beneficiary_enrollment_metadata: BeneficiaryEnrollmentMetadataCreate$inboundSchema.optional(),
    consent_method: EnrollmentCreateConsentMethod$inboundSchema.optional(),
    corporation_enrollment_metadata: CorporationEnrollmentMetadataCreate$inboundSchema.optional(),
    custodial_enrollment_metadata: CustodialEnrollmentMetadataCreate$inboundSchema
        .optional(),
    estate_enrollment_metadata: EstateEnrollmentMetadataCreate$inboundSchema
        .optional(),
    foreign_individual_account_enrollment_metadata: ForeignIndividualAccountEnrollmentMetadataCreate$inboundSchema.optional(),
    foreign_joint_account_enrollment_metadata: ForeignJointAccountEnrollmentMetadataCreate$inboundSchema.optional(),
    fpsl_enrollment_metadata: FPSLEnrollmentMetaDataCreate$inboundSchema
        .optional(),
    individual_enrollment_metadata: IndividualEnrollmentMetadataCreate$inboundSchema.optional(),
    ira_beneficiary_enrollment_metadata: IRABeneficiaryEnrollmentMetadataCreate$inboundSchema.optional(),
    ira_rollover_enrollment_metadata: IRARolloverEnrollmentMetadataCreate$inboundSchema.optional(),
    ira_roth_enrollment_metadata: IRARothEnrollmentMetadataCreate$inboundSchema
        .optional(),
    ira_sep_enrollment_metadata: IRASEPEnrollmentMetadataCreate$inboundSchema
        .optional(),
    ira_simple_enrollment_metadata: IRASimpleEnrollmentMetadataCreate$inboundSchema.optional(),
    ira_traditional_enrollment_metadata: IRATraditionalEnrollmentMetadataCreate$inboundSchema.optional(),
    joint_community_property_enrollment_metadata: JointCommunityPropertyEnrollmentMetadataCreate$inboundSchema.optional(),
    joint_tenants_by_entirety_enrollment_metadata: JointTenantsByEntiretyEnrollmentMetadataCreate$inboundSchema.optional(),
    joint_tenants_in_common_enrollment_metadata: JointTenantsInCommonEnrollmentMetadataCreate$inboundSchema.optional(),
    joint_with_rights_of_survivorship_enrollment_metadata: JointWithRightsOfSurvivorshipEnrollmentMetadataCreate$inboundSchema
        .optional(),
    llc_enrollment_metadata: LLCEnrollmentMetadataCreate$inboundSchema.optional(),
    operating_enrollment_metadata: OperatingEnrollmentMetadataCreate$inboundSchema
        .optional(),
    orders_options_trading_enrollment_metadata: OrdersOptionsTradingEnrollmentMetadataCreate$inboundSchema.optional(),
    principal_approver_id: z.string(),
    trust_enrollment_metadata: TrustEnrollmentMetadataCreate$inboundSchema
        .optional(),
    type: EnrollmentCreateType$inboundSchema,
    virtual_account_number_enrollment_metadata: VirtualAccountNumberEnrollmentMetadataCreate$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "beneficiary_enrollment_metadata": "beneficiaryEnrollmentMetadata",
        "consent_method": "consentMethod",
        "corporation_enrollment_metadata": "corporationEnrollmentMetadata",
        "custodial_enrollment_metadata": "custodialEnrollmentMetadata",
        "estate_enrollment_metadata": "estateEnrollmentMetadata",
        "foreign_individual_account_enrollment_metadata": "foreignIndividualAccountEnrollmentMetadata",
        "foreign_joint_account_enrollment_metadata": "foreignJointAccountEnrollmentMetadata",
        "fpsl_enrollment_metadata": "fpslEnrollmentMetadata",
        "individual_enrollment_metadata": "individualEnrollmentMetadata",
        "ira_beneficiary_enrollment_metadata": "iraBeneficiaryEnrollmentMetadata",
        "ira_rollover_enrollment_metadata": "iraRolloverEnrollmentMetadata",
        "ira_roth_enrollment_metadata": "iraRothEnrollmentMetadata",
        "ira_sep_enrollment_metadata": "iraSepEnrollmentMetadata",
        "ira_simple_enrollment_metadata": "iraSimpleEnrollmentMetadata",
        "ira_traditional_enrollment_metadata": "iraTraditionalEnrollmentMetadata",
        "joint_community_property_enrollment_metadata": "jointCommunityPropertyEnrollmentMetadata",
        "joint_tenants_by_entirety_enrollment_metadata": "jointTenantsByEntiretyEnrollmentMetadata",
        "joint_tenants_in_common_enrollment_metadata": "jointTenantsInCommonEnrollmentMetadata",
        "joint_with_rights_of_survivorship_enrollment_metadata": "jointWithRightsOfSurvivorshipEnrollmentMetadata",
        "llc_enrollment_metadata": "llcEnrollmentMetadata",
        "operating_enrollment_metadata": "operatingEnrollmentMetadata",
        "orders_options_trading_enrollment_metadata": "ordersOptionsTradingEnrollmentMetadata",
        "principal_approver_id": "principalApproverId",
        "trust_enrollment_metadata": "trustEnrollmentMetadata",
        "virtual_account_number_enrollment_metadata": "virtualAccountNumberEnrollmentMetadata",
    });
});
/** @internal */
export const EnrollmentCreate$outboundSchema = z.object({
    beneficiaryEnrollmentMetadata: BeneficiaryEnrollmentMetadataCreate$outboundSchema.optional(),
    consentMethod: EnrollmentCreateConsentMethod$outboundSchema.optional(),
    corporationEnrollmentMetadata: CorporationEnrollmentMetadataCreate$outboundSchema.optional(),
    custodialEnrollmentMetadata: CustodialEnrollmentMetadataCreate$outboundSchema
        .optional(),
    estateEnrollmentMetadata: EstateEnrollmentMetadataCreate$outboundSchema
        .optional(),
    foreignIndividualAccountEnrollmentMetadata: ForeignIndividualAccountEnrollmentMetadataCreate$outboundSchema.optional(),
    foreignJointAccountEnrollmentMetadata: ForeignJointAccountEnrollmentMetadataCreate$outboundSchema.optional(),
    fpslEnrollmentMetadata: FPSLEnrollmentMetaDataCreate$outboundSchema
        .optional(),
    individualEnrollmentMetadata: IndividualEnrollmentMetadataCreate$outboundSchema.optional(),
    iraBeneficiaryEnrollmentMetadata: IRABeneficiaryEnrollmentMetadataCreate$outboundSchema.optional(),
    iraRolloverEnrollmentMetadata: IRARolloverEnrollmentMetadataCreate$outboundSchema.optional(),
    iraRothEnrollmentMetadata: IRARothEnrollmentMetadataCreate$outboundSchema
        .optional(),
    iraSepEnrollmentMetadata: IRASEPEnrollmentMetadataCreate$outboundSchema
        .optional(),
    iraSimpleEnrollmentMetadata: IRASimpleEnrollmentMetadataCreate$outboundSchema
        .optional(),
    iraTraditionalEnrollmentMetadata: IRATraditionalEnrollmentMetadataCreate$outboundSchema.optional(),
    jointCommunityPropertyEnrollmentMetadata: JointCommunityPropertyEnrollmentMetadataCreate$outboundSchema.optional(),
    jointTenantsByEntiretyEnrollmentMetadata: JointTenantsByEntiretyEnrollmentMetadataCreate$outboundSchema.optional(),
    jointTenantsInCommonEnrollmentMetadata: JointTenantsInCommonEnrollmentMetadataCreate$outboundSchema.optional(),
    jointWithRightsOfSurvivorshipEnrollmentMetadata: JointWithRightsOfSurvivorshipEnrollmentMetadataCreate$outboundSchema
        .optional(),
    llcEnrollmentMetadata: LLCEnrollmentMetadataCreate$outboundSchema.optional(),
    operatingEnrollmentMetadata: OperatingEnrollmentMetadataCreate$outboundSchema
        .optional(),
    ordersOptionsTradingEnrollmentMetadata: OrdersOptionsTradingEnrollmentMetadataCreate$outboundSchema.optional(),
    principalApproverId: z.string(),
    trustEnrollmentMetadata: TrustEnrollmentMetadataCreate$outboundSchema
        .optional(),
    type: EnrollmentCreateType$outboundSchema,
    virtualAccountNumberEnrollmentMetadata: VirtualAccountNumberEnrollmentMetadataCreate$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        beneficiaryEnrollmentMetadata: "beneficiary_enrollment_metadata",
        consentMethod: "consent_method",
        corporationEnrollmentMetadata: "corporation_enrollment_metadata",
        custodialEnrollmentMetadata: "custodial_enrollment_metadata",
        estateEnrollmentMetadata: "estate_enrollment_metadata",
        foreignIndividualAccountEnrollmentMetadata: "foreign_individual_account_enrollment_metadata",
        foreignJointAccountEnrollmentMetadata: "foreign_joint_account_enrollment_metadata",
        fpslEnrollmentMetadata: "fpsl_enrollment_metadata",
        individualEnrollmentMetadata: "individual_enrollment_metadata",
        iraBeneficiaryEnrollmentMetadata: "ira_beneficiary_enrollment_metadata",
        iraRolloverEnrollmentMetadata: "ira_rollover_enrollment_metadata",
        iraRothEnrollmentMetadata: "ira_roth_enrollment_metadata",
        iraSepEnrollmentMetadata: "ira_sep_enrollment_metadata",
        iraSimpleEnrollmentMetadata: "ira_simple_enrollment_metadata",
        iraTraditionalEnrollmentMetadata: "ira_traditional_enrollment_metadata",
        jointCommunityPropertyEnrollmentMetadata: "joint_community_property_enrollment_metadata",
        jointTenantsByEntiretyEnrollmentMetadata: "joint_tenants_by_entirety_enrollment_metadata",
        jointTenantsInCommonEnrollmentMetadata: "joint_tenants_in_common_enrollment_metadata",
        jointWithRightsOfSurvivorshipEnrollmentMetadata: "joint_with_rights_of_survivorship_enrollment_metadata",
        llcEnrollmentMetadata: "llc_enrollment_metadata",
        operatingEnrollmentMetadata: "operating_enrollment_metadata",
        ordersOptionsTradingEnrollmentMetadata: "orders_options_trading_enrollment_metadata",
        principalApproverId: "principal_approver_id",
        trustEnrollmentMetadata: "trust_enrollment_metadata",
        virtualAccountNumberEnrollmentMetadata: "virtual_account_number_enrollment_metadata",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EnrollmentCreate$;
(function (EnrollmentCreate$) {
    /** @deprecated use `EnrollmentCreate$inboundSchema` instead. */
    EnrollmentCreate$.inboundSchema = EnrollmentCreate$inboundSchema;
    /** @deprecated use `EnrollmentCreate$outboundSchema` instead. */
    EnrollmentCreate$.outboundSchema = EnrollmentCreate$outboundSchema;
})(EnrollmentCreate$ || (EnrollmentCreate$ = {}));
export function enrollmentCreateToJSON(enrollmentCreate) {
    return JSON.stringify(EnrollmentCreate$outboundSchema.parse(enrollmentCreate));
}
export function enrollmentCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EnrollmentCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EnrollmentCreate' from JSON`);
}
//# sourceMappingURL=enrollmentcreate.js.map