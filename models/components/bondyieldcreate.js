/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { DecimalCreate$inboundSchema, DecimalCreate$outboundSchema, } from "./decimalcreate.js";
/**
 * The type of yield.
 */
export var YieldType;
(function (YieldType) {
    YieldType["YieldTypeUnspecified"] = "YIELD_TYPE_UNSPECIFIED";
    YieldType["YieldToCall"] = "YIELD_TO_CALL";
    YieldType["YieldToMaturity"] = "YIELD_TO_MATURITY";
    YieldType["YieldToPut"] = "YIELD_TO_PUT";
    YieldType["YieldToWorst"] = "YIELD_TO_WORST";
})(YieldType || (YieldType = {}));
/** @internal */
export const YieldType$inboundSchema = z
    .union([
    z.nativeEnum(YieldType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const YieldType$outboundSchema = z.union([
    z.nativeEnum(YieldType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var YieldType$;
(function (YieldType$) {
    /** @deprecated use `YieldType$inboundSchema` instead. */
    YieldType$.inboundSchema = YieldType$inboundSchema;
    /** @deprecated use `YieldType$outboundSchema` instead. */
    YieldType$.outboundSchema = YieldType$outboundSchema;
})(YieldType$ || (YieldType$ = {}));
/** @internal */
export const BondYieldCreate$inboundSchema = z.object({
    percent: DecimalCreate$inboundSchema,
    yield_type: YieldType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "yield_type": "yieldType",
    });
});
/** @internal */
export const BondYieldCreate$outboundSchema = z.object({
    percent: DecimalCreate$outboundSchema,
    yieldType: YieldType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        yieldType: "yield_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BondYieldCreate$;
(function (BondYieldCreate$) {
    /** @deprecated use `BondYieldCreate$inboundSchema` instead. */
    BondYieldCreate$.inboundSchema = BondYieldCreate$inboundSchema;
    /** @deprecated use `BondYieldCreate$outboundSchema` instead. */
    BondYieldCreate$.outboundSchema = BondYieldCreate$outboundSchema;
})(BondYieldCreate$ || (BondYieldCreate$ = {}));
export function bondYieldCreateToJSON(bondYieldCreate) {
    return JSON.stringify(BondYieldCreate$outboundSchema.parse(bondYieldCreate));
}
export function bondYieldCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BondYieldCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BondYieldCreate' from JSON`);
}
//# sourceMappingURL=bondyieldcreate.js.map