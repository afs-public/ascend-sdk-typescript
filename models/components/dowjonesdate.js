/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const DowJonesDate$inboundSchema = z.object({
    day: z.string().optional(),
    month: z.string().optional(),
    year: z.string().optional(),
});
/** @internal */
export const DowJonesDate$outboundSchema = z.object({
    day: z.string().optional(),
    month: z.string().optional(),
    year: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DowJonesDate$;
(function (DowJonesDate$) {
    /** @deprecated use `DowJonesDate$inboundSchema` instead. */
    DowJonesDate$.inboundSchema = DowJonesDate$inboundSchema;
    /** @deprecated use `DowJonesDate$outboundSchema` instead. */
    DowJonesDate$.outboundSchema = DowJonesDate$outboundSchema;
})(DowJonesDate$ || (DowJonesDate$ = {}));
export function dowJonesDateToJSON(dowJonesDate) {
    return JSON.stringify(DowJonesDate$outboundSchema.parse(dowJonesDate));
}
export function dowJonesDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DowJonesDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DowJonesDate' from JSON`);
}
//# sourceMappingURL=dowjonesdate.js.map