/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The calculation type of this price
 */
export var BidAskPriceType;
(function (BidAskPriceType) {
    BidAskPriceType["PercentageOfPar"] = "PERCENTAGE_OF_PAR";
    BidAskPriceType["YieldToWorst"] = "YIELD_TO_WORST";
    BidAskPriceType["YieldToMaturity"] = "YIELD_TO_MATURITY";
})(BidAskPriceType || (BidAskPriceType = {}));
/** @internal */
export const BidAskPricePrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const BidAskPricePrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BidAskPricePrice$;
(function (BidAskPricePrice$) {
    /** @deprecated use `BidAskPricePrice$inboundSchema` instead. */
    BidAskPricePrice$.inboundSchema = BidAskPricePrice$inboundSchema;
    /** @deprecated use `BidAskPricePrice$outboundSchema` instead. */
    BidAskPricePrice$.outboundSchema = BidAskPricePrice$outboundSchema;
})(BidAskPricePrice$ || (BidAskPricePrice$ = {}));
export function bidAskPricePriceToJSON(bidAskPricePrice) {
    return JSON.stringify(BidAskPricePrice$outboundSchema.parse(bidAskPricePrice));
}
export function bidAskPricePriceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BidAskPricePrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BidAskPricePrice' from JSON`);
}
/** @internal */
export const BidAskPriceType$inboundSchema = z
    .union([
    z.nativeEnum(BidAskPriceType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const BidAskPriceType$outboundSchema = z.union([
    z.nativeEnum(BidAskPriceType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BidAskPriceType$;
(function (BidAskPriceType$) {
    /** @deprecated use `BidAskPriceType$inboundSchema` instead. */
    BidAskPriceType$.inboundSchema = BidAskPriceType$inboundSchema;
    /** @deprecated use `BidAskPriceType$outboundSchema` instead. */
    BidAskPriceType$.outboundSchema = BidAskPriceType$outboundSchema;
})(BidAskPriceType$ || (BidAskPriceType$ = {}));
/** @internal */
export const BidAskPrice$inboundSchema = z.object({
    price: z.nullable(z.lazy(() => BidAskPricePrice$inboundSchema)).optional(),
    type: BidAskPriceType$inboundSchema.optional(),
});
/** @internal */
export const BidAskPrice$outboundSchema = z.object({
    price: z.nullable(z.lazy(() => BidAskPricePrice$outboundSchema)).optional(),
    type: BidAskPriceType$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BidAskPrice$;
(function (BidAskPrice$) {
    /** @deprecated use `BidAskPrice$inboundSchema` instead. */
    BidAskPrice$.inboundSchema = BidAskPrice$inboundSchema;
    /** @deprecated use `BidAskPrice$outboundSchema` instead. */
    BidAskPrice$.outboundSchema = BidAskPrice$outboundSchema;
})(BidAskPrice$ || (BidAskPrice$ = {}));
export function bidAskPriceToJSON(bidAskPrice) {
    return JSON.stringify(BidAskPrice$outboundSchema.parse(bidAskPrice));
}
export function bidAskPriceFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BidAskPrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BidAskPrice' from JSON`);
}
//# sourceMappingURL=bidaskprice.js.map