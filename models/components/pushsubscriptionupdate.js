/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { HttpPushCallbackUpdate$inboundSchema, HttpPushCallbackUpdate$outboundSchema, } from "./httppushcallbackupdate.js";
/** @internal */
export const PushSubscriptionUpdate$inboundSchema = z.object({
    display_name: z.string().optional(),
    event_types: z.array(z.string()).optional(),
    http_callback: HttpPushCallbackUpdate$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "display_name": "displayName",
        "event_types": "eventTypes",
        "http_callback": "httpCallback",
    });
});
/** @internal */
export const PushSubscriptionUpdate$outboundSchema = z.object({
    displayName: z.string().optional(),
    eventTypes: z.array(z.string()).optional(),
    httpCallback: HttpPushCallbackUpdate$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        displayName: "display_name",
        eventTypes: "event_types",
        httpCallback: "http_callback",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PushSubscriptionUpdate$;
(function (PushSubscriptionUpdate$) {
    /** @deprecated use `PushSubscriptionUpdate$inboundSchema` instead. */
    PushSubscriptionUpdate$.inboundSchema = PushSubscriptionUpdate$inboundSchema;
    /** @deprecated use `PushSubscriptionUpdate$outboundSchema` instead. */
    PushSubscriptionUpdate$.outboundSchema = PushSubscriptionUpdate$outboundSchema;
})(PushSubscriptionUpdate$ || (PushSubscriptionUpdate$ = {}));
export function pushSubscriptionUpdateToJSON(pushSubscriptionUpdate) {
    return JSON.stringify(PushSubscriptionUpdate$outboundSchema.parse(pushSubscriptionUpdate));
}
export function pushSubscriptionUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PushSubscriptionUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PushSubscriptionUpdate' from JSON`);
}
//# sourceMappingURL=pushsubscriptionupdate.js.map