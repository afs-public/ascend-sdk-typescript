/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Any$inboundSchema, Any$outboundSchema, } from "./any.js";
/** @internal */
export const Status$inboundSchema = z
    .object({
    code: z.number().int().optional(),
    details: z.array(Any$inboundSchema).optional(),
    message: z.string().optional(),
});
/** @internal */
export const Status$outboundSchema = z.object({
    code: z.number().int().optional(),
    details: z.array(Any$outboundSchema).optional(),
    message: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Status$;
(function (Status$) {
    /** @deprecated use `Status$inboundSchema` instead. */
    Status$.inboundSchema = Status$inboundSchema;
    /** @deprecated use `Status$outboundSchema` instead. */
    Status$.outboundSchema = Status$outboundSchema;
})(Status$ || (Status$ = {}));
export function statusToJSON(status) {
    return JSON.stringify(Status$outboundSchema.parse(status));
}
export function statusFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Status$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Status' from JSON`);
}
//# sourceMappingURL=status.js.map