/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { AcatsTransfer$inboundSchema, AcatsTransfer$outboundSchema, } from "./acatstransfer.js";
/** @internal */
export const ListTransfersResponse$inboundSchema = z.object({
    next_page_token: z.string().optional(),
    transfers: z.array(AcatsTransfer$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListTransfersResponse$outboundSchema = z.object({
    nextPageToken: z.string().optional(),
    transfers: z.array(AcatsTransfer$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListTransfersResponse$;
(function (ListTransfersResponse$) {
    /** @deprecated use `ListTransfersResponse$inboundSchema` instead. */
    ListTransfersResponse$.inboundSchema = ListTransfersResponse$inboundSchema;
    /** @deprecated use `ListTransfersResponse$outboundSchema` instead. */
    ListTransfersResponse$.outboundSchema = ListTransfersResponse$outboundSchema;
})(ListTransfersResponse$ || (ListTransfersResponse$ = {}));
export function listTransfersResponseToJSON(listTransfersResponse) {
    return JSON.stringify(ListTransfersResponse$outboundSchema.parse(listTransfersResponse));
}
export function listTransfersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListTransfersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListTransfersResponse' from JSON`);
}
//# sourceMappingURL=listtransfersresponse.js.map