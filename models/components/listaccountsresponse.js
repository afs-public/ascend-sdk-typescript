/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Account$inboundSchema, Account$outboundSchema, } from "./account.js";
/** @internal */
export const ListAccountsResponse$inboundSchema = z.object({
    accounts: z.array(Account$inboundSchema).optional(),
    next_page_token: z.string().optional(),
    total_size: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
        "total_size": "totalSize",
    });
});
/** @internal */
export const ListAccountsResponse$outboundSchema = z.object({
    accounts: z.array(Account$outboundSchema).optional(),
    nextPageToken: z.string().optional(),
    totalSize: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
        totalSize: "total_size",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAccountsResponse$;
(function (ListAccountsResponse$) {
    /** @deprecated use `ListAccountsResponse$inboundSchema` instead. */
    ListAccountsResponse$.inboundSchema = ListAccountsResponse$inboundSchema;
    /** @deprecated use `ListAccountsResponse$outboundSchema` instead. */
    ListAccountsResponse$.outboundSchema = ListAccountsResponse$outboundSchema;
})(ListAccountsResponse$ || (ListAccountsResponse$ = {}));
export function listAccountsResponseToJSON(listAccountsResponse) {
    return JSON.stringify(ListAccountsResponse$outboundSchema.parse(listAccountsResponse));
}
export function listAccountsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAccountsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAccountsResponse' from JSON`);
}
//# sourceMappingURL=listaccountsresponse.js.map