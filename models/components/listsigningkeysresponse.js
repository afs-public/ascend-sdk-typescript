/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ListSigningKeysResponse$inboundSchema = z.object({
    keys: z.array(z.nullable(z.record(z.any()))).optional(),
    next_page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListSigningKeysResponse$outboundSchema = z.object({
    keys: z.array(z.nullable(z.record(z.any()))).optional(),
    nextPageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListSigningKeysResponse$;
(function (ListSigningKeysResponse$) {
    /** @deprecated use `ListSigningKeysResponse$inboundSchema` instead. */
    ListSigningKeysResponse$.inboundSchema = ListSigningKeysResponse$inboundSchema;
    /** @deprecated use `ListSigningKeysResponse$outboundSchema` instead. */
    ListSigningKeysResponse$.outboundSchema = ListSigningKeysResponse$outboundSchema;
})(ListSigningKeysResponse$ || (ListSigningKeysResponse$ = {}));
export function listSigningKeysResponseToJSON(listSigningKeysResponse) {
    return JSON.stringify(ListSigningKeysResponse$outboundSchema.parse(listSigningKeysResponse));
}
export function listSigningKeysResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListSigningKeysResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListSigningKeysResponse' from JSON`);
}
//# sourceMappingURL=listsigningkeysresponse.js.map