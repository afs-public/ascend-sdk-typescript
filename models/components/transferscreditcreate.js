/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { DecimalCreate$inboundSchema, DecimalCreate$outboundSchema, } from "./decimalcreate.js";
/**
 * The type of the credit being issued
 */
export var TransfersCreditCreateType;
(function (TransfersCreditCreateType) {
    TransfersCreditCreateType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    TransfersCreditCreateType["Promotional"] = "PROMOTIONAL";
    TransfersCreditCreateType["WriteOff"] = "WRITE_OFF";
    TransfersCreditCreateType["Reimbursement"] = "REIMBURSEMENT";
})(TransfersCreditCreateType || (TransfersCreditCreateType = {}));
/** @internal */
export const TransfersCreditCreateType$inboundSchema = z
    .union([
    z.nativeEnum(TransfersCreditCreateType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const TransfersCreditCreateType$outboundSchema = z.union([
    z.nativeEnum(TransfersCreditCreateType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TransfersCreditCreateType$;
(function (TransfersCreditCreateType$) {
    /** @deprecated use `TransfersCreditCreateType$inboundSchema` instead. */
    TransfersCreditCreateType$.inboundSchema = TransfersCreditCreateType$inboundSchema;
    /** @deprecated use `TransfersCreditCreateType$outboundSchema` instead. */
    TransfersCreditCreateType$.outboundSchema = TransfersCreditCreateType$outboundSchema;
})(TransfersCreditCreateType$ || (TransfersCreditCreateType$ = {}));
/** @internal */
export const TransfersCreditCreate$inboundSchema = z.object({
    amount: DecimalCreate$inboundSchema,
    client_transfer_id: z.string(),
    description: z.string().optional(),
    fee_operating_account: z.string().optional(),
    type: TransfersCreditCreateType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "client_transfer_id": "clientTransferId",
        "fee_operating_account": "feeOperatingAccount",
    });
});
/** @internal */
export const TransfersCreditCreate$outboundSchema = z.object({
    amount: DecimalCreate$outboundSchema,
    clientTransferId: z.string(),
    description: z.string().optional(),
    feeOperatingAccount: z.string().optional(),
    type: TransfersCreditCreateType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        clientTransferId: "client_transfer_id",
        feeOperatingAccount: "fee_operating_account",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TransfersCreditCreate$;
(function (TransfersCreditCreate$) {
    /** @deprecated use `TransfersCreditCreate$inboundSchema` instead. */
    TransfersCreditCreate$.inboundSchema = TransfersCreditCreate$inboundSchema;
    /** @deprecated use `TransfersCreditCreate$outboundSchema` instead. */
    TransfersCreditCreate$.outboundSchema = TransfersCreditCreate$outboundSchema;
})(TransfersCreditCreate$ || (TransfersCreditCreate$ = {}));
export function transfersCreditCreateToJSON(transfersCreditCreate) {
    return JSON.stringify(TransfersCreditCreate$outboundSchema.parse(transfersCreditCreate));
}
export function transfersCreditCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TransfersCreditCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TransfersCreditCreate' from JSON`);
}
//# sourceMappingURL=transferscreditcreate.js.map