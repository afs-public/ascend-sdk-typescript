/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Percentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const Percentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Percentage$;
(function (Percentage$) {
    /** @deprecated use `Percentage$inboundSchema` instead. */
    Percentage$.inboundSchema = Percentage$inboundSchema;
    /** @deprecated use `Percentage$outboundSchema` instead. */
    Percentage$.outboundSchema = Percentage$outboundSchema;
})(Percentage$ || (Percentage$ = {}));
export function percentageToJSON(percentage) {
    return JSON.stringify(Percentage$outboundSchema.parse(percentage));
}
export function percentageFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Percentage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Percentage' from JSON`);
}
/** @internal */
export const ForeignBondTradingDetail$inboundSchema = z.object({
    percentage: z.nullable(z.lazy(() => Percentage$inboundSchema)).optional(),
    region_code: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "region_code": "regionCode",
    });
});
/** @internal */
export const ForeignBondTradingDetail$outboundSchema = z.object({
    percentage: z.nullable(z.lazy(() => Percentage$outboundSchema)).optional(),
    regionCode: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        regionCode: "region_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ForeignBondTradingDetail$;
(function (ForeignBondTradingDetail$) {
    /** @deprecated use `ForeignBondTradingDetail$inboundSchema` instead. */
    ForeignBondTradingDetail$.inboundSchema = ForeignBondTradingDetail$inboundSchema;
    /** @deprecated use `ForeignBondTradingDetail$outboundSchema` instead. */
    ForeignBondTradingDetail$.outboundSchema = ForeignBondTradingDetail$outboundSchema;
})(ForeignBondTradingDetail$ || (ForeignBondTradingDetail$ = {}));
export function foreignBondTradingDetailToJSON(foreignBondTradingDetail) {
    return JSON.stringify(ForeignBondTradingDetail$outboundSchema.parse(foreignBondTradingDetail));
}
export function foreignBondTradingDetailFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ForeignBondTradingDetail$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ForeignBondTradingDetail' from JSON`);
}
//# sourceMappingURL=foreignbondtradingdetail.js.map