/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { WithdrawalScheduleDetailsUpdate$inboundSchema, WithdrawalScheduleDetailsUpdate$outboundSchema, } from "./withdrawalscheduledetailsupdate.js";
/** @internal */
export const WireWithdrawalScheduleUpdate$inboundSchema = z.object({
    schedule_details: WithdrawalScheduleDetailsUpdate$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "schedule_details": "scheduleDetails",
    });
});
/** @internal */
export const WireWithdrawalScheduleUpdate$outboundSchema = z.object({
    scheduleDetails: WithdrawalScheduleDetailsUpdate$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        scheduleDetails: "schedule_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleUpdate$;
(function (WireWithdrawalScheduleUpdate$) {
    /** @deprecated use `WireWithdrawalScheduleUpdate$inboundSchema` instead. */
    WireWithdrawalScheduleUpdate$.inboundSchema = WireWithdrawalScheduleUpdate$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleUpdate$outboundSchema` instead. */
    WireWithdrawalScheduleUpdate$.outboundSchema = WireWithdrawalScheduleUpdate$outboundSchema;
})(WireWithdrawalScheduleUpdate$ || (WireWithdrawalScheduleUpdate$ = {}));
export function wireWithdrawalScheduleUpdateToJSON(wireWithdrawalScheduleUpdate) {
    return JSON.stringify(WireWithdrawalScheduleUpdate$outboundSchema.parse(wireWithdrawalScheduleUpdate));
}
export function wireWithdrawalScheduleUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleUpdate' from JSON`);
}
//# sourceMappingURL=wirewithdrawalscheduleupdate.js.map