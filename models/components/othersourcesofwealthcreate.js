/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OtherSourcesOfWealthCreate$inboundSchema = z.object({
    applicant_has_other_sources_of_wealth: z.boolean(),
    other_sources_of_wealth: z.string().optional(),
    other_sources_of_wealth_verification: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "applicant_has_other_sources_of_wealth": "applicantHasOtherSourcesOfWealth",
        "other_sources_of_wealth": "otherSourcesOfWealth",
        "other_sources_of_wealth_verification": "otherSourcesOfWealthVerification",
    });
});
/** @internal */
export const OtherSourcesOfWealthCreate$outboundSchema = z.object({
    applicantHasOtherSourcesOfWealth: z.boolean(),
    otherSourcesOfWealth: z.string().optional(),
    otherSourcesOfWealthVerification: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        applicantHasOtherSourcesOfWealth: "applicant_has_other_sources_of_wealth",
        otherSourcesOfWealth: "other_sources_of_wealth",
        otherSourcesOfWealthVerification: "other_sources_of_wealth_verification",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OtherSourcesOfWealthCreate$;
(function (OtherSourcesOfWealthCreate$) {
    /** @deprecated use `OtherSourcesOfWealthCreate$inboundSchema` instead. */
    OtherSourcesOfWealthCreate$.inboundSchema = OtherSourcesOfWealthCreate$inboundSchema;
    /** @deprecated use `OtherSourcesOfWealthCreate$outboundSchema` instead. */
    OtherSourcesOfWealthCreate$.outboundSchema = OtherSourcesOfWealthCreate$outboundSchema;
})(OtherSourcesOfWealthCreate$ || (OtherSourcesOfWealthCreate$ = {}));
export function otherSourcesOfWealthCreateToJSON(otherSourcesOfWealthCreate) {
    return JSON.stringify(OtherSourcesOfWealthCreate$outboundSchema.parse(otherSourcesOfWealthCreate));
}
export function otherSourcesOfWealthCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OtherSourcesOfWealthCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OtherSourcesOfWealthCreate' from JSON`);
}
//# sourceMappingURL=othersourcesofwealthcreate.js.map