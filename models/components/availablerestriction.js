/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const AvailableRestriction$inboundSchema = z.object({
    description: z.string().optional(),
    display_name: z.string().optional(),
    restriction_code: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "display_name": "displayName",
        "restriction_code": "restrictionCode",
    });
});
/** @internal */
export const AvailableRestriction$outboundSchema = z.object({
    description: z.string().optional(),
    displayName: z.string().optional(),
    restrictionCode: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        displayName: "display_name",
        restrictionCode: "restriction_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AvailableRestriction$;
(function (AvailableRestriction$) {
    /** @deprecated use `AvailableRestriction$inboundSchema` instead. */
    AvailableRestriction$.inboundSchema = AvailableRestriction$inboundSchema;
    /** @deprecated use `AvailableRestriction$outboundSchema` instead. */
    AvailableRestriction$.outboundSchema = AvailableRestriction$outboundSchema;
})(AvailableRestriction$ || (AvailableRestriction$ = {}));
export function availableRestrictionToJSON(availableRestriction) {
    return JSON.stringify(AvailableRestriction$outboundSchema.parse(availableRestriction));
}
export function availableRestrictionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AvailableRestriction$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AvailableRestriction' from JSON`);
}
//# sourceMappingURL=availablerestriction.js.map