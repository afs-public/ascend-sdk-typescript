/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { AccountGoalsUpdate$inboundSchema, AccountGoalsUpdate$outboundSchema, } from "./accountgoalsupdate.js";
import { CustomerProfileUpdate$inboundSchema, CustomerProfileUpdate$outboundSchema, } from "./customerprofileupdate.js";
/** @internal */
export const InvestmentProfileUpdate$inboundSchema = z.object({
    account_goals: AccountGoalsUpdate$inboundSchema.optional(),
    customer_profile: CustomerProfileUpdate$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "account_goals": "accountGoals",
        "customer_profile": "customerProfile",
    });
});
/** @internal */
export const InvestmentProfileUpdate$outboundSchema = z.object({
    accountGoals: AccountGoalsUpdate$outboundSchema.optional(),
    customerProfile: CustomerProfileUpdate$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        accountGoals: "account_goals",
        customerProfile: "customer_profile",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestmentProfileUpdate$;
(function (InvestmentProfileUpdate$) {
    /** @deprecated use `InvestmentProfileUpdate$inboundSchema` instead. */
    InvestmentProfileUpdate$.inboundSchema = InvestmentProfileUpdate$inboundSchema;
    /** @deprecated use `InvestmentProfileUpdate$outboundSchema` instead. */
    InvestmentProfileUpdate$.outboundSchema = InvestmentProfileUpdate$outboundSchema;
})(InvestmentProfileUpdate$ || (InvestmentProfileUpdate$ = {}));
export function investmentProfileUpdateToJSON(investmentProfileUpdate) {
    return JSON.stringify(InvestmentProfileUpdate$outboundSchema.parse(investmentProfileUpdate));
}
export function investmentProfileUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestmentProfileUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestmentProfileUpdate' from JSON`);
}
//# sourceMappingURL=investmentprofileupdate.js.map