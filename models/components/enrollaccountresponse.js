/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Agreement$inboundSchema, Agreement$outboundSchema, } from "./agreement.js";
/** @internal */
export const EnrollAccountResponse$inboundSchema = z.object({
    agreements: z.array(Agreement$inboundSchema).optional(),
});
/** @internal */
export const EnrollAccountResponse$outboundSchema = z.object({
    agreements: z.array(Agreement$outboundSchema).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EnrollAccountResponse$;
(function (EnrollAccountResponse$) {
    /** @deprecated use `EnrollAccountResponse$inboundSchema` instead. */
    EnrollAccountResponse$.inboundSchema = EnrollAccountResponse$inboundSchema;
    /** @deprecated use `EnrollAccountResponse$outboundSchema` instead. */
    EnrollAccountResponse$.outboundSchema = EnrollAccountResponse$outboundSchema;
})(EnrollAccountResponse$ || (EnrollAccountResponse$ = {}));
export function enrollAccountResponseToJSON(enrollAccountResponse) {
    return JSON.stringify(EnrollAccountResponse$outboundSchema.parse(enrollAccountResponse));
}
export function enrollAccountResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EnrollAccountResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EnrollAccountResponse' from JSON`);
}
//# sourceMappingURL=enrollaccountresponse.js.map