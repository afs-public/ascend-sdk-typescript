/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * Cash transfer mechanism to search constraints for
 */
export var Mechanism;
(function (Mechanism) {
    Mechanism["Ach"] = "ACH";
    Mechanism["Ict"] = "ICT";
})(Mechanism || (Mechanism = {}));
/** @internal */
export const Mechanism$inboundSchema = z
    .union([
    z.nativeEnum(Mechanism),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const Mechanism$outboundSchema = z.union([
    z.nativeEnum(Mechanism),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Mechanism$;
(function (Mechanism$) {
    /** @deprecated use `Mechanism$inboundSchema` instead. */
    Mechanism$.inboundSchema = Mechanism$inboundSchema;
    /** @deprecated use `Mechanism$outboundSchema` instead. */
    Mechanism$.outboundSchema = Mechanism$outboundSchema;
})(Mechanism$ || (Mechanism$ = {}));
/** @internal */
export const RetrieveContributionConstraintsRequestCreate$inboundSchema = z.object({
    mechanism: Mechanism$inboundSchema,
    name: z.string(),
});
/** @internal */
export const RetrieveContributionConstraintsRequestCreate$outboundSchema = z.object({
    mechanism: Mechanism$outboundSchema,
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveContributionConstraintsRequestCreate$;
(function (RetrieveContributionConstraintsRequestCreate$) {
    /** @deprecated use `RetrieveContributionConstraintsRequestCreate$inboundSchema` instead. */
    RetrieveContributionConstraintsRequestCreate$.inboundSchema = RetrieveContributionConstraintsRequestCreate$inboundSchema;
    /** @deprecated use `RetrieveContributionConstraintsRequestCreate$outboundSchema` instead. */
    RetrieveContributionConstraintsRequestCreate$.outboundSchema = RetrieveContributionConstraintsRequestCreate$outboundSchema;
})(RetrieveContributionConstraintsRequestCreate$ || (RetrieveContributionConstraintsRequestCreate$ = {}));
export function retrieveContributionConstraintsRequestCreateToJSON(retrieveContributionConstraintsRequestCreate) {
    return JSON.stringify(RetrieveContributionConstraintsRequestCreate$outboundSchema.parse(retrieveContributionConstraintsRequestCreate));
}
export function retrieveContributionConstraintsRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveContributionConstraintsRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveContributionConstraintsRequestCreate' from JSON`);
}
//# sourceMappingURL=retrievecontributionconstraintsrequestcreate.js.map