/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ExternalAccountCreate$inboundSchema = z.object({
    account_number: z.string(),
    participant_number: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_number": "accountNumber",
        "participant_number": "participantNumber",
    });
});
/** @internal */
export const ExternalAccountCreate$outboundSchema = z.object({
    accountNumber: z.string(),
    participantNumber: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountNumber: "account_number",
        participantNumber: "participant_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExternalAccountCreate$;
(function (ExternalAccountCreate$) {
    /** @deprecated use `ExternalAccountCreate$inboundSchema` instead. */
    ExternalAccountCreate$.inboundSchema = ExternalAccountCreate$inboundSchema;
    /** @deprecated use `ExternalAccountCreate$outboundSchema` instead. */
    ExternalAccountCreate$.outboundSchema = ExternalAccountCreate$outboundSchema;
})(ExternalAccountCreate$ || (ExternalAccountCreate$ = {}));
export function externalAccountCreateToJSON(externalAccountCreate) {
    return JSON.stringify(ExternalAccountCreate$outboundSchema.parse(externalAccountCreate));
}
export function externalAccountCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExternalAccountCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExternalAccountCreate' from JSON`);
}
//# sourceMappingURL=externalaccountcreate.js.map