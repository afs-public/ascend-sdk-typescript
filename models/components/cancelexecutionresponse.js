"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CancelExecutionResponse$ = exports.CancelExecutionResponse$outboundSchema = exports.CancelExecutionResponse$inboundSchema = exports.CancelExecutionResponseExecution$ = exports.CancelExecutionResponseExecution$outboundSchema = exports.CancelExecutionResponseExecution$inboundSchema = exports.CancelExecutionResponseState$ = exports.CancelExecutionResponseState$outboundSchema = exports.CancelExecutionResponseState$inboundSchema = exports.CancelExecutionResponseQuantity$ = exports.CancelExecutionResponseQuantity$outboundSchema = exports.CancelExecutionResponseQuantity$inboundSchema = exports.CancelExecutionResponsePriceAdjustment$ = exports.CancelExecutionResponsePriceAdjustment$outboundSchema = exports.CancelExecutionResponsePriceAdjustment$inboundSchema = exports.CancelExecutionResponsePriceAdjustmentType$ = exports.CancelExecutionResponsePriceAdjustmentType$outboundSchema = exports.CancelExecutionResponsePriceAdjustmentType$inboundSchema = exports.CancelExecutionResponsePriceAdjustmentAmount$ = exports.CancelExecutionResponsePriceAdjustmentAmount$outboundSchema = exports.CancelExecutionResponsePriceAdjustmentAmount$inboundSchema = exports.CancelExecutionResponsePrice$ = exports.CancelExecutionResponsePrice$outboundSchema = exports.CancelExecutionResponsePrice$inboundSchema = exports.CancelExecutionResponsePrevailingMarketPrice$ = exports.CancelExecutionResponsePrevailingMarketPrice$outboundSchema = exports.CancelExecutionResponsePrevailingMarketPrice$inboundSchema = exports.CancelExecutionResponseGrossAmount$ = exports.CancelExecutionResponseGrossAmount$outboundSchema = exports.CancelExecutionResponseGrossAmount$inboundSchema = exports.CancelExecutionResponseCommissionAmount$ = exports.CancelExecutionResponseCommissionAmount$outboundSchema = exports.CancelExecutionResponseCommissionAmount$inboundSchema = exports.CancelExecutionResponseAccruedInterestAmount$ = exports.CancelExecutionResponseAccruedInterestAmount$outboundSchema = exports.CancelExecutionResponseAccruedInterestAmount$inboundSchema = exports.CancelExecutionResponseState = exports.CancelExecutionResponsePriceAdjustmentType = void 0;
exports.cancelExecutionResponseAccruedInterestAmountToJSON = cancelExecutionResponseAccruedInterestAmountToJSON;
exports.cancelExecutionResponseAccruedInterestAmountFromJSON = cancelExecutionResponseAccruedInterestAmountFromJSON;
exports.cancelExecutionResponseCommissionAmountToJSON = cancelExecutionResponseCommissionAmountToJSON;
exports.cancelExecutionResponseCommissionAmountFromJSON = cancelExecutionResponseCommissionAmountFromJSON;
exports.cancelExecutionResponseGrossAmountToJSON = cancelExecutionResponseGrossAmountToJSON;
exports.cancelExecutionResponseGrossAmountFromJSON = cancelExecutionResponseGrossAmountFromJSON;
exports.cancelExecutionResponsePrevailingMarketPriceToJSON = cancelExecutionResponsePrevailingMarketPriceToJSON;
exports.cancelExecutionResponsePrevailingMarketPriceFromJSON = cancelExecutionResponsePrevailingMarketPriceFromJSON;
exports.cancelExecutionResponsePriceToJSON = cancelExecutionResponsePriceToJSON;
exports.cancelExecutionResponsePriceFromJSON = cancelExecutionResponsePriceFromJSON;
exports.cancelExecutionResponsePriceAdjustmentAmountToJSON = cancelExecutionResponsePriceAdjustmentAmountToJSON;
exports.cancelExecutionResponsePriceAdjustmentAmountFromJSON = cancelExecutionResponsePriceAdjustmentAmountFromJSON;
exports.cancelExecutionResponsePriceAdjustmentToJSON = cancelExecutionResponsePriceAdjustmentToJSON;
exports.cancelExecutionResponsePriceAdjustmentFromJSON = cancelExecutionResponsePriceAdjustmentFromJSON;
exports.cancelExecutionResponseQuantityToJSON = cancelExecutionResponseQuantityToJSON;
exports.cancelExecutionResponseQuantityFromJSON = cancelExecutionResponseQuantityFromJSON;
exports.cancelExecutionResponseExecutionToJSON = cancelExecutionResponseExecutionToJSON;
exports.cancelExecutionResponseExecutionFromJSON = cancelExecutionResponseExecutionFromJSON;
exports.cancelExecutionResponseToJSON = cancelExecutionResponseToJSON;
exports.cancelExecutionResponseFromJSON = cancelExecutionResponseFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const enums_js_1 = require("../../types/enums.js");
const bondyield_js_1 = require("./bondyield.js");
/**
 * The type of price adjustment being applied by the broker to the net price of the security.
 */
var CancelExecutionResponsePriceAdjustmentType;
(function (CancelExecutionResponsePriceAdjustmentType) {
    CancelExecutionResponsePriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    CancelExecutionResponsePriceAdjustmentType["Markup"] = "MARKUP";
    CancelExecutionResponsePriceAdjustmentType["Markdown"] = "MARKDOWN";
    CancelExecutionResponsePriceAdjustmentType["GrossCredit"] = "GROSS_CREDIT";
})(CancelExecutionResponsePriceAdjustmentType || (exports.CancelExecutionResponsePriceAdjustmentType = CancelExecutionResponsePriceAdjustmentType = {}));
/**
 * The state that the trade is in.
 */
var CancelExecutionResponseState;
(function (CancelExecutionResponseState) {
    CancelExecutionResponseState["StateUnspecified"] = "STATE_UNSPECIFIED";
    CancelExecutionResponseState["Creating"] = "CREATING";
    CancelExecutionResponseState["Rebooking"] = "REBOOKING";
    CancelExecutionResponseState["Canceling"] = "CANCELING";
    CancelExecutionResponseState["Booked"] = "BOOKED";
    CancelExecutionResponseState["Rebooked"] = "REBOOKED";
    CancelExecutionResponseState["Canceled"] = "CANCELED";
    CancelExecutionResponseState["Failed"] = "FAILED";
})(CancelExecutionResponseState || (exports.CancelExecutionResponseState = CancelExecutionResponseState = {}));
/** @internal */
exports.CancelExecutionResponseAccruedInterestAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponseAccruedInterestAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponseAccruedInterestAmount$;
(function (CancelExecutionResponseAccruedInterestAmount$) {
    /** @deprecated use `CancelExecutionResponseAccruedInterestAmount$inboundSchema` instead. */
    CancelExecutionResponseAccruedInterestAmount$.inboundSchema = exports.CancelExecutionResponseAccruedInterestAmount$inboundSchema;
    /** @deprecated use `CancelExecutionResponseAccruedInterestAmount$outboundSchema` instead. */
    CancelExecutionResponseAccruedInterestAmount$.outboundSchema = exports.CancelExecutionResponseAccruedInterestAmount$outboundSchema;
})(CancelExecutionResponseAccruedInterestAmount$ || (exports.CancelExecutionResponseAccruedInterestAmount$ = CancelExecutionResponseAccruedInterestAmount$ = {}));
function cancelExecutionResponseAccruedInterestAmountToJSON(cancelExecutionResponseAccruedInterestAmount) {
    return JSON.stringify(exports.CancelExecutionResponseAccruedInterestAmount$outboundSchema.parse(cancelExecutionResponseAccruedInterestAmount));
}
function cancelExecutionResponseAccruedInterestAmountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponseAccruedInterestAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponseAccruedInterestAmount' from JSON`);
}
/** @internal */
exports.CancelExecutionResponseCommissionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponseCommissionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponseCommissionAmount$;
(function (CancelExecutionResponseCommissionAmount$) {
    /** @deprecated use `CancelExecutionResponseCommissionAmount$inboundSchema` instead. */
    CancelExecutionResponseCommissionAmount$.inboundSchema = exports.CancelExecutionResponseCommissionAmount$inboundSchema;
    /** @deprecated use `CancelExecutionResponseCommissionAmount$outboundSchema` instead. */
    CancelExecutionResponseCommissionAmount$.outboundSchema = exports.CancelExecutionResponseCommissionAmount$outboundSchema;
})(CancelExecutionResponseCommissionAmount$ || (exports.CancelExecutionResponseCommissionAmount$ = CancelExecutionResponseCommissionAmount$ = {}));
function cancelExecutionResponseCommissionAmountToJSON(cancelExecutionResponseCommissionAmount) {
    return JSON.stringify(exports.CancelExecutionResponseCommissionAmount$outboundSchema.parse(cancelExecutionResponseCommissionAmount));
}
function cancelExecutionResponseCommissionAmountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponseCommissionAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponseCommissionAmount' from JSON`);
}
/** @internal */
exports.CancelExecutionResponseGrossAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponseGrossAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponseGrossAmount$;
(function (CancelExecutionResponseGrossAmount$) {
    /** @deprecated use `CancelExecutionResponseGrossAmount$inboundSchema` instead. */
    CancelExecutionResponseGrossAmount$.inboundSchema = exports.CancelExecutionResponseGrossAmount$inboundSchema;
    /** @deprecated use `CancelExecutionResponseGrossAmount$outboundSchema` instead. */
    CancelExecutionResponseGrossAmount$.outboundSchema = exports.CancelExecutionResponseGrossAmount$outboundSchema;
})(CancelExecutionResponseGrossAmount$ || (exports.CancelExecutionResponseGrossAmount$ = CancelExecutionResponseGrossAmount$ = {}));
function cancelExecutionResponseGrossAmountToJSON(cancelExecutionResponseGrossAmount) {
    return JSON.stringify(exports.CancelExecutionResponseGrossAmount$outboundSchema.parse(cancelExecutionResponseGrossAmount));
}
function cancelExecutionResponseGrossAmountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponseGrossAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponseGrossAmount' from JSON`);
}
/** @internal */
exports.CancelExecutionResponsePrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponsePrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponsePrevailingMarketPrice$;
(function (CancelExecutionResponsePrevailingMarketPrice$) {
    /** @deprecated use `CancelExecutionResponsePrevailingMarketPrice$inboundSchema` instead. */
    CancelExecutionResponsePrevailingMarketPrice$.inboundSchema = exports.CancelExecutionResponsePrevailingMarketPrice$inboundSchema;
    /** @deprecated use `CancelExecutionResponsePrevailingMarketPrice$outboundSchema` instead. */
    CancelExecutionResponsePrevailingMarketPrice$.outboundSchema = exports.CancelExecutionResponsePrevailingMarketPrice$outboundSchema;
})(CancelExecutionResponsePrevailingMarketPrice$ || (exports.CancelExecutionResponsePrevailingMarketPrice$ = CancelExecutionResponsePrevailingMarketPrice$ = {}));
function cancelExecutionResponsePrevailingMarketPriceToJSON(cancelExecutionResponsePrevailingMarketPrice) {
    return JSON.stringify(exports.CancelExecutionResponsePrevailingMarketPrice$outboundSchema.parse(cancelExecutionResponsePrevailingMarketPrice));
}
function cancelExecutionResponsePrevailingMarketPriceFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponsePrevailingMarketPrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponsePrevailingMarketPrice' from JSON`);
}
/** @internal */
exports.CancelExecutionResponsePrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponsePrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponsePrice$;
(function (CancelExecutionResponsePrice$) {
    /** @deprecated use `CancelExecutionResponsePrice$inboundSchema` instead. */
    CancelExecutionResponsePrice$.inboundSchema = exports.CancelExecutionResponsePrice$inboundSchema;
    /** @deprecated use `CancelExecutionResponsePrice$outboundSchema` instead. */
    CancelExecutionResponsePrice$.outboundSchema = exports.CancelExecutionResponsePrice$outboundSchema;
})(CancelExecutionResponsePrice$ || (exports.CancelExecutionResponsePrice$ = CancelExecutionResponsePrice$ = {}));
function cancelExecutionResponsePriceToJSON(cancelExecutionResponsePrice) {
    return JSON.stringify(exports.CancelExecutionResponsePrice$outboundSchema.parse(cancelExecutionResponsePrice));
}
function cancelExecutionResponsePriceFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponsePrice$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponsePrice' from JSON`);
}
/** @internal */
exports.CancelExecutionResponsePriceAdjustmentAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponsePriceAdjustmentAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponsePriceAdjustmentAmount$;
(function (CancelExecutionResponsePriceAdjustmentAmount$) {
    /** @deprecated use `CancelExecutionResponsePriceAdjustmentAmount$inboundSchema` instead. */
    CancelExecutionResponsePriceAdjustmentAmount$.inboundSchema = exports.CancelExecutionResponsePriceAdjustmentAmount$inboundSchema;
    /** @deprecated use `CancelExecutionResponsePriceAdjustmentAmount$outboundSchema` instead. */
    CancelExecutionResponsePriceAdjustmentAmount$.outboundSchema = exports.CancelExecutionResponsePriceAdjustmentAmount$outboundSchema;
})(CancelExecutionResponsePriceAdjustmentAmount$ || (exports.CancelExecutionResponsePriceAdjustmentAmount$ = CancelExecutionResponsePriceAdjustmentAmount$ = {}));
function cancelExecutionResponsePriceAdjustmentAmountToJSON(cancelExecutionResponsePriceAdjustmentAmount) {
    return JSON.stringify(exports.CancelExecutionResponsePriceAdjustmentAmount$outboundSchema.parse(cancelExecutionResponsePriceAdjustmentAmount));
}
function cancelExecutionResponsePriceAdjustmentAmountFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponsePriceAdjustmentAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponsePriceAdjustmentAmount' from JSON`);
}
/** @internal */
exports.CancelExecutionResponsePriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(CancelExecutionResponsePriceAdjustmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.CancelExecutionResponsePriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(CancelExecutionResponsePriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponsePriceAdjustmentType$;
(function (CancelExecutionResponsePriceAdjustmentType$) {
    /** @deprecated use `CancelExecutionResponsePriceAdjustmentType$inboundSchema` instead. */
    CancelExecutionResponsePriceAdjustmentType$.inboundSchema = exports.CancelExecutionResponsePriceAdjustmentType$inboundSchema;
    /** @deprecated use `CancelExecutionResponsePriceAdjustmentType$outboundSchema` instead. */
    CancelExecutionResponsePriceAdjustmentType$.outboundSchema = exports.CancelExecutionResponsePriceAdjustmentType$outboundSchema;
})(CancelExecutionResponsePriceAdjustmentType$ || (exports.CancelExecutionResponsePriceAdjustmentType$ = CancelExecutionResponsePriceAdjustmentType$ = {}));
/** @internal */
exports.CancelExecutionResponsePriceAdjustment$inboundSchema = z.object({
    price_adjustment_amount: z.nullable(z.lazy(() => exports.CancelExecutionResponsePriceAdjustmentAmount$inboundSchema)).optional(),
    price_adjustment_type: exports.CancelExecutionResponsePriceAdjustmentType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
exports.CancelExecutionResponsePriceAdjustment$outboundSchema = z.object({
    priceAdjustmentAmount: z.nullable(z.lazy(() => exports.CancelExecutionResponsePriceAdjustmentAmount$outboundSchema)).optional(),
    priceAdjustmentType: exports.CancelExecutionResponsePriceAdjustmentType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponsePriceAdjustment$;
(function (CancelExecutionResponsePriceAdjustment$) {
    /** @deprecated use `CancelExecutionResponsePriceAdjustment$inboundSchema` instead. */
    CancelExecutionResponsePriceAdjustment$.inboundSchema = exports.CancelExecutionResponsePriceAdjustment$inboundSchema;
    /** @deprecated use `CancelExecutionResponsePriceAdjustment$outboundSchema` instead. */
    CancelExecutionResponsePriceAdjustment$.outboundSchema = exports.CancelExecutionResponsePriceAdjustment$outboundSchema;
})(CancelExecutionResponsePriceAdjustment$ || (exports.CancelExecutionResponsePriceAdjustment$ = CancelExecutionResponsePriceAdjustment$ = {}));
function cancelExecutionResponsePriceAdjustmentToJSON(cancelExecutionResponsePriceAdjustment) {
    return JSON.stringify(exports.CancelExecutionResponsePriceAdjustment$outboundSchema.parse(cancelExecutionResponsePriceAdjustment));
}
function cancelExecutionResponsePriceAdjustmentFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponsePriceAdjustment$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponsePriceAdjustment' from JSON`);
}
/** @internal */
exports.CancelExecutionResponseQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelExecutionResponseQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponseQuantity$;
(function (CancelExecutionResponseQuantity$) {
    /** @deprecated use `CancelExecutionResponseQuantity$inboundSchema` instead. */
    CancelExecutionResponseQuantity$.inboundSchema = exports.CancelExecutionResponseQuantity$inboundSchema;
    /** @deprecated use `CancelExecutionResponseQuantity$outboundSchema` instead. */
    CancelExecutionResponseQuantity$.outboundSchema = exports.CancelExecutionResponseQuantity$outboundSchema;
})(CancelExecutionResponseQuantity$ || (exports.CancelExecutionResponseQuantity$ = CancelExecutionResponseQuantity$ = {}));
function cancelExecutionResponseQuantityToJSON(cancelExecutionResponseQuantity) {
    return JSON.stringify(exports.CancelExecutionResponseQuantity$outboundSchema.parse(cancelExecutionResponseQuantity));
}
function cancelExecutionResponseQuantityFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponseQuantity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponseQuantity' from JSON`);
}
/** @internal */
exports.CancelExecutionResponseState$inboundSchema = z
    .union([
    z.nativeEnum(CancelExecutionResponseState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.CancelExecutionResponseState$outboundSchema = z.union([
    z.nativeEnum(CancelExecutionResponseState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponseState$;
(function (CancelExecutionResponseState$) {
    /** @deprecated use `CancelExecutionResponseState$inboundSchema` instead. */
    CancelExecutionResponseState$.inboundSchema = exports.CancelExecutionResponseState$inboundSchema;
    /** @deprecated use `CancelExecutionResponseState$outboundSchema` instead. */
    CancelExecutionResponseState$.outboundSchema = exports.CancelExecutionResponseState$outboundSchema;
})(CancelExecutionResponseState$ || (exports.CancelExecutionResponseState$ = CancelExecutionResponseState$ = {}));
/** @internal */
exports.CancelExecutionResponseExecution$inboundSchema = z.object({
    accrued_interest_amount: z.nullable(z.lazy(() => exports.CancelExecutionResponseAccruedInterestAmount$inboundSchema)).optional(),
    activity_id: z.string().optional(),
    bond_yield: z.array(bondyield_js_1.BondYield$inboundSchema).optional(),
    commission_amount: z.nullable(z.lazy(() => exports.CancelExecutionResponseCommissionAmount$inboundSchema)).optional(),
    execution_id: z.string().optional(),
    execution_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    external_id: z.string().optional(),
    gross_amount: z.nullable(z.lazy(() => exports.CancelExecutionResponseGrossAmount$inboundSchema)).optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.CancelExecutionResponsePrevailingMarketPrice$inboundSchema)).optional(),
    price: z.nullable(z.lazy(() => exports.CancelExecutionResponsePrice$inboundSchema))
        .optional(),
    price_adjustment: z.nullable(z.lazy(() => exports.CancelExecutionResponsePriceAdjustment$inboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.CancelExecutionResponseQuantity$inboundSchema)).optional(),
    state: exports.CancelExecutionResponseState$inboundSchema.optional(),
    street_execution_id: z.string().optional(),
    trade_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accrued_interest_amount": "accruedInterestAmount",
        "activity_id": "activityId",
        "bond_yield": "bondYield",
        "commission_amount": "commissionAmount",
        "execution_id": "executionId",
        "execution_time": "executionTime",
        "external_id": "externalId",
        "gross_amount": "grossAmount",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment": "priceAdjustment",
        "street_execution_id": "streetExecutionId",
        "trade_id": "tradeId",
    });
});
/** @internal */
exports.CancelExecutionResponseExecution$outboundSchema = z.object({
    accruedInterestAmount: z.nullable(z.lazy(() => exports.CancelExecutionResponseAccruedInterestAmount$outboundSchema)).optional(),
    activityId: z.string().optional(),
    bondYield: z.array(bondyield_js_1.BondYield$outboundSchema).optional(),
    commissionAmount: z.nullable(z.lazy(() => exports.CancelExecutionResponseCommissionAmount$outboundSchema)).optional(),
    executionId: z.string().optional(),
    executionTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    externalId: z.string().optional(),
    grossAmount: z.nullable(z.lazy(() => exports.CancelExecutionResponseGrossAmount$outboundSchema)).optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.CancelExecutionResponsePrevailingMarketPrice$outboundSchema)).optional(),
    price: z.nullable(z.lazy(() => exports.CancelExecutionResponsePrice$outboundSchema))
        .optional(),
    priceAdjustment: z.nullable(z.lazy(() => exports.CancelExecutionResponsePriceAdjustment$outboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.CancelExecutionResponseQuantity$outboundSchema)).optional(),
    state: exports.CancelExecutionResponseState$outboundSchema.optional(),
    streetExecutionId: z.string().optional(),
    tradeId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accruedInterestAmount: "accrued_interest_amount",
        activityId: "activity_id",
        bondYield: "bond_yield",
        commissionAmount: "commission_amount",
        executionId: "execution_id",
        executionTime: "execution_time",
        externalId: "external_id",
        grossAmount: "gross_amount",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustment: "price_adjustment",
        streetExecutionId: "street_execution_id",
        tradeId: "trade_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponseExecution$;
(function (CancelExecutionResponseExecution$) {
    /** @deprecated use `CancelExecutionResponseExecution$inboundSchema` instead. */
    CancelExecutionResponseExecution$.inboundSchema = exports.CancelExecutionResponseExecution$inboundSchema;
    /** @deprecated use `CancelExecutionResponseExecution$outboundSchema` instead. */
    CancelExecutionResponseExecution$.outboundSchema = exports.CancelExecutionResponseExecution$outboundSchema;
})(CancelExecutionResponseExecution$ || (exports.CancelExecutionResponseExecution$ = CancelExecutionResponseExecution$ = {}));
function cancelExecutionResponseExecutionToJSON(cancelExecutionResponseExecution) {
    return JSON.stringify(exports.CancelExecutionResponseExecution$outboundSchema.parse(cancelExecutionResponseExecution));
}
function cancelExecutionResponseExecutionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponseExecution$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponseExecution' from JSON`);
}
/** @internal */
exports.CancelExecutionResponse$inboundSchema = z.object({
    execution: z.nullable(z.lazy(() => exports.CancelExecutionResponseExecution$inboundSchema)).optional(),
});
/** @internal */
exports.CancelExecutionResponse$outboundSchema = z.object({
    execution: z.nullable(z.lazy(() => exports.CancelExecutionResponseExecution$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelExecutionResponse$;
(function (CancelExecutionResponse$) {
    /** @deprecated use `CancelExecutionResponse$inboundSchema` instead. */
    CancelExecutionResponse$.inboundSchema = exports.CancelExecutionResponse$inboundSchema;
    /** @deprecated use `CancelExecutionResponse$outboundSchema` instead. */
    CancelExecutionResponse$.outboundSchema = exports.CancelExecutionResponse$outboundSchema;
})(CancelExecutionResponse$ || (exports.CancelExecutionResponse$ = CancelExecutionResponse$ = {}));
function cancelExecutionResponseToJSON(cancelExecutionResponse) {
    return JSON.stringify(exports.CancelExecutionResponse$outboundSchema.parse(cancelExecutionResponse));
}
function cancelExecutionResponseFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CancelExecutionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelExecutionResponse' from JSON`);
}
//# sourceMappingURL=cancelexecutionresponse.js.map