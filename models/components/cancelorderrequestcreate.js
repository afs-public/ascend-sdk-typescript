/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * Only relevant for CAT reporting when clients have Apex do CAT reporting on their behalf. A value may be provided for non-Equity orders, and will be remembered, but the value will have no impact on how they are processed. Cancel requests without this field set will default to CLIENT
 */
export var CancelOrderRequestCreateCancelInitiator;
(function (CancelOrderRequestCreateCancelInitiator) {
    CancelOrderRequestCreateCancelInitiator["InitiatorUnspecified"] = "INITIATOR_UNSPECIFIED";
    CancelOrderRequestCreateCancelInitiator["Firm"] = "FIRM";
    CancelOrderRequestCreateCancelInitiator["Client"] = "CLIENT";
})(CancelOrderRequestCreateCancelInitiator || (CancelOrderRequestCreateCancelInitiator = {}));
/** @internal */
export const CancelOrderRequestCreateCancelInitiator$inboundSchema = z
    .union([
    z.nativeEnum(CancelOrderRequestCreateCancelInitiator),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const CancelOrderRequestCreateCancelInitiator$outboundSchema = z.union([
    z.nativeEnum(CancelOrderRequestCreateCancelInitiator),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CancelOrderRequestCreateCancelInitiator$;
(function (CancelOrderRequestCreateCancelInitiator$) {
    /** @deprecated use `CancelOrderRequestCreateCancelInitiator$inboundSchema` instead. */
    CancelOrderRequestCreateCancelInitiator$.inboundSchema = CancelOrderRequestCreateCancelInitiator$inboundSchema;
    /** @deprecated use `CancelOrderRequestCreateCancelInitiator$outboundSchema` instead. */
    CancelOrderRequestCreateCancelInitiator$.outboundSchema = CancelOrderRequestCreateCancelInitiator$outboundSchema;
})(CancelOrderRequestCreateCancelInitiator$ || (CancelOrderRequestCreateCancelInitiator$ = {}));
/** @internal */
export const CancelOrderRequestCreate$inboundSchema = z.object({
    cancel_initiator: CancelOrderRequestCreateCancelInitiator$inboundSchema
        .optional(),
    client_cancel_received_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    client_cancel_sent_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    name: z.string(),
}).transform((v) => {
    return remap$(v, {
        "cancel_initiator": "cancelInitiator",
        "client_cancel_received_time": "clientCancelReceivedTime",
        "client_cancel_sent_time": "clientCancelSentTime",
    });
});
/** @internal */
export const CancelOrderRequestCreate$outboundSchema = z.object({
    cancelInitiator: CancelOrderRequestCreateCancelInitiator$outboundSchema
        .optional(),
    clientCancelReceivedTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    clientCancelSentTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    name: z.string(),
}).transform((v) => {
    return remap$(v, {
        cancelInitiator: "cancel_initiator",
        clientCancelReceivedTime: "client_cancel_received_time",
        clientCancelSentTime: "client_cancel_sent_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CancelOrderRequestCreate$;
(function (CancelOrderRequestCreate$) {
    /** @deprecated use `CancelOrderRequestCreate$inboundSchema` instead. */
    CancelOrderRequestCreate$.inboundSchema = CancelOrderRequestCreate$inboundSchema;
    /** @deprecated use `CancelOrderRequestCreate$outboundSchema` instead. */
    CancelOrderRequestCreate$.outboundSchema = CancelOrderRequestCreate$outboundSchema;
})(CancelOrderRequestCreate$ || (CancelOrderRequestCreate$ = {}));
export function cancelOrderRequestCreateToJSON(cancelOrderRequestCreate) {
    return JSON.stringify(CancelOrderRequestCreate$outboundSchema.parse(cancelOrderRequestCreate));
}
export function cancelOrderRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CancelOrderRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelOrderRequestCreate' from JSON`);
}
//# sourceMappingURL=cancelorderrequestcreate.js.map