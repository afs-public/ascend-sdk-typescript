/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { BasketOrder$inboundSchema, BasketOrder$outboundSchema, } from "./basketorder.js";
/** @internal */
export const ListBasketOrdersResponse$inboundSchema = z.object({
    basket_orders: z.array(BasketOrder$inboundSchema).optional(),
    next_page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "basket_orders": "basketOrders",
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListBasketOrdersResponse$outboundSchema = z.object({
    basketOrders: z.array(BasketOrder$outboundSchema).optional(),
    nextPageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        basketOrders: "basket_orders",
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListBasketOrdersResponse$;
(function (ListBasketOrdersResponse$) {
    /** @deprecated use `ListBasketOrdersResponse$inboundSchema` instead. */
    ListBasketOrdersResponse$.inboundSchema = ListBasketOrdersResponse$inboundSchema;
    /** @deprecated use `ListBasketOrdersResponse$outboundSchema` instead. */
    ListBasketOrdersResponse$.outboundSchema = ListBasketOrdersResponse$outboundSchema;
})(ListBasketOrdersResponse$ || (ListBasketOrdersResponse$ = {}));
export function listBasketOrdersResponseToJSON(listBasketOrdersResponse) {
    return JSON.stringify(ListBasketOrdersResponse$outboundSchema.parse(listBasketOrdersResponse));
}
export function listBasketOrdersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListBasketOrdersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListBasketOrdersResponse' from JSON`);
}
//# sourceMappingURL=listbasketordersresponse.js.map