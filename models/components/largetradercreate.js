/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DateCreate$inboundSchema, DateCreate$outboundSchema, } from "./datecreate.js";
/** @internal */
export const LargeTraderCreate$inboundSchema = z.object({
    effective_date: DateCreate$inboundSchema,
    large_trader_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "effective_date": "effectiveDate",
        "large_trader_id": "largeTraderId",
    });
});
/** @internal */
export const LargeTraderCreate$outboundSchema = z.object({
    effectiveDate: DateCreate$outboundSchema,
    largeTraderId: z.string(),
}).transform((v) => {
    return remap$(v, {
        effectiveDate: "effective_date",
        largeTraderId: "large_trader_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LargeTraderCreate$;
(function (LargeTraderCreate$) {
    /** @deprecated use `LargeTraderCreate$inboundSchema` instead. */
    LargeTraderCreate$.inboundSchema = LargeTraderCreate$inboundSchema;
    /** @deprecated use `LargeTraderCreate$outboundSchema` instead. */
    LargeTraderCreate$.outboundSchema = LargeTraderCreate$outboundSchema;
})(LargeTraderCreate$ || (LargeTraderCreate$ = {}));
export function largeTraderCreateToJSON(largeTraderCreate) {
    return JSON.stringify(LargeTraderCreate$outboundSchema.parse(largeTraderCreate));
}
export function largeTraderCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LargeTraderCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LargeTraderCreate' from JSON`);
}
//# sourceMappingURL=largetradercreate.js.map