/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ReuseBankRelationshipRequestCreate$inboundSchema = z.object({
    parent: z.string(),
    source_bank_relationship: z.string(),
}).transform((v) => {
    return remap$(v, {
        "source_bank_relationship": "sourceBankRelationship",
    });
});
/** @internal */
export const ReuseBankRelationshipRequestCreate$outboundSchema = z.object({
    parent: z.string(),
    sourceBankRelationship: z.string(),
}).transform((v) => {
    return remap$(v, {
        sourceBankRelationship: "source_bank_relationship",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ReuseBankRelationshipRequestCreate$;
(function (ReuseBankRelationshipRequestCreate$) {
    /** @deprecated use `ReuseBankRelationshipRequestCreate$inboundSchema` instead. */
    ReuseBankRelationshipRequestCreate$.inboundSchema = ReuseBankRelationshipRequestCreate$inboundSchema;
    /** @deprecated use `ReuseBankRelationshipRequestCreate$outboundSchema` instead. */
    ReuseBankRelationshipRequestCreate$.outboundSchema = ReuseBankRelationshipRequestCreate$outboundSchema;
})(ReuseBankRelationshipRequestCreate$ || (ReuseBankRelationshipRequestCreate$ = {}));
export function reuseBankRelationshipRequestCreateToJSON(reuseBankRelationshipRequestCreate) {
    return JSON.stringify(ReuseBankRelationshipRequestCreate$outboundSchema.parse(reuseBankRelationshipRequestCreate));
}
export function reuseBankRelationshipRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ReuseBankRelationshipRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReuseBankRelationshipRequestCreate' from JSON`);
}
//# sourceMappingURL=reusebankrelationshiprequestcreate.js.map