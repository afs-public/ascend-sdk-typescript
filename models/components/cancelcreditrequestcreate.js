/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CancelCreditRequestCreate$inboundSchema = z.object({
    name: z.string(),
    reason: z.string().optional(),
});
/** @internal */
export const CancelCreditRequestCreate$outboundSchema = z.object({
    name: z.string(),
    reason: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CancelCreditRequestCreate$;
(function (CancelCreditRequestCreate$) {
    /** @deprecated use `CancelCreditRequestCreate$inboundSchema` instead. */
    CancelCreditRequestCreate$.inboundSchema = CancelCreditRequestCreate$inboundSchema;
    /** @deprecated use `CancelCreditRequestCreate$outboundSchema` instead. */
    CancelCreditRequestCreate$.outboundSchema = CancelCreditRequestCreate$outboundSchema;
})(CancelCreditRequestCreate$ || (CancelCreditRequestCreate$ = {}));
export function cancelCreditRequestCreateToJSON(cancelCreditRequestCreate) {
    return JSON.stringify(CancelCreditRequestCreate$outboundSchema.parse(cancelCreditRequestCreate));
}
export function cancelCreditRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CancelCreditRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelCreditRequestCreate' from JSON`);
}
//# sourceMappingURL=cancelcreditrequestcreate.js.map