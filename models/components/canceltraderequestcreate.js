/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CancelTradeRequestCreate$inboundSchema = z.object({
    name: z.string(),
});
/** @internal */
export const CancelTradeRequestCreate$outboundSchema = z.object({
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CancelTradeRequestCreate$;
(function (CancelTradeRequestCreate$) {
    /** @deprecated use `CancelTradeRequestCreate$inboundSchema` instead. */
    CancelTradeRequestCreate$.inboundSchema = CancelTradeRequestCreate$inboundSchema;
    /** @deprecated use `CancelTradeRequestCreate$outboundSchema` instead. */
    CancelTradeRequestCreate$.outboundSchema = CancelTradeRequestCreate$outboundSchema;
})(CancelTradeRequestCreate$ || (CancelTradeRequestCreate$ = {}));
export function cancelTradeRequestCreateToJSON(cancelTradeRequestCreate) {
    return JSON.stringify(CancelTradeRequestCreate$outboundSchema.parse(cancelTradeRequestCreate));
}
export function cancelTradeRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CancelTradeRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelTradeRequestCreate' from JSON`);
}
//# sourceMappingURL=canceltraderequestcreate.js.map