/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DescriptionDetail$inboundSchema, DescriptionDetail$outboundSchema, } from "./descriptiondetail.js";
import { SanctionsListDetail$inboundSchema, SanctionsListDetail$outboundSchema, } from "./sanctionslistdetail.js";
/** @internal */
export const RelatedProfile$inboundSchema = z.object({
    description_details: z.array(DescriptionDetail$inboundSchema).optional(),
    dow_jones_person_id: z.number().int().optional(),
    given_name: z.string().optional(),
    middle_names: z.string().optional(),
    name_suffix: z.string().optional(),
    relationship_type: z.string().optional(),
    sanctions_list_details: z.array(SanctionsListDetail$inboundSchema).optional(),
    surname: z.string().optional(),
    title_honorific: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "description_details": "descriptionDetails",
        "dow_jones_person_id": "dowJonesPersonId",
        "given_name": "givenName",
        "middle_names": "middleNames",
        "name_suffix": "nameSuffix",
        "relationship_type": "relationshipType",
        "sanctions_list_details": "sanctionsListDetails",
        "title_honorific": "titleHonorific",
    });
});
/** @internal */
export const RelatedProfile$outboundSchema = z.object({
    descriptionDetails: z.array(DescriptionDetail$outboundSchema).optional(),
    dowJonesPersonId: z.number().int().optional(),
    givenName: z.string().optional(),
    middleNames: z.string().optional(),
    nameSuffix: z.string().optional(),
    relationshipType: z.string().optional(),
    sanctionsListDetails: z.array(SanctionsListDetail$outboundSchema).optional(),
    surname: z.string().optional(),
    titleHonorific: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        descriptionDetails: "description_details",
        dowJonesPersonId: "dow_jones_person_id",
        givenName: "given_name",
        middleNames: "middle_names",
        nameSuffix: "name_suffix",
        relationshipType: "relationship_type",
        sanctionsListDetails: "sanctions_list_details",
        titleHonorific: "title_honorific",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RelatedProfile$;
(function (RelatedProfile$) {
    /** @deprecated use `RelatedProfile$inboundSchema` instead. */
    RelatedProfile$.inboundSchema = RelatedProfile$inboundSchema;
    /** @deprecated use `RelatedProfile$outboundSchema` instead. */
    RelatedProfile$.outboundSchema = RelatedProfile$outboundSchema;
})(RelatedProfile$ || (RelatedProfile$ = {}));
export function relatedProfileToJSON(relatedProfile) {
    return JSON.stringify(RelatedProfile$outboundSchema.parse(relatedProfile));
}
export function relatedProfileFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RelatedProfile$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RelatedProfile' from JSON`);
}
//# sourceMappingURL=relatedprofile.js.map