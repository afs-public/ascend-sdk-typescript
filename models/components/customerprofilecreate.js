/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * Annual income range; the low number is exclusive, the high number is inclusive
 */
export var AnnualIncomeRangeUsd;
(function (AnnualIncomeRangeUsd) {
    AnnualIncomeRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    AnnualIncomeRangeUsd["Under25K"] = "UNDER_25K";
    AnnualIncomeRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    AnnualIncomeRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    AnnualIncomeRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    AnnualIncomeRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    AnnualIncomeRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    AnnualIncomeRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    AnnualIncomeRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    AnnualIncomeRangeUsd["Over5M"] = "OVER_5M";
})(AnnualIncomeRangeUsd || (AnnualIncomeRangeUsd = {}));
/**
 * Investment experience.
 */
export var InvestmentExperience;
(function (InvestmentExperience) {
    InvestmentExperience["InvestmentExperienceUnspecified"] = "INVESTMENT_EXPERIENCE_UNSPECIFIED";
    InvestmentExperience["None"] = "NONE";
    InvestmentExperience["Limited"] = "LIMITED";
    InvestmentExperience["Good"] = "GOOD";
    InvestmentExperience["Extensive"] = "EXTENSIVE";
})(InvestmentExperience || (InvestmentExperience = {}));
/**
 * Liquid net worth range; the low number is exclusive, the high number is inclusive
 */
export var LiquidNetWorthRangeUsd;
(function (LiquidNetWorthRangeUsd) {
    LiquidNetWorthRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    LiquidNetWorthRangeUsd["Under25K"] = "UNDER_25K";
    LiquidNetWorthRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    LiquidNetWorthRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    LiquidNetWorthRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    LiquidNetWorthRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    LiquidNetWorthRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    LiquidNetWorthRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    LiquidNetWorthRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    LiquidNetWorthRangeUsd["Over5M"] = "OVER_5M";
})(LiquidNetWorthRangeUsd || (LiquidNetWorthRangeUsd = {}));
/**
 * Total net worth range; the low number is exclusive, the high number is inclusive
 */
export var TotalNetWorthRangeUsd;
(function (TotalNetWorthRangeUsd) {
    TotalNetWorthRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    TotalNetWorthRangeUsd["Under25K"] = "UNDER_25K";
    TotalNetWorthRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    TotalNetWorthRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    TotalNetWorthRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    TotalNetWorthRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    TotalNetWorthRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    TotalNetWorthRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    TotalNetWorthRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    TotalNetWorthRangeUsd["Over5M"] = "OVER_5M";
})(TotalNetWorthRangeUsd || (TotalNetWorthRangeUsd = {}));
/** @internal */
export const AnnualIncomeRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(AnnualIncomeRangeUsd),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AnnualIncomeRangeUsd$outboundSchema = z.union([
    z.nativeEnum(AnnualIncomeRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AnnualIncomeRangeUsd$;
(function (AnnualIncomeRangeUsd$) {
    /** @deprecated use `AnnualIncomeRangeUsd$inboundSchema` instead. */
    AnnualIncomeRangeUsd$.inboundSchema = AnnualIncomeRangeUsd$inboundSchema;
    /** @deprecated use `AnnualIncomeRangeUsd$outboundSchema` instead. */
    AnnualIncomeRangeUsd$.outboundSchema = AnnualIncomeRangeUsd$outboundSchema;
})(AnnualIncomeRangeUsd$ || (AnnualIncomeRangeUsd$ = {}));
/** @internal */
export const InvestmentExperience$inboundSchema = z
    .union([
    z.nativeEnum(InvestmentExperience),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const InvestmentExperience$outboundSchema = z.union([
    z.nativeEnum(InvestmentExperience),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestmentExperience$;
(function (InvestmentExperience$) {
    /** @deprecated use `InvestmentExperience$inboundSchema` instead. */
    InvestmentExperience$.inboundSchema = InvestmentExperience$inboundSchema;
    /** @deprecated use `InvestmentExperience$outboundSchema` instead. */
    InvestmentExperience$.outboundSchema = InvestmentExperience$outboundSchema;
})(InvestmentExperience$ || (InvestmentExperience$ = {}));
/** @internal */
export const LiquidNetWorthRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(LiquidNetWorthRangeUsd),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const LiquidNetWorthRangeUsd$outboundSchema = z.union([
    z.nativeEnum(LiquidNetWorthRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LiquidNetWorthRangeUsd$;
(function (LiquidNetWorthRangeUsd$) {
    /** @deprecated use `LiquidNetWorthRangeUsd$inboundSchema` instead. */
    LiquidNetWorthRangeUsd$.inboundSchema = LiquidNetWorthRangeUsd$inboundSchema;
    /** @deprecated use `LiquidNetWorthRangeUsd$outboundSchema` instead. */
    LiquidNetWorthRangeUsd$.outboundSchema = LiquidNetWorthRangeUsd$outboundSchema;
})(LiquidNetWorthRangeUsd$ || (LiquidNetWorthRangeUsd$ = {}));
/** @internal */
export const TotalNetWorthRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(TotalNetWorthRangeUsd),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const TotalNetWorthRangeUsd$outboundSchema = z.union([
    z.nativeEnum(TotalNetWorthRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TotalNetWorthRangeUsd$;
(function (TotalNetWorthRangeUsd$) {
    /** @deprecated use `TotalNetWorthRangeUsd$inboundSchema` instead. */
    TotalNetWorthRangeUsd$.inboundSchema = TotalNetWorthRangeUsd$inboundSchema;
    /** @deprecated use `TotalNetWorthRangeUsd$outboundSchema` instead. */
    TotalNetWorthRangeUsd$.outboundSchema = TotalNetWorthRangeUsd$outboundSchema;
})(TotalNetWorthRangeUsd$ || (TotalNetWorthRangeUsd$ = {}));
/** @internal */
export const CustomerProfileCreate$inboundSchema = z.object({
    annual_income_range_usd: AnnualIncomeRangeUsd$inboundSchema.optional(),
    federal_tax_bracket: z.number().optional(),
    investment_experience: InvestmentExperience$inboundSchema.optional(),
    liquid_net_worth_range_usd: LiquidNetWorthRangeUsd$inboundSchema.optional(),
    total_net_worth_range_usd: TotalNetWorthRangeUsd$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "annual_income_range_usd": "annualIncomeRangeUsd",
        "federal_tax_bracket": "federalTaxBracket",
        "investment_experience": "investmentExperience",
        "liquid_net_worth_range_usd": "liquidNetWorthRangeUsd",
        "total_net_worth_range_usd": "totalNetWorthRangeUsd",
    });
});
/** @internal */
export const CustomerProfileCreate$outboundSchema = z.object({
    annualIncomeRangeUsd: AnnualIncomeRangeUsd$outboundSchema.optional(),
    federalTaxBracket: z.number().optional(),
    investmentExperience: InvestmentExperience$outboundSchema.optional(),
    liquidNetWorthRangeUsd: LiquidNetWorthRangeUsd$outboundSchema.optional(),
    totalNetWorthRangeUsd: TotalNetWorthRangeUsd$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        annualIncomeRangeUsd: "annual_income_range_usd",
        federalTaxBracket: "federal_tax_bracket",
        investmentExperience: "investment_experience",
        liquidNetWorthRangeUsd: "liquid_net_worth_range_usd",
        totalNetWorthRangeUsd: "total_net_worth_range_usd",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerProfileCreate$;
(function (CustomerProfileCreate$) {
    /** @deprecated use `CustomerProfileCreate$inboundSchema` instead. */
    CustomerProfileCreate$.inboundSchema = CustomerProfileCreate$inboundSchema;
    /** @deprecated use `CustomerProfileCreate$outboundSchema` instead. */
    CustomerProfileCreate$.outboundSchema = CustomerProfileCreate$outboundSchema;
})(CustomerProfileCreate$ || (CustomerProfileCreate$ = {}));
export function customerProfileCreateToJSON(customerProfileCreate) {
    return JSON.stringify(CustomerProfileCreate$outboundSchema.parse(customerProfileCreate));
}
export function customerProfileCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerProfileCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerProfileCreate' from JSON`);
}
//# sourceMappingURL=customerprofilecreate.js.map