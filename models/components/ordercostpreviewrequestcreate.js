/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { DecimalCreate$inboundSchema, DecimalCreate$outboundSchema, } from "./decimalcreate.js";
import { LimitPriceCreate$inboundSchema, LimitPriceCreate$outboundSchema, } from "./limitpricecreate.js";
/**
 * The type of asset being evaluated in cost calculations.
 */
export var OrderCostPreviewRequestCreateAssetType;
(function (OrderCostPreviewRequestCreateAssetType) {
    OrderCostPreviewRequestCreateAssetType["FixedIncome"] = "FIXED_INCOME";
})(OrderCostPreviewRequestCreateAssetType || (OrderCostPreviewRequestCreateAssetType = {}));
/**
 * Capacity used in determining the order cost. Defaults to "AGENCY" if no value specified.
 */
export var OrderCostPreviewRequestCreateBrokerCapacity;
(function (OrderCostPreviewRequestCreateBrokerCapacity) {
    OrderCostPreviewRequestCreateBrokerCapacity["BrokerCapacityUnspecified"] = "BROKER_CAPACITY_UNSPECIFIED";
    OrderCostPreviewRequestCreateBrokerCapacity["Agency"] = "AGENCY";
    OrderCostPreviewRequestCreateBrokerCapacity["Principal"] = "PRINCIPAL";
})(OrderCostPreviewRequestCreateBrokerCapacity || (OrderCostPreviewRequestCreateBrokerCapacity = {}));
/**
 * The identifier type of the asset being sought
 */
export var OrderCostPreviewRequestCreateIdentifierType;
(function (OrderCostPreviewRequestCreateIdentifierType) {
    OrderCostPreviewRequestCreateIdentifierType["AssetId"] = "ASSET_ID";
    OrderCostPreviewRequestCreateIdentifierType["Cusip"] = "CUSIP";
    OrderCostPreviewRequestCreateIdentifierType["Isin"] = "ISIN";
})(OrderCostPreviewRequestCreateIdentifierType || (OrderCostPreviewRequestCreateIdentifierType = {}));
/** @internal */
export const OrderCostPreviewRequestCreateAssetType$inboundSchema = z
    .union([
    z.nativeEnum(OrderCostPreviewRequestCreateAssetType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const OrderCostPreviewRequestCreateAssetType$outboundSchema = z.union([
    z.nativeEnum(OrderCostPreviewRequestCreateAssetType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderCostPreviewRequestCreateAssetType$;
(function (OrderCostPreviewRequestCreateAssetType$) {
    /** @deprecated use `OrderCostPreviewRequestCreateAssetType$inboundSchema` instead. */
    OrderCostPreviewRequestCreateAssetType$.inboundSchema = OrderCostPreviewRequestCreateAssetType$inboundSchema;
    /** @deprecated use `OrderCostPreviewRequestCreateAssetType$outboundSchema` instead. */
    OrderCostPreviewRequestCreateAssetType$.outboundSchema = OrderCostPreviewRequestCreateAssetType$outboundSchema;
})(OrderCostPreviewRequestCreateAssetType$ || (OrderCostPreviewRequestCreateAssetType$ = {}));
/** @internal */
export const OrderCostPreviewRequestCreateBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(OrderCostPreviewRequestCreateBrokerCapacity),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const OrderCostPreviewRequestCreateBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(OrderCostPreviewRequestCreateBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderCostPreviewRequestCreateBrokerCapacity$;
(function (OrderCostPreviewRequestCreateBrokerCapacity$) {
    /** @deprecated use `OrderCostPreviewRequestCreateBrokerCapacity$inboundSchema` instead. */
    OrderCostPreviewRequestCreateBrokerCapacity$.inboundSchema = OrderCostPreviewRequestCreateBrokerCapacity$inboundSchema;
    /** @deprecated use `OrderCostPreviewRequestCreateBrokerCapacity$outboundSchema` instead. */
    OrderCostPreviewRequestCreateBrokerCapacity$.outboundSchema = OrderCostPreviewRequestCreateBrokerCapacity$outboundSchema;
})(OrderCostPreviewRequestCreateBrokerCapacity$ || (OrderCostPreviewRequestCreateBrokerCapacity$ = {}));
/** @internal */
export const OrderCostPreviewRequestCreateIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(OrderCostPreviewRequestCreateIdentifierType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const OrderCostPreviewRequestCreateIdentifierType$outboundSchema = z.union([
    z.nativeEnum(OrderCostPreviewRequestCreateIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderCostPreviewRequestCreateIdentifierType$;
(function (OrderCostPreviewRequestCreateIdentifierType$) {
    /** @deprecated use `OrderCostPreviewRequestCreateIdentifierType$inboundSchema` instead. */
    OrderCostPreviewRequestCreateIdentifierType$.inboundSchema = OrderCostPreviewRequestCreateIdentifierType$inboundSchema;
    /** @deprecated use `OrderCostPreviewRequestCreateIdentifierType$outboundSchema` instead. */
    OrderCostPreviewRequestCreateIdentifierType$.outboundSchema = OrderCostPreviewRequestCreateIdentifierType$outboundSchema;
})(OrderCostPreviewRequestCreateIdentifierType$ || (OrderCostPreviewRequestCreateIdentifierType$ = {}));
/** @internal */
export const OrderCostPreviewRequestCreate$inboundSchema = z.object({
    asset_type: OrderCostPreviewRequestCreateAssetType$inboundSchema,
    broker_capacity: OrderCostPreviewRequestCreateBrokerCapacity$inboundSchema
        .optional(),
    identifier: z.string(),
    identifier_type: OrderCostPreviewRequestCreateIdentifierType$inboundSchema,
    limit_price: LimitPriceCreate$inboundSchema,
    parent: z.string(),
    quantity: DecimalCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "asset_type": "assetType",
        "broker_capacity": "brokerCapacity",
        "identifier_type": "identifierType",
        "limit_price": "limitPrice",
    });
});
/** @internal */
export const OrderCostPreviewRequestCreate$outboundSchema = z.object({
    assetType: OrderCostPreviewRequestCreateAssetType$outboundSchema,
    brokerCapacity: OrderCostPreviewRequestCreateBrokerCapacity$outboundSchema
        .optional(),
    identifier: z.string(),
    identifierType: OrderCostPreviewRequestCreateIdentifierType$outboundSchema,
    limitPrice: LimitPriceCreate$outboundSchema,
    parent: z.string(),
    quantity: DecimalCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        assetType: "asset_type",
        brokerCapacity: "broker_capacity",
        identifierType: "identifier_type",
        limitPrice: "limit_price",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderCostPreviewRequestCreate$;
(function (OrderCostPreviewRequestCreate$) {
    /** @deprecated use `OrderCostPreviewRequestCreate$inboundSchema` instead. */
    OrderCostPreviewRequestCreate$.inboundSchema = OrderCostPreviewRequestCreate$inboundSchema;
    /** @deprecated use `OrderCostPreviewRequestCreate$outboundSchema` instead. */
    OrderCostPreviewRequestCreate$.outboundSchema = OrderCostPreviewRequestCreate$outboundSchema;
})(OrderCostPreviewRequestCreate$ || (OrderCostPreviewRequestCreate$ = {}));
export function orderCostPreviewRequestCreateToJSON(orderCostPreviewRequestCreate) {
    return JSON.stringify(OrderCostPreviewRequestCreate$outboundSchema.parse(orderCostPreviewRequestCreate));
}
export function orderCostPreviewRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderCostPreviewRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderCostPreviewRequestCreate' from JSON`);
}
//# sourceMappingURL=ordercostpreviewrequestcreate.js.map