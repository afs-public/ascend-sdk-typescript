/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * Option to auto-enroll in Dividend Reinvestment; defaults to DIVIDEND_REINVESTMENT_ENROLL
 */
export var EstateEnrollmentMetadataCreateDividendReinvestmentPlan;
(function (EstateEnrollmentMetadataCreateDividendReinvestmentPlan) {
    EstateEnrollmentMetadataCreateDividendReinvestmentPlan["AutoEnrollDividendReinvestmentUnspecified"] = "AUTO_ENROLL_DIVIDEND_REINVESTMENT_UNSPECIFIED";
    EstateEnrollmentMetadataCreateDividendReinvestmentPlan["DividendReinvestmentEnroll"] = "DIVIDEND_REINVESTMENT_ENROLL";
    EstateEnrollmentMetadataCreateDividendReinvestmentPlan["DividendReinvestmentDecline"] = "DIVIDEND_REINVESTMENT_DECLINE";
})(EstateEnrollmentMetadataCreateDividendReinvestmentPlan || (EstateEnrollmentMetadataCreateDividendReinvestmentPlan = {}));
/** @internal */
export const EstateEnrollmentMetadataCreateDividendReinvestmentPlan$inboundSchema = z
    .union([
    z.nativeEnum(EstateEnrollmentMetadataCreateDividendReinvestmentPlan),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const EstateEnrollmentMetadataCreateDividendReinvestmentPlan$outboundSchema = z.union([
    z.nativeEnum(EstateEnrollmentMetadataCreateDividendReinvestmentPlan),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EstateEnrollmentMetadataCreateDividendReinvestmentPlan$;
(function (EstateEnrollmentMetadataCreateDividendReinvestmentPlan$) {
    /** @deprecated use `EstateEnrollmentMetadataCreateDividendReinvestmentPlan$inboundSchema` instead. */
    EstateEnrollmentMetadataCreateDividendReinvestmentPlan$.inboundSchema = EstateEnrollmentMetadataCreateDividendReinvestmentPlan$inboundSchema;
    /** @deprecated use `EstateEnrollmentMetadataCreateDividendReinvestmentPlan$outboundSchema` instead. */
    EstateEnrollmentMetadataCreateDividendReinvestmentPlan$.outboundSchema = EstateEnrollmentMetadataCreateDividendReinvestmentPlan$outboundSchema;
})(EstateEnrollmentMetadataCreateDividendReinvestmentPlan$ || (EstateEnrollmentMetadataCreateDividendReinvestmentPlan$ = {}));
/** @internal */
export const EstateEnrollmentMetadataCreate$inboundSchema = z.object({
    certificate_of_appointment_document_id: z.string().optional(),
    dividend_reinvestment_plan: EstateEnrollmentMetadataCreateDividendReinvestmentPlan$inboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "certificate_of_appointment_document_id": "certificateOfAppointmentDocumentId",
        "dividend_reinvestment_plan": "dividendReinvestmentPlan",
    });
});
/** @internal */
export const EstateEnrollmentMetadataCreate$outboundSchema = z.object({
    certificateOfAppointmentDocumentId: z.string().optional(),
    dividendReinvestmentPlan: EstateEnrollmentMetadataCreateDividendReinvestmentPlan$outboundSchema
        .optional(),
}).transform((v) => {
    return remap$(v, {
        certificateOfAppointmentDocumentId: "certificate_of_appointment_document_id",
        dividendReinvestmentPlan: "dividend_reinvestment_plan",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var EstateEnrollmentMetadataCreate$;
(function (EstateEnrollmentMetadataCreate$) {
    /** @deprecated use `EstateEnrollmentMetadataCreate$inboundSchema` instead. */
    EstateEnrollmentMetadataCreate$.inboundSchema = EstateEnrollmentMetadataCreate$inboundSchema;
    /** @deprecated use `EstateEnrollmentMetadataCreate$outboundSchema` instead. */
    EstateEnrollmentMetadataCreate$.outboundSchema = EstateEnrollmentMetadataCreate$outboundSchema;
})(EstateEnrollmentMetadataCreate$ || (EstateEnrollmentMetadataCreate$ = {}));
export function estateEnrollmentMetadataCreateToJSON(estateEnrollmentMetadataCreate) {
    return JSON.stringify(EstateEnrollmentMetadataCreate$outboundSchema.parse(estateEnrollmentMetadataCreate));
}
export function estateEnrollmentMetadataCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => EstateEnrollmentMetadataCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'EstateEnrollmentMetadataCreate' from JSON`);
}
//# sourceMappingURL=estateenrollmentmetadatacreate.js.map