/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The type of retirement contribution.
 */
export var RetirementContributionCreateType;
(function (RetirementContributionCreateType) {
    RetirementContributionCreateType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    RetirementContributionCreateType["Regular"] = "REGULAR";
    RetirementContributionCreateType["Employee"] = "EMPLOYEE";
    RetirementContributionCreateType["Employer"] = "EMPLOYER";
    RetirementContributionCreateType["Recharacterization"] = "RECHARACTERIZATION";
    RetirementContributionCreateType["Rollover60Day"] = "ROLLOVER_60_DAY";
    RetirementContributionCreateType["RolloverDirect"] = "ROLLOVER_DIRECT";
    RetirementContributionCreateType["Transfer"] = "TRANSFER";
    RetirementContributionCreateType["TrusteeFee"] = "TRUSTEE_FEE";
    RetirementContributionCreateType["Conversion"] = "CONVERSION";
    RetirementContributionCreateType["Repayment"] = "REPAYMENT";
    RetirementContributionCreateType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(RetirementContributionCreateType || (RetirementContributionCreateType = {}));
/** @internal */
export const RetirementContributionCreateType$inboundSchema = z
    .union([
    z.nativeEnum(RetirementContributionCreateType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const RetirementContributionCreateType$outboundSchema = z.union([
    z.nativeEnum(RetirementContributionCreateType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetirementContributionCreateType$;
(function (RetirementContributionCreateType$) {
    /** @deprecated use `RetirementContributionCreateType$inboundSchema` instead. */
    RetirementContributionCreateType$.inboundSchema = RetirementContributionCreateType$inboundSchema;
    /** @deprecated use `RetirementContributionCreateType$outboundSchema` instead. */
    RetirementContributionCreateType$.outboundSchema = RetirementContributionCreateType$outboundSchema;
})(RetirementContributionCreateType$ || (RetirementContributionCreateType$ = {}));
/** @internal */
export const RetirementContributionCreate$inboundSchema = z.object({
    tax_year: z.number().int(),
    type: RetirementContributionCreateType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "tax_year": "taxYear",
    });
});
/** @internal */
export const RetirementContributionCreate$outboundSchema = z.object({
    taxYear: z.number().int(),
    type: RetirementContributionCreateType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetirementContributionCreate$;
(function (RetirementContributionCreate$) {
    /** @deprecated use `RetirementContributionCreate$inboundSchema` instead. */
    RetirementContributionCreate$.inboundSchema = RetirementContributionCreate$inboundSchema;
    /** @deprecated use `RetirementContributionCreate$outboundSchema` instead. */
    RetirementContributionCreate$.outboundSchema = RetirementContributionCreate$outboundSchema;
})(RetirementContributionCreate$ || (RetirementContributionCreate$ = {}));
export function retirementContributionCreateToJSON(retirementContributionCreate) {
    return JSON.stringify(RetirementContributionCreate$outboundSchema.parse(retirementContributionCreate));
}
export function retirementContributionCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetirementContributionCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetirementContributionCreate' from JSON`);
}
//# sourceMappingURL=retirementcontributioncreate.js.map