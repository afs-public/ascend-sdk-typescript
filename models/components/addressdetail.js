/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const AddressDetail$inboundSchema = z.object({
    address_city: z.string().optional(),
    address_line: z.string().optional(),
    administrative_area: z.string().optional(),
    postal_code: z.string().optional(),
    region_code: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "address_city": "addressCity",
        "address_line": "addressLine",
        "administrative_area": "administrativeArea",
        "postal_code": "postalCode",
        "region_code": "regionCode",
    });
});
/** @internal */
export const AddressDetail$outboundSchema = z.object({
    addressCity: z.string().optional(),
    addressLine: z.string().optional(),
    administrativeArea: z.string().optional(),
    postalCode: z.string().optional(),
    regionCode: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        addressCity: "address_city",
        addressLine: "address_line",
        administrativeArea: "administrative_area",
        postalCode: "postal_code",
        regionCode: "region_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AddressDetail$;
(function (AddressDetail$) {
    /** @deprecated use `AddressDetail$inboundSchema` instead. */
    AddressDetail$.inboundSchema = AddressDetail$inboundSchema;
    /** @deprecated use `AddressDetail$outboundSchema` instead. */
    AddressDetail$.outboundSchema = AddressDetail$outboundSchema;
})(AddressDetail$ || (AddressDetail$ = {}));
export function addressDetailToJSON(addressDetail) {
    return JSON.stringify(AddressDetail$outboundSchema.parse(addressDetail));
}
export function addressDetailFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AddressDetail$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AddressDetail' from JSON`);
}
//# sourceMappingURL=addressdetail.js.map