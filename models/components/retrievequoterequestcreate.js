/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { DecimalCreate$inboundSchema, DecimalCreate$outboundSchema, } from "./decimalcreate.js";
/**
 * The type of asset being evaluated in cost calculations
 */
export var RetrieveQuoteRequestCreateAssetType;
(function (RetrieveQuoteRequestCreateAssetType) {
    RetrieveQuoteRequestCreateAssetType["FixedIncome"] = "FIXED_INCOME";
})(RetrieveQuoteRequestCreateAssetType || (RetrieveQuoteRequestCreateAssetType = {}));
/**
 * Capacity used in determining bid and ask prices. Defaults to "AGENCY" if no value specified.
 */
export var RetrieveQuoteRequestCreateBrokerCapacity;
(function (RetrieveQuoteRequestCreateBrokerCapacity) {
    RetrieveQuoteRequestCreateBrokerCapacity["BrokerCapacityUnspecified"] = "BROKER_CAPACITY_UNSPECIFIED";
    RetrieveQuoteRequestCreateBrokerCapacity["Agency"] = "AGENCY";
    RetrieveQuoteRequestCreateBrokerCapacity["Principal"] = "PRINCIPAL";
})(RetrieveQuoteRequestCreateBrokerCapacity || (RetrieveQuoteRequestCreateBrokerCapacity = {}));
/**
 * The identifier type of the asset being sought
 */
export var RetrieveQuoteRequestCreateIdentifierType;
(function (RetrieveQuoteRequestCreateIdentifierType) {
    RetrieveQuoteRequestCreateIdentifierType["AssetId"] = "ASSET_ID";
    RetrieveQuoteRequestCreateIdentifierType["Cusip"] = "CUSIP";
    RetrieveQuoteRequestCreateIdentifierType["Isin"] = "ISIN";
})(RetrieveQuoteRequestCreateIdentifierType || (RetrieveQuoteRequestCreateIdentifierType = {}));
/** @internal */
export const RetrieveQuoteRequestCreateAssetType$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveQuoteRequestCreateAssetType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const RetrieveQuoteRequestCreateAssetType$outboundSchema = z.union([
    z.nativeEnum(RetrieveQuoteRequestCreateAssetType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveQuoteRequestCreateAssetType$;
(function (RetrieveQuoteRequestCreateAssetType$) {
    /** @deprecated use `RetrieveQuoteRequestCreateAssetType$inboundSchema` instead. */
    RetrieveQuoteRequestCreateAssetType$.inboundSchema = RetrieveQuoteRequestCreateAssetType$inboundSchema;
    /** @deprecated use `RetrieveQuoteRequestCreateAssetType$outboundSchema` instead. */
    RetrieveQuoteRequestCreateAssetType$.outboundSchema = RetrieveQuoteRequestCreateAssetType$outboundSchema;
})(RetrieveQuoteRequestCreateAssetType$ || (RetrieveQuoteRequestCreateAssetType$ = {}));
/** @internal */
export const RetrieveQuoteRequestCreateBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveQuoteRequestCreateBrokerCapacity),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const RetrieveQuoteRequestCreateBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(RetrieveQuoteRequestCreateBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveQuoteRequestCreateBrokerCapacity$;
(function (RetrieveQuoteRequestCreateBrokerCapacity$) {
    /** @deprecated use `RetrieveQuoteRequestCreateBrokerCapacity$inboundSchema` instead. */
    RetrieveQuoteRequestCreateBrokerCapacity$.inboundSchema = RetrieveQuoteRequestCreateBrokerCapacity$inboundSchema;
    /** @deprecated use `RetrieveQuoteRequestCreateBrokerCapacity$outboundSchema` instead. */
    RetrieveQuoteRequestCreateBrokerCapacity$.outboundSchema = RetrieveQuoteRequestCreateBrokerCapacity$outboundSchema;
})(RetrieveQuoteRequestCreateBrokerCapacity$ || (RetrieveQuoteRequestCreateBrokerCapacity$ = {}));
/** @internal */
export const RetrieveQuoteRequestCreateIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveQuoteRequestCreateIdentifierType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const RetrieveQuoteRequestCreateIdentifierType$outboundSchema = z.union([
    z.nativeEnum(RetrieveQuoteRequestCreateIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveQuoteRequestCreateIdentifierType$;
(function (RetrieveQuoteRequestCreateIdentifierType$) {
    /** @deprecated use `RetrieveQuoteRequestCreateIdentifierType$inboundSchema` instead. */
    RetrieveQuoteRequestCreateIdentifierType$.inboundSchema = RetrieveQuoteRequestCreateIdentifierType$inboundSchema;
    /** @deprecated use `RetrieveQuoteRequestCreateIdentifierType$outboundSchema` instead. */
    RetrieveQuoteRequestCreateIdentifierType$.outboundSchema = RetrieveQuoteRequestCreateIdentifierType$outboundSchema;
})(RetrieveQuoteRequestCreateIdentifierType$ || (RetrieveQuoteRequestCreateIdentifierType$ = {}));
/** @internal */
export const RetrieveQuoteRequestCreate$inboundSchema = z.object({
    asset_type: RetrieveQuoteRequestCreateAssetType$inboundSchema,
    broker_capacity: RetrieveQuoteRequestCreateBrokerCapacity$inboundSchema
        .optional(),
    identifier: z.string(),
    identifier_type: RetrieveQuoteRequestCreateIdentifierType$inboundSchema,
    minimum_quantity: DecimalCreate$inboundSchema.optional(),
    parent: z.string(),
}).transform((v) => {
    return remap$(v, {
        "asset_type": "assetType",
        "broker_capacity": "brokerCapacity",
        "identifier_type": "identifierType",
        "minimum_quantity": "minimumQuantity",
    });
});
/** @internal */
export const RetrieveQuoteRequestCreate$outboundSchema = z.object({
    assetType: RetrieveQuoteRequestCreateAssetType$outboundSchema,
    brokerCapacity: RetrieveQuoteRequestCreateBrokerCapacity$outboundSchema
        .optional(),
    identifier: z.string(),
    identifierType: RetrieveQuoteRequestCreateIdentifierType$outboundSchema,
    minimumQuantity: DecimalCreate$outboundSchema.optional(),
    parent: z.string(),
}).transform((v) => {
    return remap$(v, {
        assetType: "asset_type",
        brokerCapacity: "broker_capacity",
        identifierType: "identifier_type",
        minimumQuantity: "minimum_quantity",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveQuoteRequestCreate$;
(function (RetrieveQuoteRequestCreate$) {
    /** @deprecated use `RetrieveQuoteRequestCreate$inboundSchema` instead. */
    RetrieveQuoteRequestCreate$.inboundSchema = RetrieveQuoteRequestCreate$inboundSchema;
    /** @deprecated use `RetrieveQuoteRequestCreate$outboundSchema` instead. */
    RetrieveQuoteRequestCreate$.outboundSchema = RetrieveQuoteRequestCreate$outboundSchema;
})(RetrieveQuoteRequestCreate$ || (RetrieveQuoteRequestCreate$ = {}));
export function retrieveQuoteRequestCreateToJSON(retrieveQuoteRequestCreate) {
    return JSON.stringify(RetrieveQuoteRequestCreate$outboundSchema.parse(retrieveQuoteRequestCreate));
}
export function retrieveQuoteRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveQuoteRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveQuoteRequestCreate' from JSON`);
}
//# sourceMappingURL=retrievequoterequestcreate.js.map