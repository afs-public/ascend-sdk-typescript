/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const NetAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const NetAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var NetAmount$;
(function (NetAmount$) {
    /** @deprecated use `NetAmount$inboundSchema` instead. */
    NetAmount$.inboundSchema = NetAmount$inboundSchema;
    /** @deprecated use `NetAmount$outboundSchema` instead. */
    NetAmount$.outboundSchema = NetAmount$outboundSchema;
})(NetAmount$ || (NetAmount$ = {}));
export function netAmountToJSON(netAmount) {
    return JSON.stringify(NetAmount$outboundSchema.parse(netAmount));
}
export function netAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => NetAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NetAmount' from JSON`);
}
/** @internal */
export const CalculateCashBalanceResponseTradeSummary$inboundSchema = z.object({
    activity: z.string().optional(),
    asset: z.string().optional(),
    net_amount: z.nullable(z.lazy(() => NetAmount$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "net_amount": "netAmount",
    });
});
/** @internal */
export const CalculateCashBalanceResponseTradeSummary$outboundSchema = z.object({
    activity: z.string().optional(),
    asset: z.string().optional(),
    netAmount: z.nullable(z.lazy(() => NetAmount$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        netAmount: "net_amount",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CalculateCashBalanceResponseTradeSummary$;
(function (CalculateCashBalanceResponseTradeSummary$) {
    /** @deprecated use `CalculateCashBalanceResponseTradeSummary$inboundSchema` instead. */
    CalculateCashBalanceResponseTradeSummary$.inboundSchema = CalculateCashBalanceResponseTradeSummary$inboundSchema;
    /** @deprecated use `CalculateCashBalanceResponseTradeSummary$outboundSchema` instead. */
    CalculateCashBalanceResponseTradeSummary$.outboundSchema = CalculateCashBalanceResponseTradeSummary$outboundSchema;
})(CalculateCashBalanceResponseTradeSummary$ || (CalculateCashBalanceResponseTradeSummary$ = {}));
export function calculateCashBalanceResponseTradeSummaryToJSON(calculateCashBalanceResponseTradeSummary) {
    return JSON.stringify(CalculateCashBalanceResponseTradeSummary$outboundSchema.parse(calculateCashBalanceResponseTradeSummary));
}
export function calculateCashBalanceResponseTradeSummaryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CalculateCashBalanceResponseTradeSummary$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CalculateCashBalanceResponseTradeSummary' from JSON`);
}
//# sourceMappingURL=calculatecashbalanceresponsetradesummary.js.map