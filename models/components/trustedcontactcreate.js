/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { PhoneNumberCreate$inboundSchema, PhoneNumberCreate$outboundSchema, } from "./phonenumbercreate.js";
import { PostalAddressCreate$inboundSchema, PostalAddressCreate$outboundSchema, } from "./postaladdresscreate.js";
/** @internal */
export const TrustedContactCreate$inboundSchema = z.object({
    email_address: z.string().optional(),
    family_name: z.string(),
    given_name: z.string(),
    mailing_address: PostalAddressCreate$inboundSchema.optional(),
    middle_names: z.string().optional(),
    phone_number: PhoneNumberCreate$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "email_address": "emailAddress",
        "family_name": "familyName",
        "given_name": "givenName",
        "mailing_address": "mailingAddress",
        "middle_names": "middleNames",
        "phone_number": "phoneNumber",
    });
});
/** @internal */
export const TrustedContactCreate$outboundSchema = z.object({
    emailAddress: z.string().optional(),
    familyName: z.string(),
    givenName: z.string(),
    mailingAddress: PostalAddressCreate$outboundSchema.optional(),
    middleNames: z.string().optional(),
    phoneNumber: PhoneNumberCreate$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        emailAddress: "email_address",
        familyName: "family_name",
        givenName: "given_name",
        mailingAddress: "mailing_address",
        middleNames: "middle_names",
        phoneNumber: "phone_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TrustedContactCreate$;
(function (TrustedContactCreate$) {
    /** @deprecated use `TrustedContactCreate$inboundSchema` instead. */
    TrustedContactCreate$.inboundSchema = TrustedContactCreate$inboundSchema;
    /** @deprecated use `TrustedContactCreate$outboundSchema` instead. */
    TrustedContactCreate$.outboundSchema = TrustedContactCreate$outboundSchema;
})(TrustedContactCreate$ || (TrustedContactCreate$ = {}));
export function trustedContactCreateToJSON(trustedContactCreate) {
    return JSON.stringify(TrustedContactCreate$outboundSchema.parse(trustedContactCreate));
}
export function trustedContactCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TrustedContactCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TrustedContactCreate' from JSON`);
}
//# sourceMappingURL=trustedcontactcreate.js.map