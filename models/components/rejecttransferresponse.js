"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RejectTransferResponse$ = exports.RejectTransferResponse$outboundSchema = exports.RejectTransferResponse$inboundSchema = exports.RejectTransferResponseTransfer$ = exports.RejectTransferResponseTransfer$outboundSchema = exports.RejectTransferResponseTransfer$inboundSchema = exports.RejectTransferResponseTransferType$ = exports.RejectTransferResponseTransferType$outboundSchema = exports.RejectTransferResponseTransferType$inboundSchema = exports.RejectTransferResponseState$ = exports.RejectTransferResponseState$outboundSchema = exports.RejectTransferResponseState$inboundSchema = exports.RejectTransferResponseRejectCode$ = exports.RejectTransferResponseRejectCode$outboundSchema = exports.RejectTransferResponseRejectCode$inboundSchema = exports.RejectTransferResponseReceiver$ = exports.RejectTransferResponseReceiver$outboundSchema = exports.RejectTransferResponseReceiver$inboundSchema = exports.RejectTransferResponseTransferExternalAccount$ = exports.RejectTransferResponseTransferExternalAccount$outboundSchema = exports.RejectTransferResponseTransferExternalAccount$inboundSchema = exports.RejectTransferResponseNsccStatus$ = exports.RejectTransferResponseNsccStatus$outboundSchema = exports.RejectTransferResponseNsccStatus$inboundSchema = exports.RejectTransferResponseDirection$ = exports.RejectTransferResponseDirection$outboundSchema = exports.RejectTransferResponseDirection$inboundSchema = exports.RejectTransferResponseDeliverer$ = exports.RejectTransferResponseDeliverer$outboundSchema = exports.RejectTransferResponseDeliverer$inboundSchema = exports.RejectTransferResponseExternalAccount$ = exports.RejectTransferResponseExternalAccount$outboundSchema = exports.RejectTransferResponseExternalAccount$inboundSchema = exports.RejectTransferResponseTransferType = exports.RejectTransferResponseState = exports.RejectTransferResponseRejectCode = exports.RejectTransferResponseNsccStatus = exports.RejectTransferResponseDirection = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const acatsasset_js_1 = require("./acatsasset.js");
/**
 * The direction of the transfer
 */
var RejectTransferResponseDirection;
(function (RejectTransferResponseDirection) {
    RejectTransferResponseDirection["DirectionUnspecified"] = "DIRECTION_UNSPECIFIED";
    RejectTransferResponseDirection["Outgoing"] = "OUTGOING";
    RejectTransferResponseDirection["Incoming"] = "INCOMING";
})(RejectTransferResponseDirection || (exports.RejectTransferResponseDirection = RejectTransferResponseDirection = {}));
/**
 * The NSCC transfer status
 */
var RejectTransferResponseNsccStatus;
(function (RejectTransferResponseNsccStatus) {
    RejectTransferResponseNsccStatus["NsccStatusUnspecified"] = "NSCC_STATUS_UNSPECIFIED";
    RejectTransferResponseNsccStatus["Request"] = "REQUEST";
    RejectTransferResponseNsccStatus["RequestAdjust"] = "REQUEST_ADJUST";
    RejectTransferResponseNsccStatus["RequestAdjustPast"] = "REQUEST_ADJUST_PAST";
    RejectTransferResponseNsccStatus["RequestPast"] = "REQUEST_PAST";
    RejectTransferResponseNsccStatus["RequestReject"] = "REQUEST_REJECT";
    RejectTransferResponseNsccStatus["Review"] = "REVIEW";
    RejectTransferResponseNsccStatus["ReviewAdjustDeliverer"] = "REVIEW_ADJUST_DELIVERER";
    RejectTransferResponseNsccStatus["ReviewError"] = "REVIEW_ERROR";
    RejectTransferResponseNsccStatus["ReviewAccelerate"] = "REVIEW_ACCELERATE";
    RejectTransferResponseNsccStatus["ReviewAdjustReceiverAccelerate"] = "REVIEW_ADJUST_RECEIVER_ACCELERATE";
    RejectTransferResponseNsccStatus["SettlePrep"] = "SETTLE_PREP";
    RejectTransferResponseNsccStatus["SettleClose"] = "SETTLE_CLOSE";
    RejectTransferResponseNsccStatus["ClosePurge"] = "CLOSE_PURGE";
    RejectTransferResponseNsccStatus["PartialRequest"] = "PARTIAL_REQUEST";
    RejectTransferResponseNsccStatus["MemoPurgePartialTransferRequestReceiver"] = "MEMO_PURGE_PARTIAL_TRANSFER_REQUEST_RECEIVER";
    RejectTransferResponseNsccStatus["Reject"] = "REJECT";
    RejectTransferResponseNsccStatus["SystemPurge"] = "SYSTEM_PURGE";
})(RejectTransferResponseNsccStatus || (exports.RejectTransferResponseNsccStatus = RejectTransferResponseNsccStatus = {}));
/**
 * The reject code
 */
var RejectTransferResponseRejectCode;
(function (RejectTransferResponseRejectCode) {
    RejectTransferResponseRejectCode["RejectCodeUnspecified"] = "REJECT_CODE_UNSPECIFIED";
    RejectTransferResponseRejectCode["RejectCodeSsnTaxIdMismatch"] = "REJECT_CODE_SSN_TAX_ID_MISMATCH";
    RejectTransferResponseRejectCode["RejectCodeAccountTitleMismatch"] = "REJECT_CODE_ACCOUNT_TITLE_MISMATCH";
    RejectTransferResponseRejectCode["RejectCodeDocumentationNeeded"] = "REJECT_CODE_DOCUMENTATION_NEEDED";
    RejectTransferResponseRejectCode["RejectCodeAccountFlat"] = "REJECT_CODE_ACCOUNT_FLAT";
    RejectTransferResponseRejectCode["RejectCodeInvalidAccountNumber"] = "REJECT_CODE_INVALID_ACCOUNT_NUMBER";
    RejectTransferResponseRejectCode["RejectCodeDuplicate"] = "REJECT_CODE_DUPLICATE";
    RejectTransferResponseRejectCode["RejectCodeAccountInDistributionOrTransfer"] = "REJECT_CODE_ACCOUNT_IN_DISTRIBUTION_OR_TRANSFER";
    RejectTransferResponseRejectCode["RejectCodeClientRescinded"] = "REJECT_CODE_CLIENT_RESCINDED";
    RejectTransferResponseRejectCode["RejectCodeMissingAuthorizationSignature"] = "REJECT_CODE_MISSING_AUTHORIZATION_SIGNATURE";
    RejectTransferResponseRejectCode["RejectCodeAccountViolatesCreditPolicyOfReceivingFirm"] = "REJECT_CODE_ACCOUNT_VIOLATES_CREDIT_POLICY_OF_RECEIVING_FIRM";
    RejectTransferResponseRejectCode["RejectCodeUnrecognizedForResidualCreditBalance"] = "REJECT_CODE_UNRECOGNIZED_FOR_RESIDUAL_CREDIT_BALANCE";
    RejectTransferResponseRejectCode["RejectCodePartialTransferDeliverer"] = "REJECT_CODE_PARTIAL_TRANSFER_DELIVERER";
    RejectTransferResponseRejectCode["RejectCodeFailReversal"] = "REJECT_CODE_FAIL_REVERSAL";
    RejectTransferResponseRejectCode["RejectCodeReclaim"] = "REJECT_CODE_RECLAIM";
    RejectTransferResponseRejectCode["RejectCodeMutualFundCleanup"] = "REJECT_CODE_MUTUAL_FUND_CLEANUP";
})(RejectTransferResponseRejectCode || (exports.RejectTransferResponseRejectCode = RejectTransferResponseRejectCode = {}));
/**
 * The transfer state
 */
var RejectTransferResponseState;
(function (RejectTransferResponseState) {
    RejectTransferResponseState["StateUnspecified"] = "STATE_UNSPECIFIED";
    RejectTransferResponseState["Received"] = "RECEIVED";
    RejectTransferResponseState["Submitted"] = "SUBMITTED";
    RejectTransferResponseState["Rejected"] = "REJECTED";
    RejectTransferResponseState["PendingContraResponse"] = "PENDING_CONTRA_RESPONSE";
    RejectTransferResponseState["Error"] = "ERROR";
    RejectTransferResponseState["Accepted"] = "ACCEPTED";
    RejectTransferResponseState["PendingReview"] = "PENDING_REVIEW";
    RejectTransferResponseState["PendingRejection"] = "PENDING_REJECTION";
    RejectTransferResponseState["PendingSettlement"] = "PENDING_SETTLEMENT";
    RejectTransferResponseState["PendingBookkeeping"] = "PENDING_BOOKKEEPING";
    RejectTransferResponseState["Completed"] = "COMPLETED";
    RejectTransferResponseState["Purged"] = "PURGED";
})(RejectTransferResponseState || (exports.RejectTransferResponseState = RejectTransferResponseState = {}));
/**
 * The type of transfer
 */
var RejectTransferResponseTransferType;
(function (RejectTransferResponseTransferType) {
    RejectTransferResponseTransferType["TransferTypeUnspecified"] = "TRANSFER_TYPE_UNSPECIFIED";
    RejectTransferResponseTransferType["FailReversalBrokerToBrokerOnly"] = "FAIL_REVERSAL_BROKER_TO_BROKER_ONLY";
    RejectTransferResponseTransferType["FullTransfer"] = "FULL_TRANSFER";
    RejectTransferResponseTransferType["MutualFundCleanup"] = "MUTUAL_FUND_CLEANUP";
    RejectTransferResponseTransferType["PartialTransferDeliverer"] = "PARTIAL_TRANSFER_DELIVERER";
    RejectTransferResponseTransferType["PartialTransferReceiver"] = "PARTIAL_TRANSFER_RECEIVER";
    RejectTransferResponseTransferType["PositionTransferFundFirmToMutualFundCompanyOnly"] = "POSITION_TRANSFER_FUND_FIRM_TO_MUTUAL_FUND_COMPANY_ONLY";
    RejectTransferResponseTransferType["Reclaim"] = "RECLAIM";
    RejectTransferResponseTransferType["ResidualCredit"] = "RESIDUAL_CREDIT";
})(RejectTransferResponseTransferType || (exports.RejectTransferResponseTransferType = RejectTransferResponseTransferType = {}));
/** @internal */
exports.RejectTransferResponseExternalAccount$inboundSchema = z.object({
    account_number: z.string().optional(),
    account_title: z.string().optional(),
    participant_number: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_number": "accountNumber",
        "account_title": "accountTitle",
        "participant_number": "participantNumber",
    });
});
/** @internal */
exports.RejectTransferResponseExternalAccount$outboundSchema = z.object({
    accountNumber: z.string().optional(),
    accountTitle: z.string().optional(),
    participantNumber: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountNumber: "account_number",
        accountTitle: "account_title",
        participantNumber: "participant_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseExternalAccount$;
(function (RejectTransferResponseExternalAccount$) {
    /** @deprecated use `RejectTransferResponseExternalAccount$inboundSchema` instead. */
    RejectTransferResponseExternalAccount$.inboundSchema = exports.RejectTransferResponseExternalAccount$inboundSchema;
    /** @deprecated use `RejectTransferResponseExternalAccount$outboundSchema` instead. */
    RejectTransferResponseExternalAccount$.outboundSchema = exports.RejectTransferResponseExternalAccount$outboundSchema;
})(RejectTransferResponseExternalAccount$ || (exports.RejectTransferResponseExternalAccount$ = RejectTransferResponseExternalAccount$ = {}));
/** @internal */
exports.RejectTransferResponseDeliverer$inboundSchema = z.object({
    apex_account_id: z.string().optional(),
    external_account: z.nullable(z.lazy(() => exports.RejectTransferResponseExternalAccount$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "apex_account_id": "apexAccountId",
        "external_account": "externalAccount",
    });
});
/** @internal */
exports.RejectTransferResponseDeliverer$outboundSchema = z.object({
    apexAccountId: z.string().optional(),
    externalAccount: z.nullable(z.lazy(() => exports.RejectTransferResponseExternalAccount$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        apexAccountId: "apex_account_id",
        externalAccount: "external_account",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseDeliverer$;
(function (RejectTransferResponseDeliverer$) {
    /** @deprecated use `RejectTransferResponseDeliverer$inboundSchema` instead. */
    RejectTransferResponseDeliverer$.inboundSchema = exports.RejectTransferResponseDeliverer$inboundSchema;
    /** @deprecated use `RejectTransferResponseDeliverer$outboundSchema` instead. */
    RejectTransferResponseDeliverer$.outboundSchema = exports.RejectTransferResponseDeliverer$outboundSchema;
})(RejectTransferResponseDeliverer$ || (exports.RejectTransferResponseDeliverer$ = RejectTransferResponseDeliverer$ = {}));
/** @internal */
exports.RejectTransferResponseDirection$inboundSchema = z
    .union([
    z.nativeEnum(RejectTransferResponseDirection),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RejectTransferResponseDirection$outboundSchema = z.union([
    z.nativeEnum(RejectTransferResponseDirection),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseDirection$;
(function (RejectTransferResponseDirection$) {
    /** @deprecated use `RejectTransferResponseDirection$inboundSchema` instead. */
    RejectTransferResponseDirection$.inboundSchema = exports.RejectTransferResponseDirection$inboundSchema;
    /** @deprecated use `RejectTransferResponseDirection$outboundSchema` instead. */
    RejectTransferResponseDirection$.outboundSchema = exports.RejectTransferResponseDirection$outboundSchema;
})(RejectTransferResponseDirection$ || (exports.RejectTransferResponseDirection$ = RejectTransferResponseDirection$ = {}));
/** @internal */
exports.RejectTransferResponseNsccStatus$inboundSchema = z
    .union([
    z.nativeEnum(RejectTransferResponseNsccStatus),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RejectTransferResponseNsccStatus$outboundSchema = z.union([
    z.nativeEnum(RejectTransferResponseNsccStatus),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseNsccStatus$;
(function (RejectTransferResponseNsccStatus$) {
    /** @deprecated use `RejectTransferResponseNsccStatus$inboundSchema` instead. */
    RejectTransferResponseNsccStatus$.inboundSchema = exports.RejectTransferResponseNsccStatus$inboundSchema;
    /** @deprecated use `RejectTransferResponseNsccStatus$outboundSchema` instead. */
    RejectTransferResponseNsccStatus$.outboundSchema = exports.RejectTransferResponseNsccStatus$outboundSchema;
})(RejectTransferResponseNsccStatus$ || (exports.RejectTransferResponseNsccStatus$ = RejectTransferResponseNsccStatus$ = {}));
/** @internal */
exports.RejectTransferResponseTransferExternalAccount$inboundSchema = z.object({
    account_number: z.string().optional(),
    account_title: z.string().optional(),
    participant_number: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_number": "accountNumber",
        "account_title": "accountTitle",
        "participant_number": "participantNumber",
    });
});
/** @internal */
exports.RejectTransferResponseTransferExternalAccount$outboundSchema = z.object({
    accountNumber: z.string().optional(),
    accountTitle: z.string().optional(),
    participantNumber: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountNumber: "account_number",
        accountTitle: "account_title",
        participantNumber: "participant_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseTransferExternalAccount$;
(function (RejectTransferResponseTransferExternalAccount$) {
    /** @deprecated use `RejectTransferResponseTransferExternalAccount$inboundSchema` instead. */
    RejectTransferResponseTransferExternalAccount$.inboundSchema = exports.RejectTransferResponseTransferExternalAccount$inboundSchema;
    /** @deprecated use `RejectTransferResponseTransferExternalAccount$outboundSchema` instead. */
    RejectTransferResponseTransferExternalAccount$.outboundSchema = exports.RejectTransferResponseTransferExternalAccount$outboundSchema;
})(RejectTransferResponseTransferExternalAccount$ || (exports.RejectTransferResponseTransferExternalAccount$ = RejectTransferResponseTransferExternalAccount$ = {}));
/** @internal */
exports.RejectTransferResponseReceiver$inboundSchema = z.object({
    apex_account_id: z.string().optional(),
    external_account: z.nullable(z.lazy(() => exports.RejectTransferResponseTransferExternalAccount$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "apex_account_id": "apexAccountId",
        "external_account": "externalAccount",
    });
});
/** @internal */
exports.RejectTransferResponseReceiver$outboundSchema = z.object({
    apexAccountId: z.string().optional(),
    externalAccount: z.nullable(z.lazy(() => exports.RejectTransferResponseTransferExternalAccount$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        apexAccountId: "apex_account_id",
        externalAccount: "external_account",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseReceiver$;
(function (RejectTransferResponseReceiver$) {
    /** @deprecated use `RejectTransferResponseReceiver$inboundSchema` instead. */
    RejectTransferResponseReceiver$.inboundSchema = exports.RejectTransferResponseReceiver$inboundSchema;
    /** @deprecated use `RejectTransferResponseReceiver$outboundSchema` instead. */
    RejectTransferResponseReceiver$.outboundSchema = exports.RejectTransferResponseReceiver$outboundSchema;
})(RejectTransferResponseReceiver$ || (exports.RejectTransferResponseReceiver$ = RejectTransferResponseReceiver$ = {}));
/** @internal */
exports.RejectTransferResponseRejectCode$inboundSchema = z
    .union([
    z.nativeEnum(RejectTransferResponseRejectCode),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RejectTransferResponseRejectCode$outboundSchema = z.union([
    z.nativeEnum(RejectTransferResponseRejectCode),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseRejectCode$;
(function (RejectTransferResponseRejectCode$) {
    /** @deprecated use `RejectTransferResponseRejectCode$inboundSchema` instead. */
    RejectTransferResponseRejectCode$.inboundSchema = exports.RejectTransferResponseRejectCode$inboundSchema;
    /** @deprecated use `RejectTransferResponseRejectCode$outboundSchema` instead. */
    RejectTransferResponseRejectCode$.outboundSchema = exports.RejectTransferResponseRejectCode$outboundSchema;
})(RejectTransferResponseRejectCode$ || (exports.RejectTransferResponseRejectCode$ = RejectTransferResponseRejectCode$ = {}));
/** @internal */
exports.RejectTransferResponseState$inboundSchema = z
    .union([
    z.nativeEnum(RejectTransferResponseState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RejectTransferResponseState$outboundSchema = z.union([
    z.nativeEnum(RejectTransferResponseState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseState$;
(function (RejectTransferResponseState$) {
    /** @deprecated use `RejectTransferResponseState$inboundSchema` instead. */
    RejectTransferResponseState$.inboundSchema = exports.RejectTransferResponseState$inboundSchema;
    /** @deprecated use `RejectTransferResponseState$outboundSchema` instead. */
    RejectTransferResponseState$.outboundSchema = exports.RejectTransferResponseState$outboundSchema;
})(RejectTransferResponseState$ || (exports.RejectTransferResponseState$ = RejectTransferResponseState$ = {}));
/** @internal */
exports.RejectTransferResponseTransferType$inboundSchema = z
    .union([
    z.nativeEnum(RejectTransferResponseTransferType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RejectTransferResponseTransferType$outboundSchema = z.union([
    z.nativeEnum(RejectTransferResponseTransferType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseTransferType$;
(function (RejectTransferResponseTransferType$) {
    /** @deprecated use `RejectTransferResponseTransferType$inboundSchema` instead. */
    RejectTransferResponseTransferType$.inboundSchema = exports.RejectTransferResponseTransferType$inboundSchema;
    /** @deprecated use `RejectTransferResponseTransferType$outboundSchema` instead. */
    RejectTransferResponseTransferType$.outboundSchema = exports.RejectTransferResponseTransferType$outboundSchema;
})(RejectTransferResponseTransferType$ || (exports.RejectTransferResponseTransferType$ = RejectTransferResponseTransferType$ = {}));
/** @internal */
exports.RejectTransferResponseTransfer$inboundSchema = z.object({
    acat_control_number: z.string().optional(),
    assets: z.array(acatsasset_js_1.AcatsAsset$inboundSchema).optional(),
    comment: z.string().optional(),
    create_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    deliverer: z.nullable(z.lazy(() => exports.RejectTransferResponseDeliverer$inboundSchema)).optional(),
    direction: exports.RejectTransferResponseDirection$inboundSchema.optional(),
    name: z.string().optional(),
    nscc_status: exports.RejectTransferResponseNsccStatus$inboundSchema.optional(),
    original_control_number: z.string().optional(),
    receiver: z.nullable(z.lazy(() => exports.RejectTransferResponseReceiver$inboundSchema)).optional(),
    reject_code: exports.RejectTransferResponseRejectCode$inboundSchema.optional(),
    state: exports.RejectTransferResponseState$inboundSchema.optional(),
    state_reason: z.string().optional(),
    transfer_type: exports.RejectTransferResponseTransferType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "acat_control_number": "acatControlNumber",
        "create_time": "createTime",
        "nscc_status": "nsccStatus",
        "original_control_number": "originalControlNumber",
        "reject_code": "rejectCode",
        "state_reason": "stateReason",
        "transfer_type": "transferType",
    });
});
/** @internal */
exports.RejectTransferResponseTransfer$outboundSchema = z.object({
    acatControlNumber: z.string().optional(),
    assets: z.array(acatsasset_js_1.AcatsAsset$outboundSchema).optional(),
    comment: z.string().optional(),
    createTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    deliverer: z.nullable(z.lazy(() => exports.RejectTransferResponseDeliverer$outboundSchema)).optional(),
    direction: exports.RejectTransferResponseDirection$outboundSchema.optional(),
    name: z.string().optional(),
    nsccStatus: exports.RejectTransferResponseNsccStatus$outboundSchema.optional(),
    originalControlNumber: z.string().optional(),
    receiver: z.nullable(z.lazy(() => exports.RejectTransferResponseReceiver$outboundSchema)).optional(),
    rejectCode: exports.RejectTransferResponseRejectCode$outboundSchema.optional(),
    state: exports.RejectTransferResponseState$outboundSchema.optional(),
    stateReason: z.string().optional(),
    transferType: exports.RejectTransferResponseTransferType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        acatControlNumber: "acat_control_number",
        createTime: "create_time",
        nsccStatus: "nscc_status",
        originalControlNumber: "original_control_number",
        rejectCode: "reject_code",
        stateReason: "state_reason",
        transferType: "transfer_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponseTransfer$;
(function (RejectTransferResponseTransfer$) {
    /** @deprecated use `RejectTransferResponseTransfer$inboundSchema` instead. */
    RejectTransferResponseTransfer$.inboundSchema = exports.RejectTransferResponseTransfer$inboundSchema;
    /** @deprecated use `RejectTransferResponseTransfer$outboundSchema` instead. */
    RejectTransferResponseTransfer$.outboundSchema = exports.RejectTransferResponseTransfer$outboundSchema;
})(RejectTransferResponseTransfer$ || (exports.RejectTransferResponseTransfer$ = RejectTransferResponseTransfer$ = {}));
/** @internal */
exports.RejectTransferResponse$inboundSchema = z.object({
    transfer: z.nullable(z.lazy(() => exports.RejectTransferResponseTransfer$inboundSchema)).optional(),
});
/** @internal */
exports.RejectTransferResponse$outboundSchema = z.object({
    transfer: z.nullable(z.lazy(() => exports.RejectTransferResponseTransfer$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RejectTransferResponse$;
(function (RejectTransferResponse$) {
    /** @deprecated use `RejectTransferResponse$inboundSchema` instead. */
    RejectTransferResponse$.inboundSchema = exports.RejectTransferResponse$inboundSchema;
    /** @deprecated use `RejectTransferResponse$outboundSchema` instead. */
    RejectTransferResponse$.outboundSchema = exports.RejectTransferResponse$outboundSchema;
})(RejectTransferResponse$ || (exports.RejectTransferResponse$ = RejectTransferResponse$ = {}));
//# sourceMappingURL=rejecttransferresponse.js.map