/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const OtherSourcesOfWealthUpdate$inboundSchema = z.object({
    applicant_has_other_sources_of_wealth: z.boolean().optional(),
    other_sources_of_wealth: z.string().optional(),
    other_sources_of_wealth_verification: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "applicant_has_other_sources_of_wealth": "applicantHasOtherSourcesOfWealth",
        "other_sources_of_wealth": "otherSourcesOfWealth",
        "other_sources_of_wealth_verification": "otherSourcesOfWealthVerification",
    });
});
/** @internal */
export const OtherSourcesOfWealthUpdate$outboundSchema = z.object({
    applicantHasOtherSourcesOfWealth: z.boolean().optional(),
    otherSourcesOfWealth: z.string().optional(),
    otherSourcesOfWealthVerification: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        applicantHasOtherSourcesOfWealth: "applicant_has_other_sources_of_wealth",
        otherSourcesOfWealth: "other_sources_of_wealth",
        otherSourcesOfWealthVerification: "other_sources_of_wealth_verification",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OtherSourcesOfWealthUpdate$;
(function (OtherSourcesOfWealthUpdate$) {
    /** @deprecated use `OtherSourcesOfWealthUpdate$inboundSchema` instead. */
    OtherSourcesOfWealthUpdate$.inboundSchema = OtherSourcesOfWealthUpdate$inboundSchema;
    /** @deprecated use `OtherSourcesOfWealthUpdate$outboundSchema` instead. */
    OtherSourcesOfWealthUpdate$.outboundSchema = OtherSourcesOfWealthUpdate$outboundSchema;
})(OtherSourcesOfWealthUpdate$ || (OtherSourcesOfWealthUpdate$ = {}));
export function otherSourcesOfWealthUpdateToJSON(otherSourcesOfWealthUpdate) {
    return JSON.stringify(OtherSourcesOfWealthUpdate$outboundSchema.parse(otherSourcesOfWealthUpdate));
}
export function otherSourcesOfWealthUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OtherSourcesOfWealthUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OtherSourcesOfWealthUpdate' from JSON`);
}
//# sourceMappingURL=othersourcesofwealthupdate.js.map