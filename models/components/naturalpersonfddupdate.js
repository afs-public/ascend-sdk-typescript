/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerReferralSourceUpdate$inboundSchema, CustomerReferralSourceUpdate$outboundSchema, } from "./customerreferralsourceupdate.js";
import { NegativeNewsUpdate$inboundSchema, NegativeNewsUpdate$outboundSchema, } from "./negativenewsupdate.js";
import { OtherSourcesOfWealthUpdate$inboundSchema, OtherSourcesOfWealthUpdate$outboundSchema, } from "./othersourcesofwealthupdate.js";
/** @internal */
export const NaturalPersonFddUpdate$inboundSchema = z.object({
    customer_non_referral_source: z.string().optional(),
    customer_referral_source: CustomerReferralSourceUpdate$inboundSchema
        .optional(),
    employment_and_employer_description: z.string().optional(),
    negative_news: NegativeNewsUpdate$inboundSchema.optional(),
    other_sources_of_wealth: OtherSourcesOfWealthUpdate$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "customer_non_referral_source": "customerNonReferralSource",
        "customer_referral_source": "customerReferralSource",
        "employment_and_employer_description": "employmentAndEmployerDescription",
        "negative_news": "negativeNews",
        "other_sources_of_wealth": "otherSourcesOfWealth",
    });
});
/** @internal */
export const NaturalPersonFddUpdate$outboundSchema = z.object({
    customerNonReferralSource: z.string().optional(),
    customerReferralSource: CustomerReferralSourceUpdate$outboundSchema
        .optional(),
    employmentAndEmployerDescription: z.string().optional(),
    negativeNews: NegativeNewsUpdate$outboundSchema.optional(),
    otherSourcesOfWealth: OtherSourcesOfWealthUpdate$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        customerNonReferralSource: "customer_non_referral_source",
        customerReferralSource: "customer_referral_source",
        employmentAndEmployerDescription: "employment_and_employer_description",
        negativeNews: "negative_news",
        otherSourcesOfWealth: "other_sources_of_wealth",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var NaturalPersonFddUpdate$;
(function (NaturalPersonFddUpdate$) {
    /** @deprecated use `NaturalPersonFddUpdate$inboundSchema` instead. */
    NaturalPersonFddUpdate$.inboundSchema = NaturalPersonFddUpdate$inboundSchema;
    /** @deprecated use `NaturalPersonFddUpdate$outboundSchema` instead. */
    NaturalPersonFddUpdate$.outboundSchema = NaturalPersonFddUpdate$outboundSchema;
})(NaturalPersonFddUpdate$ || (NaturalPersonFddUpdate$ = {}));
export function naturalPersonFddUpdateToJSON(naturalPersonFddUpdate) {
    return JSON.stringify(NaturalPersonFddUpdate$outboundSchema.parse(naturalPersonFddUpdate));
}
export function naturalPersonFddUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => NaturalPersonFddUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'NaturalPersonFddUpdate' from JSON`);
}
//# sourceMappingURL=naturalpersonfddupdate.js.map