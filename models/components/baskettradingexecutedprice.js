"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasketTradingExecutedPrice$ = exports.BasketTradingExecutedPrice$outboundSchema = exports.BasketTradingExecutedPrice$inboundSchema = exports.BasketTradingExecutedPriceType$ = exports.BasketTradingExecutedPriceType$outboundSchema = exports.BasketTradingExecutedPriceType$inboundSchema = exports.BasketTradingExecutedPricePrice$ = exports.BasketTradingExecutedPricePrice$outboundSchema = exports.BasketTradingExecutedPricePrice$inboundSchema = exports.BasketTradingExecutedPriceType = void 0;
const z = __importStar(require("zod"));
const enums_js_1 = require("../../types/enums.js");
/**
 * The type of this price, which must be PRICE_PER_UNIT for equity orders
 */
var BasketTradingExecutedPriceType;
(function (BasketTradingExecutedPriceType) {
    BasketTradingExecutedPriceType["PricePerUnit"] = "PRICE_PER_UNIT";
})(BasketTradingExecutedPriceType || (exports.BasketTradingExecutedPriceType = BasketTradingExecutedPriceType = {}));
/** @internal */
exports.BasketTradingExecutedPricePrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.BasketTradingExecutedPricePrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketTradingExecutedPricePrice$;
(function (BasketTradingExecutedPricePrice$) {
    /** @deprecated use `BasketTradingExecutedPricePrice$inboundSchema` instead. */
    BasketTradingExecutedPricePrice$.inboundSchema = exports.BasketTradingExecutedPricePrice$inboundSchema;
    /** @deprecated use `BasketTradingExecutedPricePrice$outboundSchema` instead. */
    BasketTradingExecutedPricePrice$.outboundSchema = exports.BasketTradingExecutedPricePrice$outboundSchema;
})(BasketTradingExecutedPricePrice$ || (exports.BasketTradingExecutedPricePrice$ = BasketTradingExecutedPricePrice$ = {}));
/** @internal */
exports.BasketTradingExecutedPriceType$inboundSchema = z
    .union([
    z.nativeEnum(BasketTradingExecutedPriceType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BasketTradingExecutedPriceType$outboundSchema = z.union([
    z.nativeEnum(BasketTradingExecutedPriceType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketTradingExecutedPriceType$;
(function (BasketTradingExecutedPriceType$) {
    /** @deprecated use `BasketTradingExecutedPriceType$inboundSchema` instead. */
    BasketTradingExecutedPriceType$.inboundSchema = exports.BasketTradingExecutedPriceType$inboundSchema;
    /** @deprecated use `BasketTradingExecutedPriceType$outboundSchema` instead. */
    BasketTradingExecutedPriceType$.outboundSchema = exports.BasketTradingExecutedPriceType$outboundSchema;
})(BasketTradingExecutedPriceType$ || (exports.BasketTradingExecutedPriceType$ = BasketTradingExecutedPriceType$ = {}));
/** @internal */
exports.BasketTradingExecutedPrice$inboundSchema = z.object({
    price: z.nullable(z.lazy(() => exports.BasketTradingExecutedPricePrice$inboundSchema))
        .optional(),
    type: exports.BasketTradingExecutedPriceType$inboundSchema.optional(),
});
/** @internal */
exports.BasketTradingExecutedPrice$outboundSchema = z.object({
    price: z.nullable(z.lazy(() => exports.BasketTradingExecutedPricePrice$outboundSchema)).optional(),
    type: exports.BasketTradingExecutedPriceType$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketTradingExecutedPrice$;
(function (BasketTradingExecutedPrice$) {
    /** @deprecated use `BasketTradingExecutedPrice$inboundSchema` instead. */
    BasketTradingExecutedPrice$.inboundSchema = exports.BasketTradingExecutedPrice$inboundSchema;
    /** @deprecated use `BasketTradingExecutedPrice$outboundSchema` instead. */
    BasketTradingExecutedPrice$.outboundSchema = exports.BasketTradingExecutedPrice$outboundSchema;
})(BasketTradingExecutedPrice$ || (exports.BasketTradingExecutedPrice$ = BasketTradingExecutedPrice$ = {}));
//# sourceMappingURL=baskettradingexecutedprice.js.map