/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ExpectedNotionalCeilingAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const ExpectedNotionalCeilingAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ExpectedNotionalCeilingAmount$;
(function (ExpectedNotionalCeilingAmount$) {
    /** @deprecated use `ExpectedNotionalCeilingAmount$inboundSchema` instead. */
    ExpectedNotionalCeilingAmount$.inboundSchema = ExpectedNotionalCeilingAmount$inboundSchema;
    /** @deprecated use `ExpectedNotionalCeilingAmount$outboundSchema` instead. */
    ExpectedNotionalCeilingAmount$.outboundSchema = ExpectedNotionalCeilingAmount$outboundSchema;
})(ExpectedNotionalCeilingAmount$ || (ExpectedNotionalCeilingAmount$ = {}));
export function expectedNotionalCeilingAmountToJSON(expectedNotionalCeilingAmount) {
    return JSON.stringify(ExpectedNotionalCeilingAmount$outboundSchema.parse(expectedNotionalCeilingAmount));
}
export function expectedNotionalCeilingAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ExpectedNotionalCeilingAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ExpectedNotionalCeilingAmount' from JSON`);
}
/** @internal */
export const CalculateCashBalanceResponseOpenOrderSummary$inboundSchema = z.object({
    asset: z.string().optional(),
    expected_notional_ceiling_amount: z.nullable(z.lazy(() => ExpectedNotionalCeilingAmount$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "expected_notional_ceiling_amount": "expectedNotionalCeilingAmount",
    });
});
/** @internal */
export const CalculateCashBalanceResponseOpenOrderSummary$outboundSchema = z.object({
    asset: z.string().optional(),
    expectedNotionalCeilingAmount: z.nullable(z.lazy(() => ExpectedNotionalCeilingAmount$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        expectedNotionalCeilingAmount: "expected_notional_ceiling_amount",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CalculateCashBalanceResponseOpenOrderSummary$;
(function (CalculateCashBalanceResponseOpenOrderSummary$) {
    /** @deprecated use `CalculateCashBalanceResponseOpenOrderSummary$inboundSchema` instead. */
    CalculateCashBalanceResponseOpenOrderSummary$.inboundSchema = CalculateCashBalanceResponseOpenOrderSummary$inboundSchema;
    /** @deprecated use `CalculateCashBalanceResponseOpenOrderSummary$outboundSchema` instead. */
    CalculateCashBalanceResponseOpenOrderSummary$.outboundSchema = CalculateCashBalanceResponseOpenOrderSummary$outboundSchema;
})(CalculateCashBalanceResponseOpenOrderSummary$ || (CalculateCashBalanceResponseOpenOrderSummary$ = {}));
export function calculateCashBalanceResponseOpenOrderSummaryToJSON(calculateCashBalanceResponseOpenOrderSummary) {
    return JSON.stringify(CalculateCashBalanceResponseOpenOrderSummary$outboundSchema.parse(calculateCashBalanceResponseOpenOrderSummary));
}
export function calculateCashBalanceResponseOpenOrderSummaryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CalculateCashBalanceResponseOpenOrderSummary$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CalculateCashBalanceResponseOpenOrderSummary' from JSON`);
}
//# sourceMappingURL=calculatecashbalanceresponseopenordersummary.js.map