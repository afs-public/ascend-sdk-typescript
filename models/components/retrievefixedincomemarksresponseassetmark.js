/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { MarkPrice$inboundSchema, MarkPrice$outboundSchema, } from "./markprice.js";
/**
 * The identifier type of the asset being sought. This will be the same value as what was sent on the request.
 */
export var RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType;
(function (RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType) {
    RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType["AssetId"] = "ASSET_ID";
    RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType["Cusip"] = "CUSIP";
    RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType["Isin"] = "ISIN";
})(RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType || (RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType = {}));
/**
 * When marks are found and returned, this will be unspecified. If the asset was found, but no pricing data is returned, then: this will denote the reason, the marks[] list will be empty, and the accrued_interest_amount will not be present.
 */
export var MarkAbsenceReason;
(function (MarkAbsenceReason) {
    MarkAbsenceReason["MarkAbsenceReasonUnspecified"] = "MARK_ABSENCE_REASON_UNSPECIFIED";
    MarkAbsenceReason["NotPriced"] = "NOT_PRICED";
    MarkAbsenceReason["NotTradable"] = "NOT_TRADABLE";
})(MarkAbsenceReason || (MarkAbsenceReason = {}));
/** @internal */
export const RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$;
(function (RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$) {
    /** @deprecated use `RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$inboundSchema` instead. */
    RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$.inboundSchema = RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$inboundSchema;
    /** @deprecated use `RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$outboundSchema` instead. */
    RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$.outboundSchema = RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$outboundSchema;
})(RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$ || (RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$ = {}));
export function retrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmountToJSON(retrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount) {
    return JSON.stringify(RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$outboundSchema
        .parse(retrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount));
}
export function retrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount' from JSON`);
}
/** @internal */
export const RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$outboundSchema = z.union([
    z.nativeEnum(RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$;
(function (RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$) {
    /** @deprecated use `RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$inboundSchema` instead. */
    RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$.inboundSchema = RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$inboundSchema;
    /** @deprecated use `RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$outboundSchema` instead. */
    RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$.outboundSchema = RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$outboundSchema;
})(RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$ || (RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$ = {}));
/** @internal */
export const MarkAbsenceReason$inboundSchema = z
    .union([
    z.nativeEnum(MarkAbsenceReason),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const MarkAbsenceReason$outboundSchema = z.union([
    z.nativeEnum(MarkAbsenceReason),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MarkAbsenceReason$;
(function (MarkAbsenceReason$) {
    /** @deprecated use `MarkAbsenceReason$inboundSchema` instead. */
    MarkAbsenceReason$.inboundSchema = MarkAbsenceReason$inboundSchema;
    /** @deprecated use `MarkAbsenceReason$outboundSchema` instead. */
    MarkAbsenceReason$.outboundSchema = MarkAbsenceReason$outboundSchema;
})(MarkAbsenceReason$ || (MarkAbsenceReason$ = {}));
/** @internal */
export const RetrieveFixedIncomeMarksResponseAssetMark$inboundSchema = z.object({
    accrued_interest_amount: z.nullable(z.lazy(() => RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$inboundSchema)).optional(),
    asset_id: z.string().optional(),
    identifier: z.string().optional(),
    identifier_type: RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$inboundSchema
        .optional(),
    mark_absence_reason: MarkAbsenceReason$inboundSchema.optional(),
    mark_generation_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    marks: z.array(MarkPrice$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "accrued_interest_amount": "accruedInterestAmount",
        "asset_id": "assetId",
        "identifier_type": "identifierType",
        "mark_absence_reason": "markAbsenceReason",
        "mark_generation_time": "markGenerationTime",
    });
});
/** @internal */
export const RetrieveFixedIncomeMarksResponseAssetMark$outboundSchema = z.object({
    accruedInterestAmount: z.nullable(z.lazy(() => RetrieveFixedIncomeMarksResponseAssetMarkAccruedInterestAmount$outboundSchema)).optional(),
    assetId: z.string().optional(),
    identifier: z.string().optional(),
    identifierType: RetrieveFixedIncomeMarksResponseAssetMarkIdentifierType$outboundSchema
        .optional(),
    markAbsenceReason: MarkAbsenceReason$outboundSchema.optional(),
    markGenerationTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    marks: z.array(MarkPrice$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        accruedInterestAmount: "accrued_interest_amount",
        assetId: "asset_id",
        identifierType: "identifier_type",
        markAbsenceReason: "mark_absence_reason",
        markGenerationTime: "mark_generation_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveFixedIncomeMarksResponseAssetMark$;
(function (RetrieveFixedIncomeMarksResponseAssetMark$) {
    /** @deprecated use `RetrieveFixedIncomeMarksResponseAssetMark$inboundSchema` instead. */
    RetrieveFixedIncomeMarksResponseAssetMark$.inboundSchema = RetrieveFixedIncomeMarksResponseAssetMark$inboundSchema;
    /** @deprecated use `RetrieveFixedIncomeMarksResponseAssetMark$outboundSchema` instead. */
    RetrieveFixedIncomeMarksResponseAssetMark$.outboundSchema = RetrieveFixedIncomeMarksResponseAssetMark$outboundSchema;
})(RetrieveFixedIncomeMarksResponseAssetMark$ || (RetrieveFixedIncomeMarksResponseAssetMark$ = {}));
export function retrieveFixedIncomeMarksResponseAssetMarkToJSON(retrieveFixedIncomeMarksResponseAssetMark) {
    return JSON.stringify(RetrieveFixedIncomeMarksResponseAssetMark$outboundSchema.parse(retrieveFixedIncomeMarksResponseAssetMark));
}
export function retrieveFixedIncomeMarksResponseAssetMarkFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveFixedIncomeMarksResponseAssetMark$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveFixedIncomeMarksResponseAssetMark' from JSON`);
}
//# sourceMappingURL=retrievefixedincomemarksresponseassetmark.js.map