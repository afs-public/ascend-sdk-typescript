/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const InvestmentVehicleExperienceCreate$inboundSchema = z.object({
    commodities_average_annual_trade_count: z.number().int(),
    corporate_bonds_average_annual_trade_count: z.number().int(),
    funds_average_annual_trade_count: z.number().int(),
    government_bonds_average_annual_trade_count: z.number().int(),
    margin_average_annual_trade_count: z.number().int(),
    municipal_bonds_average_annual_trade_count: z.number().int(),
    options_average_annual_trade_count: z.number().int(),
    stocks_average_annual_trade_count: z.number().int(),
    tax_shelters_average_annual_trade_count: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        "commodities_average_annual_trade_count": "commoditiesAverageAnnualTradeCount",
        "corporate_bonds_average_annual_trade_count": "corporateBondsAverageAnnualTradeCount",
        "funds_average_annual_trade_count": "fundsAverageAnnualTradeCount",
        "government_bonds_average_annual_trade_count": "governmentBondsAverageAnnualTradeCount",
        "margin_average_annual_trade_count": "marginAverageAnnualTradeCount",
        "municipal_bonds_average_annual_trade_count": "municipalBondsAverageAnnualTradeCount",
        "options_average_annual_trade_count": "optionsAverageAnnualTradeCount",
        "stocks_average_annual_trade_count": "stocksAverageAnnualTradeCount",
        "tax_shelters_average_annual_trade_count": "taxSheltersAverageAnnualTradeCount",
    });
});
/** @internal */
export const InvestmentVehicleExperienceCreate$outboundSchema = z.object({
    commoditiesAverageAnnualTradeCount: z.number().int(),
    corporateBondsAverageAnnualTradeCount: z.number().int(),
    fundsAverageAnnualTradeCount: z.number().int(),
    governmentBondsAverageAnnualTradeCount: z.number().int(),
    marginAverageAnnualTradeCount: z.number().int(),
    municipalBondsAverageAnnualTradeCount: z.number().int(),
    optionsAverageAnnualTradeCount: z.number().int(),
    stocksAverageAnnualTradeCount: z.number().int(),
    taxSheltersAverageAnnualTradeCount: z.number().int(),
}).transform((v) => {
    return remap$(v, {
        commoditiesAverageAnnualTradeCount: "commodities_average_annual_trade_count",
        corporateBondsAverageAnnualTradeCount: "corporate_bonds_average_annual_trade_count",
        fundsAverageAnnualTradeCount: "funds_average_annual_trade_count",
        governmentBondsAverageAnnualTradeCount: "government_bonds_average_annual_trade_count",
        marginAverageAnnualTradeCount: "margin_average_annual_trade_count",
        municipalBondsAverageAnnualTradeCount: "municipal_bonds_average_annual_trade_count",
        optionsAverageAnnualTradeCount: "options_average_annual_trade_count",
        stocksAverageAnnualTradeCount: "stocks_average_annual_trade_count",
        taxSheltersAverageAnnualTradeCount: "tax_shelters_average_annual_trade_count",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestmentVehicleExperienceCreate$;
(function (InvestmentVehicleExperienceCreate$) {
    /** @deprecated use `InvestmentVehicleExperienceCreate$inboundSchema` instead. */
    InvestmentVehicleExperienceCreate$.inboundSchema = InvestmentVehicleExperienceCreate$inboundSchema;
    /** @deprecated use `InvestmentVehicleExperienceCreate$outboundSchema` instead. */
    InvestmentVehicleExperienceCreate$.outboundSchema = InvestmentVehicleExperienceCreate$outboundSchema;
})(InvestmentVehicleExperienceCreate$ || (InvestmentVehicleExperienceCreate$ = {}));
export function investmentVehicleExperienceCreateToJSON(investmentVehicleExperienceCreate) {
    return JSON.stringify(InvestmentVehicleExperienceCreate$outboundSchema.parse(investmentVehicleExperienceCreate));
}
export function investmentVehicleExperienceCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestmentVehicleExperienceCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestmentVehicleExperienceCreate' from JSON`);
}
//# sourceMappingURL=investmentvehicleexperiencecreate.js.map