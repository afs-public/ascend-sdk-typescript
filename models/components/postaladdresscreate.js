/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const PostalAddressCreate$inboundSchema = z.object({
    address_lines: z.array(z.string()).optional(),
    administrative_area: z.string().optional(),
    language_code: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postal_code: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    region_code: z.string().optional(),
    revision: z.number().int().optional(),
    sorting_code: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "address_lines": "addressLines",
        "administrative_area": "administrativeArea",
        "language_code": "languageCode",
        "postal_code": "postalCode",
        "region_code": "regionCode",
        "sorting_code": "sortingCode",
    });
});
/** @internal */
export const PostalAddressCreate$outboundSchema = z.object({
    addressLines: z.array(z.string()).optional(),
    administrativeArea: z.string().optional(),
    languageCode: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postalCode: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    regionCode: z.string().optional(),
    revision: z.number().int().optional(),
    sortingCode: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        addressLines: "address_lines",
        administrativeArea: "administrative_area",
        languageCode: "language_code",
        postalCode: "postal_code",
        regionCode: "region_code",
        sortingCode: "sorting_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostalAddressCreate$;
(function (PostalAddressCreate$) {
    /** @deprecated use `PostalAddressCreate$inboundSchema` instead. */
    PostalAddressCreate$.inboundSchema = PostalAddressCreate$inboundSchema;
    /** @deprecated use `PostalAddressCreate$outboundSchema` instead. */
    PostalAddressCreate$.outboundSchema = PostalAddressCreate$outboundSchema;
})(PostalAddressCreate$ || (PostalAddressCreate$ = {}));
export function postalAddressCreateToJSON(postalAddressCreate) {
    return JSON.stringify(PostalAddressCreate$outboundSchema.parse(postalAddressCreate));
}
export function postalAddressCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostalAddressCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PostalAddressCreate' from JSON`);
}
//# sourceMappingURL=postaladdresscreate.js.map