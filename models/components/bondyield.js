/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The type of yield.
 */
export var BondYieldYieldType;
(function (BondYieldYieldType) {
    BondYieldYieldType["YieldTypeUnspecified"] = "YIELD_TYPE_UNSPECIFIED";
    BondYieldYieldType["YieldToCall"] = "YIELD_TO_CALL";
    BondYieldYieldType["YieldToMaturity"] = "YIELD_TO_MATURITY";
    BondYieldYieldType["YieldToPut"] = "YIELD_TO_PUT";
    BondYieldYieldType["YieldToWorst"] = "YIELD_TO_WORST";
})(BondYieldYieldType || (BondYieldYieldType = {}));
/** @internal */
export const Percent$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const Percent$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Percent$;
(function (Percent$) {
    /** @deprecated use `Percent$inboundSchema` instead. */
    Percent$.inboundSchema = Percent$inboundSchema;
    /** @deprecated use `Percent$outboundSchema` instead. */
    Percent$.outboundSchema = Percent$outboundSchema;
})(Percent$ || (Percent$ = {}));
export function percentToJSON(percent) {
    return JSON.stringify(Percent$outboundSchema.parse(percent));
}
export function percentFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Percent$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Percent' from JSON`);
}
/** @internal */
export const BondYieldYieldType$inboundSchema = z
    .union([
    z.nativeEnum(BondYieldYieldType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const BondYieldYieldType$outboundSchema = z.union([
    z.nativeEnum(BondYieldYieldType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BondYieldYieldType$;
(function (BondYieldYieldType$) {
    /** @deprecated use `BondYieldYieldType$inboundSchema` instead. */
    BondYieldYieldType$.inboundSchema = BondYieldYieldType$inboundSchema;
    /** @deprecated use `BondYieldYieldType$outboundSchema` instead. */
    BondYieldYieldType$.outboundSchema = BondYieldYieldType$outboundSchema;
})(BondYieldYieldType$ || (BondYieldYieldType$ = {}));
/** @internal */
export const BondYield$inboundSchema = z.object({
    percent: z.nullable(z.lazy(() => Percent$inboundSchema)).optional(),
    yield_type: BondYieldYieldType$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "yield_type": "yieldType",
    });
});
/** @internal */
export const BondYield$outboundSchema = z.object({
    percent: z.nullable(z.lazy(() => Percent$outboundSchema)).optional(),
    yieldType: BondYieldYieldType$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        yieldType: "yield_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BondYield$;
(function (BondYield$) {
    /** @deprecated use `BondYield$inboundSchema` instead. */
    BondYield$.inboundSchema = BondYield$inboundSchema;
    /** @deprecated use `BondYield$outboundSchema` instead. */
    BondYield$.outboundSchema = BondYield$outboundSchema;
})(BondYield$ || (BondYield$ = {}));
export function bondYieldToJSON(bondYield) {
    return JSON.stringify(BondYield$outboundSchema.parse(bondYield));
}
export function bondYieldFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BondYield$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BondYield' from JSON`);
}
//# sourceMappingURL=bondyield.js.map