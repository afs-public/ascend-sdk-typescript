"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityIdentification$ = exports.IdentityIdentification$outboundSchema = exports.IdentityIdentification$inboundSchema = exports.IdentityIdentificationType$ = exports.IdentityIdentificationType$outboundSchema = exports.IdentityIdentificationType$inboundSchema = exports.IdentityIdentificationType = void 0;
exports.identityIdentificationToJSON = identityIdentificationToJSON;
exports.identityIdentificationFromJSON = identityIdentificationFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * **Field Dependencies:**
 *
 * @remarks
 *
 * An SSN or ITIN is required when `check_types` is `DATABASE`
 *
 * Required if `check_types` is `DATABASE`.
 *
 * Otherwise, must be empty.
 */
var IdentityIdentificationType;
(function (IdentityIdentificationType) {
    IdentityIdentificationType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    IdentityIdentificationType["Ssn"] = "SSN";
    IdentityIdentificationType["Passport"] = "PASSPORT";
    IdentityIdentificationType["DriversLicense"] = "DRIVERS_LICENSE";
    IdentityIdentificationType["Itin"] = "ITIN";
})(IdentityIdentificationType || (exports.IdentityIdentificationType = IdentityIdentificationType = {}));
/** @internal */
exports.IdentityIdentificationType$inboundSchema = z
    .union([
    z.nativeEnum(IdentityIdentificationType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IdentityIdentificationType$outboundSchema = z.union([
    z.nativeEnum(IdentityIdentificationType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IdentityIdentificationType$;
(function (IdentityIdentificationType$) {
    /** @deprecated use `IdentityIdentificationType$inboundSchema` instead. */
    IdentityIdentificationType$.inboundSchema = exports.IdentityIdentificationType$inboundSchema;
    /** @deprecated use `IdentityIdentificationType$outboundSchema` instead. */
    IdentityIdentificationType$.outboundSchema = exports.IdentityIdentificationType$outboundSchema;
})(IdentityIdentificationType$ || (exports.IdentityIdentificationType$ = IdentityIdentificationType$ = {}));
/** @internal */
exports.IdentityIdentification$inboundSchema = z.object({
    administrative_area: z.string().optional(),
    region_code: z.string().optional(),
    type: exports.IdentityIdentificationType$inboundSchema.optional(),
    value: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "administrative_area": "administrativeArea",
        "region_code": "regionCode",
    });
});
/** @internal */
exports.IdentityIdentification$outboundSchema = z.object({
    administrativeArea: z.string().optional(),
    regionCode: z.string().optional(),
    type: exports.IdentityIdentificationType$outboundSchema.optional(),
    value: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        administrativeArea: "administrative_area",
        regionCode: "region_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IdentityIdentification$;
(function (IdentityIdentification$) {
    /** @deprecated use `IdentityIdentification$inboundSchema` instead. */
    IdentityIdentification$.inboundSchema = exports.IdentityIdentification$inboundSchema;
    /** @deprecated use `IdentityIdentification$outboundSchema` instead. */
    IdentityIdentification$.outboundSchema = exports.IdentityIdentification$outboundSchema;
})(IdentityIdentification$ || (exports.IdentityIdentification$ = IdentityIdentification$ = {}));
function identityIdentificationToJSON(identityIdentification) {
    return JSON.stringify(exports.IdentityIdentification$outboundSchema.parse(identityIdentification));
}
function identityIdentificationFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.IdentityIdentification$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IdentityIdentification' from JSON`);
}
//# sourceMappingURL=identityidentification.js.map