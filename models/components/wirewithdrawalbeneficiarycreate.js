/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { AddressCreate$inboundSchema, AddressCreate$outboundSchema, } from "./addresscreate.js";
/** @internal */
export const WireWithdrawalBeneficiaryCreate$inboundSchema = z.object({
    account: z.string(),
    account_title: z.string().optional(),
    address: AddressCreate$inboundSchema.optional(),
    third_party: z.boolean().optional(),
}).transform((v) => {
    return remap$(v, {
        "account_title": "accountTitle",
        "third_party": "thirdParty",
    });
});
/** @internal */
export const WireWithdrawalBeneficiaryCreate$outboundSchema = z.object({
    account: z.string(),
    accountTitle: z.string().optional(),
    address: AddressCreate$outboundSchema.optional(),
    thirdParty: z.boolean().optional(),
}).transform((v) => {
    return remap$(v, {
        accountTitle: "account_title",
        thirdParty: "third_party",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalBeneficiaryCreate$;
(function (WireWithdrawalBeneficiaryCreate$) {
    /** @deprecated use `WireWithdrawalBeneficiaryCreate$inboundSchema` instead. */
    WireWithdrawalBeneficiaryCreate$.inboundSchema = WireWithdrawalBeneficiaryCreate$inboundSchema;
    /** @deprecated use `WireWithdrawalBeneficiaryCreate$outboundSchema` instead. */
    WireWithdrawalBeneficiaryCreate$.outboundSchema = WireWithdrawalBeneficiaryCreate$outboundSchema;
})(WireWithdrawalBeneficiaryCreate$ || (WireWithdrawalBeneficiaryCreate$ = {}));
export function wireWithdrawalBeneficiaryCreateToJSON(wireWithdrawalBeneficiaryCreate) {
    return JSON.stringify(WireWithdrawalBeneficiaryCreate$outboundSchema.parse(wireWithdrawalBeneficiaryCreate));
}
export function wireWithdrawalBeneficiaryCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalBeneficiaryCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalBeneficiaryCreate' from JSON`);
}
//# sourceMappingURL=wirewithdrawalbeneficiarycreate.js.map