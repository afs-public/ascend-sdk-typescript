/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Position$inboundSchema, Position$outboundSchema, } from "./position.js";
/** @internal */
export const ListPositionsResponse$inboundSchema = z.object({
    next_page_token: z.string().optional(),
    positions: z.array(Position$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListPositionsResponse$outboundSchema = z.object({
    nextPageToken: z.string().optional(),
    positions: z.array(Position$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPositionsResponse$;
(function (ListPositionsResponse$) {
    /** @deprecated use `ListPositionsResponse$inboundSchema` instead. */
    ListPositionsResponse$.inboundSchema = ListPositionsResponse$inboundSchema;
    /** @deprecated use `ListPositionsResponse$outboundSchema` instead. */
    ListPositionsResponse$.outboundSchema = ListPositionsResponse$outboundSchema;
})(ListPositionsResponse$ || (ListPositionsResponse$ = {}));
export function listPositionsResponseToJSON(listPositionsResponse) {
    return JSON.stringify(ListPositionsResponse$outboundSchema.parse(listPositionsResponse));
}
export function listPositionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPositionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPositionsResponse' from JSON`);
}
//# sourceMappingURL=listpositionsresponse.js.map