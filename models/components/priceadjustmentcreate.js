/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
import { DecimalCreate$inboundSchema, DecimalCreate$outboundSchema, } from "./decimalcreate.js";
/**
 * The type of price adjustment being applied by the broker to the net price of the security.
 */
export var PriceAdjustmentType;
(function (PriceAdjustmentType) {
    PriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    PriceAdjustmentType["Markup"] = "MARKUP";
    PriceAdjustmentType["Markdown"] = "MARKDOWN";
    PriceAdjustmentType["GrossCredit"] = "GROSS_CREDIT";
})(PriceAdjustmentType || (PriceAdjustmentType = {}));
/** @internal */
export const PriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(PriceAdjustmentType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const PriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(PriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PriceAdjustmentType$;
(function (PriceAdjustmentType$) {
    /** @deprecated use `PriceAdjustmentType$inboundSchema` instead. */
    PriceAdjustmentType$.inboundSchema = PriceAdjustmentType$inboundSchema;
    /** @deprecated use `PriceAdjustmentType$outboundSchema` instead. */
    PriceAdjustmentType$.outboundSchema = PriceAdjustmentType$outboundSchema;
})(PriceAdjustmentType$ || (PriceAdjustmentType$ = {}));
/** @internal */
export const PriceAdjustmentCreate$inboundSchema = z.object({
    price_adjustment_amount: DecimalCreate$inboundSchema,
    price_adjustment_type: PriceAdjustmentType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
export const PriceAdjustmentCreate$outboundSchema = z.object({
    priceAdjustmentAmount: DecimalCreate$outboundSchema,
    priceAdjustmentType: PriceAdjustmentType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PriceAdjustmentCreate$;
(function (PriceAdjustmentCreate$) {
    /** @deprecated use `PriceAdjustmentCreate$inboundSchema` instead. */
    PriceAdjustmentCreate$.inboundSchema = PriceAdjustmentCreate$inboundSchema;
    /** @deprecated use `PriceAdjustmentCreate$outboundSchema` instead. */
    PriceAdjustmentCreate$.outboundSchema = PriceAdjustmentCreate$outboundSchema;
})(PriceAdjustmentCreate$ || (PriceAdjustmentCreate$ = {}));
export function priceAdjustmentCreateToJSON(priceAdjustmentCreate) {
    return JSON.stringify(PriceAdjustmentCreate$outboundSchema.parse(priceAdjustmentCreate));
}
export function priceAdjustmentCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PriceAdjustmentCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PriceAdjustmentCreate' from JSON`);
}
//# sourceMappingURL=priceadjustmentcreate.js.map