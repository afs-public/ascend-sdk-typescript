/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { PushSubscription$inboundSchema, PushSubscription$outboundSchema, } from "./pushsubscription.js";
/** @internal */
export const ListPushSubscriptionsResponse$inboundSchema = z.object({
    next_page_token: z.string().optional(),
    push_subscriptions: z.array(PushSubscription$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
        "push_subscriptions": "pushSubscriptions",
    });
});
/** @internal */
export const ListPushSubscriptionsResponse$outboundSchema = z.object({
    nextPageToken: z.string().optional(),
    pushSubscriptions: z.array(PushSubscription$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
        pushSubscriptions: "push_subscriptions",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPushSubscriptionsResponse$;
(function (ListPushSubscriptionsResponse$) {
    /** @deprecated use `ListPushSubscriptionsResponse$inboundSchema` instead. */
    ListPushSubscriptionsResponse$.inboundSchema = ListPushSubscriptionsResponse$inboundSchema;
    /** @deprecated use `ListPushSubscriptionsResponse$outboundSchema` instead. */
    ListPushSubscriptionsResponse$.outboundSchema = ListPushSubscriptionsResponse$outboundSchema;
})(ListPushSubscriptionsResponse$ || (ListPushSubscriptionsResponse$ = {}));
export function listPushSubscriptionsResponseToJSON(listPushSubscriptionsResponse) {
    return JSON.stringify(ListPushSubscriptionsResponse$outboundSchema.parse(listPushSubscriptionsResponse));
}
export function listPushSubscriptionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPushSubscriptionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPushSubscriptionsResponse' from JSON`);
}
//# sourceMappingURL=listpushsubscriptionsresponse.js.map