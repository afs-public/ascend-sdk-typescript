/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The bank account type.
 */
export var BankAccountCreateType;
(function (BankAccountCreateType) {
    BankAccountCreateType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    BankAccountCreateType["Checking"] = "CHECKING";
    BankAccountCreateType["Savings"] = "SAVINGS";
})(BankAccountCreateType || (BankAccountCreateType = {}));
/** @internal */
export const BankAccountCreateType$inboundSchema = z
    .union([
    z.nativeEnum(BankAccountCreateType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const BankAccountCreateType$outboundSchema = z.union([
    z.nativeEnum(BankAccountCreateType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankAccountCreateType$;
(function (BankAccountCreateType$) {
    /** @deprecated use `BankAccountCreateType$inboundSchema` instead. */
    BankAccountCreateType$.inboundSchema = BankAccountCreateType$inboundSchema;
    /** @deprecated use `BankAccountCreateType$outboundSchema` instead. */
    BankAccountCreateType$.outboundSchema = BankAccountCreateType$outboundSchema;
})(BankAccountCreateType$ || (BankAccountCreateType$ = {}));
/** @internal */
export const BankAccountCreate$inboundSchema = z.object({
    account_number: z.string(),
    owner: z.string(),
    routing_number: z.string(),
    type: BankAccountCreateType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_number": "accountNumber",
        "routing_number": "routingNumber",
    });
});
/** @internal */
export const BankAccountCreate$outboundSchema = z.object({
    accountNumber: z.string(),
    owner: z.string(),
    routingNumber: z.string(),
    type: BankAccountCreateType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountNumber: "account_number",
        routingNumber: "routing_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankAccountCreate$;
(function (BankAccountCreate$) {
    /** @deprecated use `BankAccountCreate$inboundSchema` instead. */
    BankAccountCreate$.inboundSchema = BankAccountCreate$inboundSchema;
    /** @deprecated use `BankAccountCreate$outboundSchema` instead. */
    BankAccountCreate$.outboundSchema = BankAccountCreate$outboundSchema;
})(BankAccountCreate$ || (BankAccountCreate$ = {}));
export function bankAccountCreateToJSON(bankAccountCreate) {
    return JSON.stringify(BankAccountCreate$outboundSchema.parse(bankAccountCreate));
}
export function bankAccountCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankAccountCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankAccountCreate' from JSON`);
}
//# sourceMappingURL=bankaccountcreate.js.map