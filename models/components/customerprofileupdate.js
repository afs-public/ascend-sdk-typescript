/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * Annual income range; the low number is exclusive, the high number is inclusive
 */
export var CustomerProfileUpdateAnnualIncomeRangeUsd;
(function (CustomerProfileUpdateAnnualIncomeRangeUsd) {
    CustomerProfileUpdateAnnualIncomeRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    CustomerProfileUpdateAnnualIncomeRangeUsd["Under25K"] = "UNDER_25K";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    CustomerProfileUpdateAnnualIncomeRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    CustomerProfileUpdateAnnualIncomeRangeUsd["Over5M"] = "OVER_5M";
})(CustomerProfileUpdateAnnualIncomeRangeUsd || (CustomerProfileUpdateAnnualIncomeRangeUsd = {}));
/**
 * Investment experience.
 */
export var CustomerProfileUpdateInvestmentExperience;
(function (CustomerProfileUpdateInvestmentExperience) {
    CustomerProfileUpdateInvestmentExperience["InvestmentExperienceUnspecified"] = "INVESTMENT_EXPERIENCE_UNSPECIFIED";
    CustomerProfileUpdateInvestmentExperience["None"] = "NONE";
    CustomerProfileUpdateInvestmentExperience["Limited"] = "LIMITED";
    CustomerProfileUpdateInvestmentExperience["Good"] = "GOOD";
    CustomerProfileUpdateInvestmentExperience["Extensive"] = "EXTENSIVE";
})(CustomerProfileUpdateInvestmentExperience || (CustomerProfileUpdateInvestmentExperience = {}));
/**
 * Liquid net worth range; the low number is exclusive, the high number is inclusive
 */
export var CustomerProfileUpdateLiquidNetWorthRangeUsd;
(function (CustomerProfileUpdateLiquidNetWorthRangeUsd) {
    CustomerProfileUpdateLiquidNetWorthRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["Under25K"] = "UNDER_25K";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    CustomerProfileUpdateLiquidNetWorthRangeUsd["Over5M"] = "OVER_5M";
})(CustomerProfileUpdateLiquidNetWorthRangeUsd || (CustomerProfileUpdateLiquidNetWorthRangeUsd = {}));
/**
 * Total net worth range; the low number is exclusive, the high number is inclusive
 */
export var CustomerProfileUpdateTotalNetWorthRangeUsd;
(function (CustomerProfileUpdateTotalNetWorthRangeUsd) {
    CustomerProfileUpdateTotalNetWorthRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    CustomerProfileUpdateTotalNetWorthRangeUsd["Under25K"] = "UNDER_25K";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    CustomerProfileUpdateTotalNetWorthRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    CustomerProfileUpdateTotalNetWorthRangeUsd["Over5M"] = "OVER_5M";
})(CustomerProfileUpdateTotalNetWorthRangeUsd || (CustomerProfileUpdateTotalNetWorthRangeUsd = {}));
/** @internal */
export const CustomerProfileUpdateAnnualIncomeRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(CustomerProfileUpdateAnnualIncomeRangeUsd),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const CustomerProfileUpdateAnnualIncomeRangeUsd$outboundSchema = z.union([
    z.nativeEnum(CustomerProfileUpdateAnnualIncomeRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerProfileUpdateAnnualIncomeRangeUsd$;
(function (CustomerProfileUpdateAnnualIncomeRangeUsd$) {
    /** @deprecated use `CustomerProfileUpdateAnnualIncomeRangeUsd$inboundSchema` instead. */
    CustomerProfileUpdateAnnualIncomeRangeUsd$.inboundSchema = CustomerProfileUpdateAnnualIncomeRangeUsd$inboundSchema;
    /** @deprecated use `CustomerProfileUpdateAnnualIncomeRangeUsd$outboundSchema` instead. */
    CustomerProfileUpdateAnnualIncomeRangeUsd$.outboundSchema = CustomerProfileUpdateAnnualIncomeRangeUsd$outboundSchema;
})(CustomerProfileUpdateAnnualIncomeRangeUsd$ || (CustomerProfileUpdateAnnualIncomeRangeUsd$ = {}));
/** @internal */
export const CustomerProfileUpdateInvestmentExperience$inboundSchema = z
    .union([
    z.nativeEnum(CustomerProfileUpdateInvestmentExperience),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const CustomerProfileUpdateInvestmentExperience$outboundSchema = z.union([
    z.nativeEnum(CustomerProfileUpdateInvestmentExperience),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerProfileUpdateInvestmentExperience$;
(function (CustomerProfileUpdateInvestmentExperience$) {
    /** @deprecated use `CustomerProfileUpdateInvestmentExperience$inboundSchema` instead. */
    CustomerProfileUpdateInvestmentExperience$.inboundSchema = CustomerProfileUpdateInvestmentExperience$inboundSchema;
    /** @deprecated use `CustomerProfileUpdateInvestmentExperience$outboundSchema` instead. */
    CustomerProfileUpdateInvestmentExperience$.outboundSchema = CustomerProfileUpdateInvestmentExperience$outboundSchema;
})(CustomerProfileUpdateInvestmentExperience$ || (CustomerProfileUpdateInvestmentExperience$ = {}));
/** @internal */
export const CustomerProfileUpdateLiquidNetWorthRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(CustomerProfileUpdateLiquidNetWorthRangeUsd),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const CustomerProfileUpdateLiquidNetWorthRangeUsd$outboundSchema = z.union([
    z.nativeEnum(CustomerProfileUpdateLiquidNetWorthRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerProfileUpdateLiquidNetWorthRangeUsd$;
(function (CustomerProfileUpdateLiquidNetWorthRangeUsd$) {
    /** @deprecated use `CustomerProfileUpdateLiquidNetWorthRangeUsd$inboundSchema` instead. */
    CustomerProfileUpdateLiquidNetWorthRangeUsd$.inboundSchema = CustomerProfileUpdateLiquidNetWorthRangeUsd$inboundSchema;
    /** @deprecated use `CustomerProfileUpdateLiquidNetWorthRangeUsd$outboundSchema` instead. */
    CustomerProfileUpdateLiquidNetWorthRangeUsd$.outboundSchema = CustomerProfileUpdateLiquidNetWorthRangeUsd$outboundSchema;
})(CustomerProfileUpdateLiquidNetWorthRangeUsd$ || (CustomerProfileUpdateLiquidNetWorthRangeUsd$ = {}));
/** @internal */
export const CustomerProfileUpdateTotalNetWorthRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(CustomerProfileUpdateTotalNetWorthRangeUsd),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const CustomerProfileUpdateTotalNetWorthRangeUsd$outboundSchema = z.union([
    z.nativeEnum(CustomerProfileUpdateTotalNetWorthRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerProfileUpdateTotalNetWorthRangeUsd$;
(function (CustomerProfileUpdateTotalNetWorthRangeUsd$) {
    /** @deprecated use `CustomerProfileUpdateTotalNetWorthRangeUsd$inboundSchema` instead. */
    CustomerProfileUpdateTotalNetWorthRangeUsd$.inboundSchema = CustomerProfileUpdateTotalNetWorthRangeUsd$inboundSchema;
    /** @deprecated use `CustomerProfileUpdateTotalNetWorthRangeUsd$outboundSchema` instead. */
    CustomerProfileUpdateTotalNetWorthRangeUsd$.outboundSchema = CustomerProfileUpdateTotalNetWorthRangeUsd$outboundSchema;
})(CustomerProfileUpdateTotalNetWorthRangeUsd$ || (CustomerProfileUpdateTotalNetWorthRangeUsd$ = {}));
/** @internal */
export const CustomerProfileUpdate$inboundSchema = z.object({
    annual_income_range_usd: CustomerProfileUpdateAnnualIncomeRangeUsd$inboundSchema.optional(),
    federal_tax_bracket: z.number().optional(),
    investment_experience: CustomerProfileUpdateInvestmentExperience$inboundSchema
        .optional(),
    liquid_net_worth_range_usd: CustomerProfileUpdateLiquidNetWorthRangeUsd$inboundSchema.optional(),
    total_net_worth_range_usd: CustomerProfileUpdateTotalNetWorthRangeUsd$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "annual_income_range_usd": "annualIncomeRangeUsd",
        "federal_tax_bracket": "federalTaxBracket",
        "investment_experience": "investmentExperience",
        "liquid_net_worth_range_usd": "liquidNetWorthRangeUsd",
        "total_net_worth_range_usd": "totalNetWorthRangeUsd",
    });
});
/** @internal */
export const CustomerProfileUpdate$outboundSchema = z.object({
    annualIncomeRangeUsd: CustomerProfileUpdateAnnualIncomeRangeUsd$outboundSchema
        .optional(),
    federalTaxBracket: z.number().optional(),
    investmentExperience: CustomerProfileUpdateInvestmentExperience$outboundSchema
        .optional(),
    liquidNetWorthRangeUsd: CustomerProfileUpdateLiquidNetWorthRangeUsd$outboundSchema.optional(),
    totalNetWorthRangeUsd: CustomerProfileUpdateTotalNetWorthRangeUsd$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        annualIncomeRangeUsd: "annual_income_range_usd",
        federalTaxBracket: "federal_tax_bracket",
        investmentExperience: "investment_experience",
        liquidNetWorthRangeUsd: "liquid_net_worth_range_usd",
        totalNetWorthRangeUsd: "total_net_worth_range_usd",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerProfileUpdate$;
(function (CustomerProfileUpdate$) {
    /** @deprecated use `CustomerProfileUpdate$inboundSchema` instead. */
    CustomerProfileUpdate$.inboundSchema = CustomerProfileUpdate$inboundSchema;
    /** @deprecated use `CustomerProfileUpdate$outboundSchema` instead. */
    CustomerProfileUpdate$.outboundSchema = CustomerProfileUpdate$outboundSchema;
})(CustomerProfileUpdate$ || (CustomerProfileUpdate$ = {}));
export function customerProfileUpdateToJSON(customerProfileUpdate) {
    return JSON.stringify(CustomerProfileUpdate$outboundSchema.parse(customerProfileUpdate));
}
export function customerProfileUpdateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerProfileUpdate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerProfileUpdate' from JSON`);
}
//# sourceMappingURL=customerprofileupdate.js.map