/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const SubmitBasketRequestCreate$inboundSchema = z.object({
    client_basket_submit_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    name: z.string(),
}).transform((v) => {
    return remap$(v, {
        "client_basket_submit_time": "clientBasketSubmitTime",
    });
});
/** @internal */
export const SubmitBasketRequestCreate$outboundSchema = z.object({
    clientBasketSubmitTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    name: z.string(),
}).transform((v) => {
    return remap$(v, {
        clientBasketSubmitTime: "client_basket_submit_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubmitBasketRequestCreate$;
(function (SubmitBasketRequestCreate$) {
    /** @deprecated use `SubmitBasketRequestCreate$inboundSchema` instead. */
    SubmitBasketRequestCreate$.inboundSchema = SubmitBasketRequestCreate$inboundSchema;
    /** @deprecated use `SubmitBasketRequestCreate$outboundSchema` instead. */
    SubmitBasketRequestCreate$.outboundSchema = SubmitBasketRequestCreate$outboundSchema;
})(SubmitBasketRequestCreate$ || (SubmitBasketRequestCreate$ = {}));
export function submitBasketRequestCreateToJSON(submitBasketRequestCreate) {
    return JSON.stringify(SubmitBasketRequestCreate$outboundSchema.parse(submitBasketRequestCreate));
}
export function submitBasketRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubmitBasketRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubmitBasketRequestCreate' from JSON`);
}
//# sourceMappingURL=submitbasketrequestcreate.js.map