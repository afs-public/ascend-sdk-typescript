/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Entitlement$inboundSchema, Entitlement$outboundSchema, } from "./entitlement.js";
/** @internal */
export const ListEntitlementsResponse$inboundSchema = z.object({
    entitlements: z.array(Entitlement$inboundSchema).optional(),
    next_page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListEntitlementsResponse$outboundSchema = z.object({
    entitlements: z.array(Entitlement$outboundSchema).optional(),
    nextPageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListEntitlementsResponse$;
(function (ListEntitlementsResponse$) {
    /** @deprecated use `ListEntitlementsResponse$inboundSchema` instead. */
    ListEntitlementsResponse$.inboundSchema = ListEntitlementsResponse$inboundSchema;
    /** @deprecated use `ListEntitlementsResponse$outboundSchema` instead. */
    ListEntitlementsResponse$.outboundSchema = ListEntitlementsResponse$outboundSchema;
})(ListEntitlementsResponse$ || (ListEntitlementsResponse$ = {}));
export function listEntitlementsResponseToJSON(listEntitlementsResponse) {
    return JSON.stringify(ListEntitlementsResponse$outboundSchema.parse(listEntitlementsResponse));
}
export function listEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListEntitlementsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListEntitlementsResponse' from JSON`);
}
//# sourceMappingURL=listentitlementsresponse.js.map