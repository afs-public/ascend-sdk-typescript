/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const AccruedInterestAmount1$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AccruedInterestAmount1$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccruedInterestAmount1$;
(function (AccruedInterestAmount1$) {
    /** @deprecated use `AccruedInterestAmount1$inboundSchema` instead. */
    AccruedInterestAmount1$.inboundSchema = AccruedInterestAmount1$inboundSchema;
    /** @deprecated use `AccruedInterestAmount1$outboundSchema` instead. */
    AccruedInterestAmount1$.outboundSchema = AccruedInterestAmount1$outboundSchema;
})(AccruedInterestAmount1$ || (AccruedInterestAmount1$ = {}));
export function accruedInterestAmount1ToJSON(accruedInterestAmount1) {
    return JSON.stringify(AccruedInterestAmount1$outboundSchema.parse(accruedInterestAmount1));
}
export function accruedInterestAmount1FromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccruedInterestAmount1$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccruedInterestAmount1' from JSON`);
}
/** @internal */
export const AccruedInterest$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AccruedInterestAmount1$inboundSchema))
        .optional(),
});
/** @internal */
export const AccruedInterest$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AccruedInterestAmount1$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccruedInterest$;
(function (AccruedInterest$) {
    /** @deprecated use `AccruedInterest$inboundSchema` instead. */
    AccruedInterest$.inboundSchema = AccruedInterest$inboundSchema;
    /** @deprecated use `AccruedInterest$outboundSchema` instead. */
    AccruedInterest$.outboundSchema = AccruedInterest$outboundSchema;
})(AccruedInterest$ || (AccruedInterest$ = {}));
export function accruedInterestToJSON(accruedInterest) {
    return JSON.stringify(AccruedInterest$outboundSchema.parse(accruedInterest));
}
export function accruedInterestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccruedInterest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccruedInterest' from JSON`);
}
//# sourceMappingURL=accruedinterest.js.map