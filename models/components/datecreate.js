/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const DateCreate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const DateCreate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var DateCreate$;
(function (DateCreate$) {
    /** @deprecated use `DateCreate$inboundSchema` instead. */
    DateCreate$.inboundSchema = DateCreate$inboundSchema;
    /** @deprecated use `DateCreate$outboundSchema` instead. */
    DateCreate$.outboundSchema = DateCreate$outboundSchema;
})(DateCreate$ || (DateCreate$ = {}));
export function dateCreateToJSON(dateCreate) {
    return JSON.stringify(DateCreate$outboundSchema.parse(dateCreate));
}
export function dateCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => DateCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'DateCreate' from JSON`);
}
//# sourceMappingURL=datecreate.js.map