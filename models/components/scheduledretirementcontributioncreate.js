/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * A temporal tax year value. This will always evaluate to a year based on the date the transfer was initiated.
 */
export var TemporalTaxYear;
(function (TemporalTaxYear) {
    TemporalTaxYear["TemporalTaxYearUnspecified"] = "TEMPORAL_TAX_YEAR_UNSPECIFIED";
    TemporalTaxYear["CurrentCalendarYear"] = "CURRENT_CALENDAR_YEAR";
    TemporalTaxYear["MinimumTaxYear"] = "MINIMUM_TAX_YEAR";
})(TemporalTaxYear || (TemporalTaxYear = {}));
/**
 * The type of retirement contribution.
 */
export var ScheduledRetirementContributionCreateType;
(function (ScheduledRetirementContributionCreateType) {
    ScheduledRetirementContributionCreateType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    ScheduledRetirementContributionCreateType["Regular"] = "REGULAR";
    ScheduledRetirementContributionCreateType["Employee"] = "EMPLOYEE";
    ScheduledRetirementContributionCreateType["Employer"] = "EMPLOYER";
    ScheduledRetirementContributionCreateType["Recharacterization"] = "RECHARACTERIZATION";
    ScheduledRetirementContributionCreateType["Rollover60Day"] = "ROLLOVER_60_DAY";
    ScheduledRetirementContributionCreateType["RolloverDirect"] = "ROLLOVER_DIRECT";
    ScheduledRetirementContributionCreateType["Transfer"] = "TRANSFER";
    ScheduledRetirementContributionCreateType["TrusteeFee"] = "TRUSTEE_FEE";
    ScheduledRetirementContributionCreateType["Conversion"] = "CONVERSION";
    ScheduledRetirementContributionCreateType["Repayment"] = "REPAYMENT";
    ScheduledRetirementContributionCreateType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(ScheduledRetirementContributionCreateType || (ScheduledRetirementContributionCreateType = {}));
/** @internal */
export const TemporalTaxYear$inboundSchema = z
    .union([
    z.nativeEnum(TemporalTaxYear),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const TemporalTaxYear$outboundSchema = z.union([
    z.nativeEnum(TemporalTaxYear),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TemporalTaxYear$;
(function (TemporalTaxYear$) {
    /** @deprecated use `TemporalTaxYear$inboundSchema` instead. */
    TemporalTaxYear$.inboundSchema = TemporalTaxYear$inboundSchema;
    /** @deprecated use `TemporalTaxYear$outboundSchema` instead. */
    TemporalTaxYear$.outboundSchema = TemporalTaxYear$outboundSchema;
})(TemporalTaxYear$ || (TemporalTaxYear$ = {}));
/** @internal */
export const ScheduledRetirementContributionCreateType$inboundSchema = z
    .union([
    z.nativeEnum(ScheduledRetirementContributionCreateType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const ScheduledRetirementContributionCreateType$outboundSchema = z.union([
    z.nativeEnum(ScheduledRetirementContributionCreateType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ScheduledRetirementContributionCreateType$;
(function (ScheduledRetirementContributionCreateType$) {
    /** @deprecated use `ScheduledRetirementContributionCreateType$inboundSchema` instead. */
    ScheduledRetirementContributionCreateType$.inboundSchema = ScheduledRetirementContributionCreateType$inboundSchema;
    /** @deprecated use `ScheduledRetirementContributionCreateType$outboundSchema` instead. */
    ScheduledRetirementContributionCreateType$.outboundSchema = ScheduledRetirementContributionCreateType$outboundSchema;
})(ScheduledRetirementContributionCreateType$ || (ScheduledRetirementContributionCreateType$ = {}));
/** @internal */
export const ScheduledRetirementContributionCreate$inboundSchema = z.object({
    tax_year: z.number().int().optional(),
    temporal_tax_year: TemporalTaxYear$inboundSchema.optional(),
    type: ScheduledRetirementContributionCreateType$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "tax_year": "taxYear",
        "temporal_tax_year": "temporalTaxYear",
    });
});
/** @internal */
export const ScheduledRetirementContributionCreate$outboundSchema = z.object({
    taxYear: z.number().int().optional(),
    temporalTaxYear: TemporalTaxYear$outboundSchema.optional(),
    type: ScheduledRetirementContributionCreateType$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        taxYear: "tax_year",
        temporalTaxYear: "temporal_tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ScheduledRetirementContributionCreate$;
(function (ScheduledRetirementContributionCreate$) {
    /** @deprecated use `ScheduledRetirementContributionCreate$inboundSchema` instead. */
    ScheduledRetirementContributionCreate$.inboundSchema = ScheduledRetirementContributionCreate$inboundSchema;
    /** @deprecated use `ScheduledRetirementContributionCreate$outboundSchema` instead. */
    ScheduledRetirementContributionCreate$.outboundSchema = ScheduledRetirementContributionCreate$outboundSchema;
})(ScheduledRetirementContributionCreate$ || (ScheduledRetirementContributionCreate$ = {}));
export function scheduledRetirementContributionCreateToJSON(scheduledRetirementContributionCreate) {
    return JSON.stringify(ScheduledRetirementContributionCreate$outboundSchema.parse(scheduledRetirementContributionCreate));
}
export function scheduledRetirementContributionCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ScheduledRetirementContributionCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ScheduledRetirementContributionCreate' from JSON`);
}
//# sourceMappingURL=scheduledretirementcontributioncreate.js.map