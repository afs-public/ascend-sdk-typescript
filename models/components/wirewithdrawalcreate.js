/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { DecimalCreate$inboundSchema, DecimalCreate$outboundSchema, } from "./decimalcreate.js";
import { RetirementDistributionCreate$inboundSchema, RetirementDistributionCreate$outboundSchema, } from "./retirementdistributioncreate.js";
import { WireWithdrawalBeneficiaryCreate$inboundSchema, WireWithdrawalBeneficiaryCreate$outboundSchema, } from "./wirewithdrawalbeneficiarycreate.js";
import { WireWithdrawalIntermediaryCreate$inboundSchema, WireWithdrawalIntermediaryCreate$outboundSchema, } from "./wirewithdrawalintermediarycreate.js";
import { WireWithdrawalRecipientBankCreate$inboundSchema, WireWithdrawalRecipientBankCreate$outboundSchema, } from "./wirewithdrawalrecipientbankcreate.js";
/** @internal */
export const WireWithdrawalCreate$inboundSchema = z.object({
    amount: DecimalCreate$inboundSchema.optional(),
    beneficiary: WireWithdrawalBeneficiaryCreate$inboundSchema,
    client_transfer_id: z.string(),
    full_disbursement: z.boolean().optional(),
    intermediary: WireWithdrawalIntermediaryCreate$inboundSchema.optional(),
    ira_distribution: RetirementDistributionCreate$inboundSchema.optional(),
    recipient_bank: WireWithdrawalRecipientBankCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "client_transfer_id": "clientTransferId",
        "full_disbursement": "fullDisbursement",
        "ira_distribution": "iraDistribution",
        "recipient_bank": "recipientBank",
    });
});
/** @internal */
export const WireWithdrawalCreate$outboundSchema = z.object({
    amount: DecimalCreate$outboundSchema.optional(),
    beneficiary: WireWithdrawalBeneficiaryCreate$outboundSchema,
    clientTransferId: z.string(),
    fullDisbursement: z.boolean().optional(),
    intermediary: WireWithdrawalIntermediaryCreate$outboundSchema.optional(),
    iraDistribution: RetirementDistributionCreate$outboundSchema.optional(),
    recipientBank: WireWithdrawalRecipientBankCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        clientTransferId: "client_transfer_id",
        fullDisbursement: "full_disbursement",
        iraDistribution: "ira_distribution",
        recipientBank: "recipient_bank",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalCreate$;
(function (WireWithdrawalCreate$) {
    /** @deprecated use `WireWithdrawalCreate$inboundSchema` instead. */
    WireWithdrawalCreate$.inboundSchema = WireWithdrawalCreate$inboundSchema;
    /** @deprecated use `WireWithdrawalCreate$outboundSchema` instead. */
    WireWithdrawalCreate$.outboundSchema = WireWithdrawalCreate$outboundSchema;
})(WireWithdrawalCreate$ || (WireWithdrawalCreate$ = {}));
export function wireWithdrawalCreateToJSON(wireWithdrawalCreate) {
    return JSON.stringify(WireWithdrawalCreate$outboundSchema.parse(wireWithdrawalCreate));
}
export function wireWithdrawalCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalCreate' from JSON`);
}
//# sourceMappingURL=wirewithdrawalcreate.js.map