/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The type of retirement contribution.
 */
export var AchDepositScheduleType;
(function (AchDepositScheduleType) {
    AchDepositScheduleType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    AchDepositScheduleType["Regular"] = "REGULAR";
    AchDepositScheduleType["Employee"] = "EMPLOYEE";
    AchDepositScheduleType["Employer"] = "EMPLOYER";
    AchDepositScheduleType["Recharacterization"] = "RECHARACTERIZATION";
    AchDepositScheduleType["Rollover60Day"] = "ROLLOVER_60_DAY";
    AchDepositScheduleType["RolloverDirect"] = "ROLLOVER_DIRECT";
    AchDepositScheduleType["Transfer"] = "TRANSFER";
    AchDepositScheduleType["TrusteeFee"] = "TRUSTEE_FEE";
    AchDepositScheduleType["Conversion"] = "CONVERSION";
    AchDepositScheduleType["Repayment"] = "REPAYMENT";
    AchDepositScheduleType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(AchDepositScheduleType || (AchDepositScheduleType = {}));
/**
 * A temporal tax year value. This will always evaluate to a year based on the date the transfer was initiated.
 */
export var AchDepositScheduleTemporalTaxYear;
(function (AchDepositScheduleTemporalTaxYear) {
    AchDepositScheduleTemporalTaxYear["TemporalTaxYearUnspecified"] = "TEMPORAL_TAX_YEAR_UNSPECIFIED";
    AchDepositScheduleTemporalTaxYear["CurrentCalendarYear"] = "CURRENT_CALENDAR_YEAR";
    AchDepositScheduleTemporalTaxYear["MinimumTaxYear"] = "MINIMUM_TAX_YEAR";
})(AchDepositScheduleTemporalTaxYear || (AchDepositScheduleTemporalTaxYear = {}));
/**
 * The type of retirement contribution.
 */
export var AchDepositScheduleRetirementContributionType;
(function (AchDepositScheduleRetirementContributionType) {
    AchDepositScheduleRetirementContributionType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    AchDepositScheduleRetirementContributionType["Regular"] = "REGULAR";
    AchDepositScheduleRetirementContributionType["Employee"] = "EMPLOYEE";
    AchDepositScheduleRetirementContributionType["Employer"] = "EMPLOYER";
    AchDepositScheduleRetirementContributionType["Recharacterization"] = "RECHARACTERIZATION";
    AchDepositScheduleRetirementContributionType["Rollover60Day"] = "ROLLOVER_60_DAY";
    AchDepositScheduleRetirementContributionType["RolloverDirect"] = "ROLLOVER_DIRECT";
    AchDepositScheduleRetirementContributionType["Transfer"] = "TRANSFER";
    AchDepositScheduleRetirementContributionType["TrusteeFee"] = "TRUSTEE_FEE";
    AchDepositScheduleRetirementContributionType["Conversion"] = "CONVERSION";
    AchDepositScheduleRetirementContributionType["Repayment"] = "REPAYMENT";
    AchDepositScheduleRetirementContributionType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(AchDepositScheduleRetirementContributionType || (AchDepositScheduleRetirementContributionType = {}));
/**
 * The state of the represented schedule
 */
export var AchDepositScheduleState;
(function (AchDepositScheduleState) {
    AchDepositScheduleState["Active"] = "ACTIVE";
    AchDepositScheduleState["Canceled"] = "CANCELED";
    AchDepositScheduleState["Completed"] = "COMPLETED";
})(AchDepositScheduleState || (AchDepositScheduleState = {}));
/**
 * The time unit used to calculate the interval between transfers. The time period between transfers in a scheduled series is the unit of time times the multiplier
 */
export var AchDepositScheduleTimeUnit;
(function (AchDepositScheduleTimeUnit) {
    AchDepositScheduleTimeUnit["Day"] = "DAY";
    AchDepositScheduleTimeUnit["Week"] = "WEEK";
    AchDepositScheduleTimeUnit["Month"] = "MONTH";
})(AchDepositScheduleTimeUnit || (AchDepositScheduleTimeUnit = {}));
/** @internal */
export const AchDepositScheduleType$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositScheduleType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchDepositScheduleType$outboundSchema = z.union([
    z.nativeEnum(AchDepositScheduleType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleType$;
(function (AchDepositScheduleType$) {
    /** @deprecated use `AchDepositScheduleType$inboundSchema` instead. */
    AchDepositScheduleType$.inboundSchema = AchDepositScheduleType$inboundSchema;
    /** @deprecated use `AchDepositScheduleType$outboundSchema` instead. */
    AchDepositScheduleType$.outboundSchema = AchDepositScheduleType$outboundSchema;
})(AchDepositScheduleType$ || (AchDepositScheduleType$ = {}));
/** @internal */
export const AchDepositScheduleIraContribution$inboundSchema = z.object({
    tax_year: z.number().int().optional(),
    type: AchDepositScheduleType$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "tax_year": "taxYear",
    });
});
/** @internal */
export const AchDepositScheduleIraContribution$outboundSchema = z.object({
    taxYear: z.number().int().optional(),
    type: AchDepositScheduleType$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleIraContribution$;
(function (AchDepositScheduleIraContribution$) {
    /** @deprecated use `AchDepositScheduleIraContribution$inboundSchema` instead. */
    AchDepositScheduleIraContribution$.inboundSchema = AchDepositScheduleIraContribution$inboundSchema;
    /** @deprecated use `AchDepositScheduleIraContribution$outboundSchema` instead. */
    AchDepositScheduleIraContribution$.outboundSchema = AchDepositScheduleIraContribution$outboundSchema;
})(AchDepositScheduleIraContribution$ || (AchDepositScheduleIraContribution$ = {}));
export function achDepositScheduleIraContributionToJSON(achDepositScheduleIraContribution) {
    return JSON.stringify(AchDepositScheduleIraContribution$outboundSchema.parse(achDepositScheduleIraContribution));
}
export function achDepositScheduleIraContributionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositScheduleIraContribution$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositScheduleIraContribution' from JSON`);
}
/** @internal */
export const AchDepositScheduleTemporalTaxYear$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositScheduleTemporalTaxYear),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchDepositScheduleTemporalTaxYear$outboundSchema = z.union([
    z.nativeEnum(AchDepositScheduleTemporalTaxYear),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleTemporalTaxYear$;
(function (AchDepositScheduleTemporalTaxYear$) {
    /** @deprecated use `AchDepositScheduleTemporalTaxYear$inboundSchema` instead. */
    AchDepositScheduleTemporalTaxYear$.inboundSchema = AchDepositScheduleTemporalTaxYear$inboundSchema;
    /** @deprecated use `AchDepositScheduleTemporalTaxYear$outboundSchema` instead. */
    AchDepositScheduleTemporalTaxYear$.outboundSchema = AchDepositScheduleTemporalTaxYear$outboundSchema;
})(AchDepositScheduleTemporalTaxYear$ || (AchDepositScheduleTemporalTaxYear$ = {}));
/** @internal */
export const AchDepositScheduleRetirementContributionType$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositScheduleRetirementContributionType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchDepositScheduleRetirementContributionType$outboundSchema = z.union([
    z.nativeEnum(AchDepositScheduleRetirementContributionType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleRetirementContributionType$;
(function (AchDepositScheduleRetirementContributionType$) {
    /** @deprecated use `AchDepositScheduleRetirementContributionType$inboundSchema` instead. */
    AchDepositScheduleRetirementContributionType$.inboundSchema = AchDepositScheduleRetirementContributionType$inboundSchema;
    /** @deprecated use `AchDepositScheduleRetirementContributionType$outboundSchema` instead. */
    AchDepositScheduleRetirementContributionType$.outboundSchema = AchDepositScheduleRetirementContributionType$outboundSchema;
})(AchDepositScheduleRetirementContributionType$ || (AchDepositScheduleRetirementContributionType$ = {}));
/** @internal */
export const AchDepositScheduleRetirementContribution$inboundSchema = z.object({
    tax_year: z.number().int().optional(),
    temporal_tax_year: AchDepositScheduleTemporalTaxYear$inboundSchema.optional(),
    type: AchDepositScheduleRetirementContributionType$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "tax_year": "taxYear",
        "temporal_tax_year": "temporalTaxYear",
    });
});
/** @internal */
export const AchDepositScheduleRetirementContribution$outboundSchema = z.object({
    taxYear: z.number().int().optional(),
    temporalTaxYear: AchDepositScheduleTemporalTaxYear$outboundSchema.optional(),
    type: AchDepositScheduleRetirementContributionType$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        taxYear: "tax_year",
        temporalTaxYear: "temporal_tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleRetirementContribution$;
(function (AchDepositScheduleRetirementContribution$) {
    /** @deprecated use `AchDepositScheduleRetirementContribution$inboundSchema` instead. */
    AchDepositScheduleRetirementContribution$.inboundSchema = AchDepositScheduleRetirementContribution$inboundSchema;
    /** @deprecated use `AchDepositScheduleRetirementContribution$outboundSchema` instead. */
    AchDepositScheduleRetirementContribution$.outboundSchema = AchDepositScheduleRetirementContribution$outboundSchema;
})(AchDepositScheduleRetirementContribution$ || (AchDepositScheduleRetirementContribution$ = {}));
export function achDepositScheduleRetirementContributionToJSON(achDepositScheduleRetirementContribution) {
    return JSON.stringify(AchDepositScheduleRetirementContribution$outboundSchema.parse(achDepositScheduleRetirementContribution));
}
export function achDepositScheduleRetirementContributionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositScheduleRetirementContribution$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositScheduleRetirementContribution' from JSON`);
}
/** @internal */
export const AchDepositScheduleAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const AchDepositScheduleAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleAmount$;
(function (AchDepositScheduleAmount$) {
    /** @deprecated use `AchDepositScheduleAmount$inboundSchema` instead. */
    AchDepositScheduleAmount$.inboundSchema = AchDepositScheduleAmount$inboundSchema;
    /** @deprecated use `AchDepositScheduleAmount$outboundSchema` instead. */
    AchDepositScheduleAmount$.outboundSchema = AchDepositScheduleAmount$outboundSchema;
})(AchDepositScheduleAmount$ || (AchDepositScheduleAmount$ = {}));
export function achDepositScheduleAmountToJSON(achDepositScheduleAmount) {
    return JSON.stringify(AchDepositScheduleAmount$outboundSchema.parse(achDepositScheduleAmount));
}
export function achDepositScheduleAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositScheduleAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositScheduleAmount' from JSON`);
}
/** @internal */
export const AchDepositScheduleEndDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const AchDepositScheduleEndDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleEndDate$;
(function (AchDepositScheduleEndDate$) {
    /** @deprecated use `AchDepositScheduleEndDate$inboundSchema` instead. */
    AchDepositScheduleEndDate$.inboundSchema = AchDepositScheduleEndDate$inboundSchema;
    /** @deprecated use `AchDepositScheduleEndDate$outboundSchema` instead. */
    AchDepositScheduleEndDate$.outboundSchema = AchDepositScheduleEndDate$outboundSchema;
})(AchDepositScheduleEndDate$ || (AchDepositScheduleEndDate$ = {}));
export function achDepositScheduleEndDateToJSON(achDepositScheduleEndDate) {
    return JSON.stringify(AchDepositScheduleEndDate$outboundSchema.parse(achDepositScheduleEndDate));
}
export function achDepositScheduleEndDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositScheduleEndDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositScheduleEndDate' from JSON`);
}
/** @internal */
export const AchDepositScheduleStartDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const AchDepositScheduleStartDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleStartDate$;
(function (AchDepositScheduleStartDate$) {
    /** @deprecated use `AchDepositScheduleStartDate$inboundSchema` instead. */
    AchDepositScheduleStartDate$.inboundSchema = AchDepositScheduleStartDate$inboundSchema;
    /** @deprecated use `AchDepositScheduleStartDate$outboundSchema` instead. */
    AchDepositScheduleStartDate$.outboundSchema = AchDepositScheduleStartDate$outboundSchema;
})(AchDepositScheduleStartDate$ || (AchDepositScheduleStartDate$ = {}));
export function achDepositScheduleStartDateToJSON(achDepositScheduleStartDate) {
    return JSON.stringify(AchDepositScheduleStartDate$outboundSchema.parse(achDepositScheduleStartDate));
}
export function achDepositScheduleStartDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositScheduleStartDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositScheduleStartDate' from JSON`);
}
/** @internal */
export const AchDepositScheduleState$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositScheduleState),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchDepositScheduleState$outboundSchema = z.union([
    z.nativeEnum(AchDepositScheduleState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleState$;
(function (AchDepositScheduleState$) {
    /** @deprecated use `AchDepositScheduleState$inboundSchema` instead. */
    AchDepositScheduleState$.inboundSchema = AchDepositScheduleState$inboundSchema;
    /** @deprecated use `AchDepositScheduleState$outboundSchema` instead. */
    AchDepositScheduleState$.outboundSchema = AchDepositScheduleState$outboundSchema;
})(AchDepositScheduleState$ || (AchDepositScheduleState$ = {}));
/** @internal */
export const AchDepositScheduleTimeUnit$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositScheduleTimeUnit),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const AchDepositScheduleTimeUnit$outboundSchema = z.union([
    z.nativeEnum(AchDepositScheduleTimeUnit),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleTimeUnit$;
(function (AchDepositScheduleTimeUnit$) {
    /** @deprecated use `AchDepositScheduleTimeUnit$inboundSchema` instead. */
    AchDepositScheduleTimeUnit$.inboundSchema = AchDepositScheduleTimeUnit$inboundSchema;
    /** @deprecated use `AchDepositScheduleTimeUnit$outboundSchema` instead. */
    AchDepositScheduleTimeUnit$.outboundSchema = AchDepositScheduleTimeUnit$outboundSchema;
})(AchDepositScheduleTimeUnit$ || (AchDepositScheduleTimeUnit$ = {}));
/** @internal */
export const AchDepositScheduleScheduleProperties$inboundSchema = z.object({
    end_date: z.nullable(z.lazy(() => AchDepositScheduleEndDate$inboundSchema))
        .optional(),
    occurrences: z.number().int().optional(),
    start_date: z.nullable(z.lazy(() => AchDepositScheduleStartDate$inboundSchema)).optional(),
    state: AchDepositScheduleState$inboundSchema.optional(),
    time_unit: AchDepositScheduleTimeUnit$inboundSchema.optional(),
    unit_multiplier: z.number().int().optional(),
}).transform((v) => {
    return remap$(v, {
        "end_date": "endDate",
        "start_date": "startDate",
        "time_unit": "timeUnit",
        "unit_multiplier": "unitMultiplier",
    });
});
/** @internal */
export const AchDepositScheduleScheduleProperties$outboundSchema = z.object({
    endDate: z.nullable(z.lazy(() => AchDepositScheduleEndDate$outboundSchema))
        .optional(),
    occurrences: z.number().int().optional(),
    startDate: z.nullable(z.lazy(() => AchDepositScheduleStartDate$outboundSchema)).optional(),
    state: AchDepositScheduleState$outboundSchema.optional(),
    timeUnit: AchDepositScheduleTimeUnit$outboundSchema.optional(),
    unitMultiplier: z.number().int().optional(),
}).transform((v) => {
    return remap$(v, {
        endDate: "end_date",
        startDate: "start_date",
        timeUnit: "time_unit",
        unitMultiplier: "unit_multiplier",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositScheduleScheduleProperties$;
(function (AchDepositScheduleScheduleProperties$) {
    /** @deprecated use `AchDepositScheduleScheduleProperties$inboundSchema` instead. */
    AchDepositScheduleScheduleProperties$.inboundSchema = AchDepositScheduleScheduleProperties$inboundSchema;
    /** @deprecated use `AchDepositScheduleScheduleProperties$outboundSchema` instead. */
    AchDepositScheduleScheduleProperties$.outboundSchema = AchDepositScheduleScheduleProperties$outboundSchema;
})(AchDepositScheduleScheduleProperties$ || (AchDepositScheduleScheduleProperties$ = {}));
export function achDepositScheduleSchedulePropertiesToJSON(achDepositScheduleScheduleProperties) {
    return JSON.stringify(AchDepositScheduleScheduleProperties$outboundSchema.parse(achDepositScheduleScheduleProperties));
}
export function achDepositScheduleSchedulePropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositScheduleScheduleProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositScheduleScheduleProperties' from JSON`);
}
/** @internal */
export const ScheduleDetails$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchDepositScheduleAmount$inboundSchema))
        .optional(),
    client_schedule_id: z.string().optional(),
    schedule_properties: z.nullable(z.lazy(() => AchDepositScheduleScheduleProperties$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "client_schedule_id": "clientScheduleId",
        "schedule_properties": "scheduleProperties",
    });
});
/** @internal */
export const ScheduleDetails$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => AchDepositScheduleAmount$outboundSchema))
        .optional(),
    clientScheduleId: z.string().optional(),
    scheduleProperties: z.nullable(z.lazy(() => AchDepositScheduleScheduleProperties$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        clientScheduleId: "client_schedule_id",
        scheduleProperties: "schedule_properties",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ScheduleDetails$;
(function (ScheduleDetails$) {
    /** @deprecated use `ScheduleDetails$inboundSchema` instead. */
    ScheduleDetails$.inboundSchema = ScheduleDetails$inboundSchema;
    /** @deprecated use `ScheduleDetails$outboundSchema` instead. */
    ScheduleDetails$.outboundSchema = ScheduleDetails$outboundSchema;
})(ScheduleDetails$ || (ScheduleDetails$ = {}));
export function scheduleDetailsToJSON(scheduleDetails) {
    return JSON.stringify(ScheduleDetails$outboundSchema.parse(scheduleDetails));
}
export function scheduleDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ScheduleDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ScheduleDetails' from JSON`);
}
/** @internal */
export const AchDepositSchedule$inboundSchema = z.object({
    bank_relationship: z.string().optional(),
    ira_contribution: z.nullable(z.lazy(() => AchDepositScheduleIraContribution$inboundSchema)).optional(),
    name: z.string().optional(),
    retirement_contribution: z.nullable(z.lazy(() => AchDepositScheduleRetirementContribution$inboundSchema)).optional(),
    schedule_details: z.nullable(z.lazy(() => ScheduleDetails$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "bank_relationship": "bankRelationship",
        "ira_contribution": "iraContribution",
        "retirement_contribution": "retirementContribution",
        "schedule_details": "scheduleDetails",
    });
});
/** @internal */
export const AchDepositSchedule$outboundSchema = z.object({
    bankRelationship: z.string().optional(),
    iraContribution: z.nullable(z.lazy(() => AchDepositScheduleIraContribution$outboundSchema)).optional(),
    name: z.string().optional(),
    retirementContribution: z.nullable(z.lazy(() => AchDepositScheduleRetirementContribution$outboundSchema)).optional(),
    scheduleDetails: z.nullable(z.lazy(() => ScheduleDetails$outboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        bankRelationship: "bank_relationship",
        iraContribution: "ira_contribution",
        retirementContribution: "retirement_contribution",
        scheduleDetails: "schedule_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositSchedule$;
(function (AchDepositSchedule$) {
    /** @deprecated use `AchDepositSchedule$inboundSchema` instead. */
    AchDepositSchedule$.inboundSchema = AchDepositSchedule$inboundSchema;
    /** @deprecated use `AchDepositSchedule$outboundSchema` instead. */
    AchDepositSchedule$.outboundSchema = AchDepositSchedule$outboundSchema;
})(AchDepositSchedule$ || (AchDepositSchedule$ = {}));
export function achDepositScheduleToJSON(achDepositSchedule) {
    return JSON.stringify(AchDepositSchedule$outboundSchema.parse(achDepositSchedule));
}
export function achDepositScheduleFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositSchedule$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositSchedule' from JSON`);
}
//# sourceMappingURL=achdepositschedule.js.map