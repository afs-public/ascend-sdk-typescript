/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ContributionSummary$inboundSchema, ContributionSummary$outboundSchema, } from "./contributionsummary.js";
/** @internal */
export const ListContributionSummariesResponse$inboundSchema = z.object({
    contribution_summaries: z.array(ContributionSummary$inboundSchema).optional(),
    next_page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "contribution_summaries": "contributionSummaries",
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListContributionSummariesResponse$outboundSchema = z.object({
    contributionSummaries: z.array(ContributionSummary$outboundSchema).optional(),
    nextPageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        contributionSummaries: "contribution_summaries",
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListContributionSummariesResponse$;
(function (ListContributionSummariesResponse$) {
    /** @deprecated use `ListContributionSummariesResponse$inboundSchema` instead. */
    ListContributionSummariesResponse$.inboundSchema = ListContributionSummariesResponse$inboundSchema;
    /** @deprecated use `ListContributionSummariesResponse$outboundSchema` instead. */
    ListContributionSummariesResponse$.outboundSchema = ListContributionSummariesResponse$outboundSchema;
})(ListContributionSummariesResponse$ || (ListContributionSummariesResponse$ = {}));
export function listContributionSummariesResponseToJSON(listContributionSummariesResponse) {
    return JSON.stringify(ListContributionSummariesResponse$outboundSchema.parse(listContributionSummariesResponse));
}
export function listContributionSummariesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListContributionSummariesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListContributionSummariesResponse' from JSON`);
}
//# sourceMappingURL=listcontributionsummariesresponse.js.map