/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const LinkDocumentsResponse$inboundSchema = z.object({
    identity_verification_document_ids: z.array(z.string()).optional(),
    name: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "identity_verification_document_ids": "identityVerificationDocumentIds",
    });
});
/** @internal */
export const LinkDocumentsResponse$outboundSchema = z.object({
    identityVerificationDocumentIds: z.array(z.string()).optional(),
    name: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        identityVerificationDocumentIds: "identity_verification_document_ids",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LinkDocumentsResponse$;
(function (LinkDocumentsResponse$) {
    /** @deprecated use `LinkDocumentsResponse$inboundSchema` instead. */
    LinkDocumentsResponse$.inboundSchema = LinkDocumentsResponse$inboundSchema;
    /** @deprecated use `LinkDocumentsResponse$outboundSchema` instead. */
    LinkDocumentsResponse$.outboundSchema = LinkDocumentsResponse$outboundSchema;
})(LinkDocumentsResponse$ || (LinkDocumentsResponse$ = {}));
export function linkDocumentsResponseToJSON(linkDocumentsResponse) {
    return JSON.stringify(LinkDocumentsResponse$outboundSchema.parse(linkDocumentsResponse));
}
export function linkDocumentsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LinkDocumentsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LinkDocumentsResponse' from JSON`);
}
//# sourceMappingURL=linkdocumentsresponse.js.map