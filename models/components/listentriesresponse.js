/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Entry$inboundSchema, Entry$outboundSchema, } from "./entry.js";
/** @internal */
export const ListEntriesResponse$inboundSchema = z.object({
    entries: z.array(Entry$inboundSchema).optional(),
    next_page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListEntriesResponse$outboundSchema = z.object({
    entries: z.array(Entry$outboundSchema).optional(),
    nextPageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListEntriesResponse$;
(function (ListEntriesResponse$) {
    /** @deprecated use `ListEntriesResponse$inboundSchema` instead. */
    ListEntriesResponse$.inboundSchema = ListEntriesResponse$inboundSchema;
    /** @deprecated use `ListEntriesResponse$outboundSchema` instead. */
    ListEntriesResponse$.outboundSchema = ListEntriesResponse$outboundSchema;
})(ListEntriesResponse$ || (ListEntriesResponse$ = {}));
export function listEntriesResponseToJSON(listEntriesResponse) {
    return JSON.stringify(ListEntriesResponse$outboundSchema.parse(listEntriesResponse));
}
export function listEntriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListEntriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListEntriesResponse' from JSON`);
}
//# sourceMappingURL=listentriesresponse.js.map