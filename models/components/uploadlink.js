/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const UploadLink$inboundSchema = z.object({
    client_batch_source_id: z.string().optional(),
    name: z.string().optional(),
    upload_link: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "client_batch_source_id": "clientBatchSourceId",
        "upload_link": "uploadLink",
    });
});
/** @internal */
export const UploadLink$outboundSchema = z.object({
    clientBatchSourceId: z.string().optional(),
    name: z.string().optional(),
    uploadLink: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        clientBatchSourceId: "client_batch_source_id",
        uploadLink: "upload_link",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UploadLink$;
(function (UploadLink$) {
    /** @deprecated use `UploadLink$inboundSchema` instead. */
    UploadLink$.inboundSchema = UploadLink$inboundSchema;
    /** @deprecated use `UploadLink$outboundSchema` instead. */
    UploadLink$.outboundSchema = UploadLink$outboundSchema;
})(UploadLink$ || (UploadLink$ = {}));
export function uploadLinkToJSON(uploadLink) {
    return JSON.stringify(UploadLink$outboundSchema.parse(uploadLink));
}
export function uploadLinkFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UploadLink$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UploadLink' from JSON`);
}
//# sourceMappingURL=uploadlink.js.map