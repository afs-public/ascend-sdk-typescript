/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { AccountDocumentUploadRequestCreate$inboundSchema, AccountDocumentUploadRequestCreate$outboundSchema, } from "./accountdocumentuploadrequestcreate.js";
import { IDDocumentUploadRequestCreate$inboundSchema, IDDocumentUploadRequestCreate$outboundSchema, } from "./iddocumentuploadrequestcreate.js";
/** @internal */
export const CreateUploadLinkRequestCreate$inboundSchema = z.object({
    account_document_upload_request: AccountDocumentUploadRequestCreate$inboundSchema.optional(),
    client_batch_source_id: z.string(),
    id_document_upload_request: IDDocumentUploadRequestCreate$inboundSchema
        .optional(),
    mime_type: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_document_upload_request": "accountDocumentUploadRequest",
        "client_batch_source_id": "clientBatchSourceId",
        "id_document_upload_request": "idDocumentUploadRequest",
        "mime_type": "mimeType",
    });
});
/** @internal */
export const CreateUploadLinkRequestCreate$outboundSchema = z.object({
    accountDocumentUploadRequest: AccountDocumentUploadRequestCreate$outboundSchema.optional(),
    clientBatchSourceId: z.string(),
    idDocumentUploadRequest: IDDocumentUploadRequestCreate$outboundSchema
        .optional(),
    mimeType: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountDocumentUploadRequest: "account_document_upload_request",
        clientBatchSourceId: "client_batch_source_id",
        idDocumentUploadRequest: "id_document_upload_request",
        mimeType: "mime_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateUploadLinkRequestCreate$;
(function (CreateUploadLinkRequestCreate$) {
    /** @deprecated use `CreateUploadLinkRequestCreate$inboundSchema` instead. */
    CreateUploadLinkRequestCreate$.inboundSchema = CreateUploadLinkRequestCreate$inboundSchema;
    /** @deprecated use `CreateUploadLinkRequestCreate$outboundSchema` instead. */
    CreateUploadLinkRequestCreate$.outboundSchema = CreateUploadLinkRequestCreate$outboundSchema;
})(CreateUploadLinkRequestCreate$ || (CreateUploadLinkRequestCreate$ = {}));
export function createUploadLinkRequestCreateToJSON(createUploadLinkRequestCreate) {
    return JSON.stringify(CreateUploadLinkRequestCreate$outboundSchema.parse(createUploadLinkRequestCreate));
}
export function createUploadLinkRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateUploadLinkRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateUploadLinkRequestCreate' from JSON`);
}
//# sourceMappingURL=createuploadlinkrequestcreate.js.map