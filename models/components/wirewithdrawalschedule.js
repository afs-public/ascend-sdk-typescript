/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The type of bank identifier specified
 */
export var WireWithdrawalScheduleRecipientBankType;
(function (WireWithdrawalScheduleRecipientBankType) {
    WireWithdrawalScheduleRecipientBankType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    WireWithdrawalScheduleRecipientBankType["Aba"] = "ABA";
    WireWithdrawalScheduleRecipientBankType["Bic"] = "BIC";
})(WireWithdrawalScheduleRecipientBankType || (WireWithdrawalScheduleRecipientBankType = {}));
/**
 * The type of retirement distribution.
 */
export var WireWithdrawalScheduleType;
(function (WireWithdrawalScheduleType) {
    WireWithdrawalScheduleType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    WireWithdrawalScheduleType["Normal"] = "NORMAL";
    WireWithdrawalScheduleType["Disability"] = "DISABILITY";
    WireWithdrawalScheduleType["Sosepp"] = "SOSEPP";
    WireWithdrawalScheduleType["Premature"] = "PREMATURE";
    WireWithdrawalScheduleType["Death"] = "DEATH";
    WireWithdrawalScheduleType["ExcessContributionRemovalBeforeTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE";
    WireWithdrawalScheduleType["ExcessContributionRemovalAfterTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE";
    WireWithdrawalScheduleType["RolloverToQualifiedPlan"] = "ROLLOVER_TO_QUALIFIED_PLAN";
    WireWithdrawalScheduleType["RolloverToIra"] = "ROLLOVER_TO_IRA";
    WireWithdrawalScheduleType["DistributionTransfer"] = "DISTRIBUTION_TRANSFER";
    WireWithdrawalScheduleType["RecharacterizationPriorYear"] = "RECHARACTERIZATION_PRIOR_YEAR";
    WireWithdrawalScheduleType["RecharacterizationCurrentYear"] = "RECHARACTERIZATION_CURRENT_YEAR";
    WireWithdrawalScheduleType["DistributionConversion"] = "DISTRIBUTION_CONVERSION";
    WireWithdrawalScheduleType["ManagementFee"] = "MANAGEMENT_FEE";
    WireWithdrawalScheduleType["PlanLoan401K"] = "PLAN_LOAN_401K";
    WireWithdrawalScheduleType["PrematureSimpleIraLessThan2Years"] = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS";
    WireWithdrawalScheduleType["NormalRothIraGreaterThan5Years"] = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS";
    WireWithdrawalScheduleType["NetIncomeAttributable"] = "NET_INCOME_ATTRIBUTABLE";
    WireWithdrawalScheduleType["Revocation"] = "REVOCATION";
    WireWithdrawalScheduleType["NonReportable"] = "NON_REPORTABLE";
})(WireWithdrawalScheduleType || (WireWithdrawalScheduleType = {}));
/**
 * The state of the represented schedule
 */
export var WireWithdrawalScheduleState;
(function (WireWithdrawalScheduleState) {
    WireWithdrawalScheduleState["Active"] = "ACTIVE";
    WireWithdrawalScheduleState["Canceled"] = "CANCELED";
    WireWithdrawalScheduleState["Completed"] = "COMPLETED";
})(WireWithdrawalScheduleState || (WireWithdrawalScheduleState = {}));
/**
 * The time unit used to calculate the interval between transfers. The time period between transfers in a scheduled series is the unit of time times the multiplier
 */
export var WireWithdrawalScheduleTimeUnit;
(function (WireWithdrawalScheduleTimeUnit) {
    WireWithdrawalScheduleTimeUnit["Day"] = "DAY";
    WireWithdrawalScheduleTimeUnit["Week"] = "WEEK";
    WireWithdrawalScheduleTimeUnit["Month"] = "MONTH";
})(WireWithdrawalScheduleTimeUnit || (WireWithdrawalScheduleTimeUnit = {}));
/** @internal */
export const Address$inboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postal_code: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
export const Address$outboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Address$;
(function (Address$) {
    /** @deprecated use `Address$inboundSchema` instead. */
    Address$.inboundSchema = Address$inboundSchema;
    /** @deprecated use `Address$outboundSchema` instead. */
    Address$.outboundSchema = Address$outboundSchema;
})(Address$ || (Address$ = {}));
export function addressToJSON(address) {
    return JSON.stringify(Address$outboundSchema.parse(address));
}
export function addressFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Address$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Address' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleBeneficiary$inboundSchema = z.object({
    account: z.string().optional(),
    account_title: z.string().optional(),
    address: z.nullable(z.lazy(() => Address$inboundSchema)).optional(),
    third_party: z.boolean().optional(),
}).transform((v) => {
    return remap$(v, {
        "account_title": "accountTitle",
        "third_party": "thirdParty",
    });
});
/** @internal */
export const WireWithdrawalScheduleBeneficiary$outboundSchema = z.object({
    account: z.string().optional(),
    accountTitle: z.string().optional(),
    address: z.nullable(z.lazy(() => Address$outboundSchema)).optional(),
    thirdParty: z.boolean().optional(),
}).transform((v) => {
    return remap$(v, {
        accountTitle: "account_title",
        thirdParty: "third_party",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleBeneficiary$;
(function (WireWithdrawalScheduleBeneficiary$) {
    /** @deprecated use `WireWithdrawalScheduleBeneficiary$inboundSchema` instead. */
    WireWithdrawalScheduleBeneficiary$.inboundSchema = WireWithdrawalScheduleBeneficiary$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleBeneficiary$outboundSchema` instead. */
    WireWithdrawalScheduleBeneficiary$.outboundSchema = WireWithdrawalScheduleBeneficiary$outboundSchema;
})(WireWithdrawalScheduleBeneficiary$ || (WireWithdrawalScheduleBeneficiary$ = {}));
export function wireWithdrawalScheduleBeneficiaryToJSON(wireWithdrawalScheduleBeneficiary) {
    return JSON.stringify(WireWithdrawalScheduleBeneficiary$outboundSchema.parse(wireWithdrawalScheduleBeneficiary));
}
export function wireWithdrawalScheduleBeneficiaryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleBeneficiary$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleBeneficiary' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleAddress$inboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postal_code: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
export const WireWithdrawalScheduleAddress$outboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleAddress$;
(function (WireWithdrawalScheduleAddress$) {
    /** @deprecated use `WireWithdrawalScheduleAddress$inboundSchema` instead. */
    WireWithdrawalScheduleAddress$.inboundSchema = WireWithdrawalScheduleAddress$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleAddress$outboundSchema` instead. */
    WireWithdrawalScheduleAddress$.outboundSchema = WireWithdrawalScheduleAddress$outboundSchema;
})(WireWithdrawalScheduleAddress$ || (WireWithdrawalScheduleAddress$ = {}));
export function wireWithdrawalScheduleAddressToJSON(wireWithdrawalScheduleAddress) {
    return JSON.stringify(WireWithdrawalScheduleAddress$outboundSchema.parse(wireWithdrawalScheduleAddress));
}
export function wireWithdrawalScheduleAddressFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleAddress$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleAddress' from JSON`);
}
/** @internal */
export const Intermediary$inboundSchema = z.object({
    account: z.string().optional(),
    account_title: z.string().optional(),
    address: z.nullable(z.lazy(() => WireWithdrawalScheduleAddress$inboundSchema))
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "account_title": "accountTitle",
    });
});
/** @internal */
export const Intermediary$outboundSchema = z.object({
    account: z.string().optional(),
    accountTitle: z.string().optional(),
    address: z.nullable(z.lazy(() => WireWithdrawalScheduleAddress$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        accountTitle: "account_title",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Intermediary$;
(function (Intermediary$) {
    /** @deprecated use `Intermediary$inboundSchema` instead. */
    Intermediary$.inboundSchema = Intermediary$inboundSchema;
    /** @deprecated use `Intermediary$outboundSchema` instead. */
    Intermediary$.outboundSchema = Intermediary$outboundSchema;
})(Intermediary$ || (Intermediary$ = {}));
export function intermediaryToJSON(intermediary) {
    return JSON.stringify(Intermediary$outboundSchema.parse(intermediary));
}
export function intermediaryFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Intermediary$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Intermediary' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleRecipientBankType$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalScheduleRecipientBankType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const WireWithdrawalScheduleRecipientBankType$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalScheduleRecipientBankType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleRecipientBankType$;
(function (WireWithdrawalScheduleRecipientBankType$) {
    /** @deprecated use `WireWithdrawalScheduleRecipientBankType$inboundSchema` instead. */
    WireWithdrawalScheduleRecipientBankType$.inboundSchema = WireWithdrawalScheduleRecipientBankType$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleRecipientBankType$outboundSchema` instead. */
    WireWithdrawalScheduleRecipientBankType$.outboundSchema = WireWithdrawalScheduleRecipientBankType$outboundSchema;
})(WireWithdrawalScheduleRecipientBankType$ || (WireWithdrawalScheduleRecipientBankType$ = {}));
/** @internal */
export const BankId$inboundSchema = z
    .object({
    id: z.string().optional(),
    type: WireWithdrawalScheduleRecipientBankType$inboundSchema.optional(),
});
/** @internal */
export const BankId$outboundSchema = z.object({
    id: z.string().optional(),
    type: WireWithdrawalScheduleRecipientBankType$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankId$;
(function (BankId$) {
    /** @deprecated use `BankId$inboundSchema` instead. */
    BankId$.inboundSchema = BankId$inboundSchema;
    /** @deprecated use `BankId$outboundSchema` instead. */
    BankId$.outboundSchema = BankId$outboundSchema;
})(BankId$ || (BankId$ = {}));
export function bankIdToJSON(bankId) {
    return JSON.stringify(BankId$outboundSchema.parse(bankId));
}
export function bankIdFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankId$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankId' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleRecipientBankAddress$inboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postal_code: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
export const WireWithdrawalScheduleRecipientBankAddress$outboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return remap$(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleRecipientBankAddress$;
(function (WireWithdrawalScheduleRecipientBankAddress$) {
    /** @deprecated use `WireWithdrawalScheduleRecipientBankAddress$inboundSchema` instead. */
    WireWithdrawalScheduleRecipientBankAddress$.inboundSchema = WireWithdrawalScheduleRecipientBankAddress$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleRecipientBankAddress$outboundSchema` instead. */
    WireWithdrawalScheduleRecipientBankAddress$.outboundSchema = WireWithdrawalScheduleRecipientBankAddress$outboundSchema;
})(WireWithdrawalScheduleRecipientBankAddress$ || (WireWithdrawalScheduleRecipientBankAddress$ = {}));
export function wireWithdrawalScheduleRecipientBankAddressToJSON(wireWithdrawalScheduleRecipientBankAddress) {
    return JSON.stringify(WireWithdrawalScheduleRecipientBankAddress$outboundSchema.parse(wireWithdrawalScheduleRecipientBankAddress));
}
export function wireWithdrawalScheduleRecipientBankAddressFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleRecipientBankAddress$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleRecipientBankAddress' from JSON`);
}
/** @internal */
export const InternationalBankDetails$inboundSchema = z.object({
    additional_info: z.string().optional(),
    address: z.nullable(z.lazy(() => WireWithdrawalScheduleRecipientBankAddress$inboundSchema)).optional(),
    bank_name: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "additional_info": "additionalInfo",
        "bank_name": "bankName",
    });
});
/** @internal */
export const InternationalBankDetails$outboundSchema = z.object({
    additionalInfo: z.string().optional(),
    address: z.nullable(z.lazy(() => WireWithdrawalScheduleRecipientBankAddress$outboundSchema)).optional(),
    bankName: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        additionalInfo: "additional_info",
        bankName: "bank_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InternationalBankDetails$;
(function (InternationalBankDetails$) {
    /** @deprecated use `InternationalBankDetails$inboundSchema` instead. */
    InternationalBankDetails$.inboundSchema = InternationalBankDetails$inboundSchema;
    /** @deprecated use `InternationalBankDetails$outboundSchema` instead. */
    InternationalBankDetails$.outboundSchema = InternationalBankDetails$outboundSchema;
})(InternationalBankDetails$ || (InternationalBankDetails$ = {}));
export function internationalBankDetailsToJSON(internationalBankDetails) {
    return JSON.stringify(InternationalBankDetails$outboundSchema.parse(internationalBankDetails));
}
export function internationalBankDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InternationalBankDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InternationalBankDetails' from JSON`);
}
/** @internal */
export const RecipientBank$inboundSchema = z.object({
    bank_id: z.nullable(z.lazy(() => BankId$inboundSchema)).optional(),
    international_bank_details: z.nullable(z.lazy(() => InternationalBankDetails$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "bank_id": "bankId",
        "international_bank_details": "internationalBankDetails",
    });
});
/** @internal */
export const RecipientBank$outboundSchema = z.object({
    bankId: z.nullable(z.lazy(() => BankId$outboundSchema)).optional(),
    internationalBankDetails: z.nullable(z.lazy(() => InternationalBankDetails$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        bankId: "bank_id",
        internationalBankDetails: "international_bank_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RecipientBank$;
(function (RecipientBank$) {
    /** @deprecated use `RecipientBank$inboundSchema` instead. */
    RecipientBank$.inboundSchema = RecipientBank$inboundSchema;
    /** @deprecated use `RecipientBank$outboundSchema` instead. */
    RecipientBank$.outboundSchema = RecipientBank$outboundSchema;
})(RecipientBank$ || (RecipientBank$ = {}));
export function recipientBankToJSON(recipientBank) {
    return JSON.stringify(RecipientBank$outboundSchema.parse(recipientBank));
}
export function recipientBankFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RecipientBank$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RecipientBank' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$;
(function (WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$) {
    /** @deprecated use `WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$inboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$.inboundSchema = WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$outboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$.outboundSchema = WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$outboundSchema;
})(WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$ || (WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$ = {}));
export function wireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmountToJSON(wireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount) {
    return JSON.stringify(WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$outboundSchema
        .parse(wireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount));
}
export function wireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount' from JSON`);
}
/** @internal */
export const WireWithdrawalSchedulePercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const WireWithdrawalSchedulePercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalSchedulePercentage$;
(function (WireWithdrawalSchedulePercentage$) {
    /** @deprecated use `WireWithdrawalSchedulePercentage$inboundSchema` instead. */
    WireWithdrawalSchedulePercentage$.inboundSchema = WireWithdrawalSchedulePercentage$inboundSchema;
    /** @deprecated use `WireWithdrawalSchedulePercentage$outboundSchema` instead. */
    WireWithdrawalSchedulePercentage$.outboundSchema = WireWithdrawalSchedulePercentage$outboundSchema;
})(WireWithdrawalSchedulePercentage$ || (WireWithdrawalSchedulePercentage$ = {}));
export function wireWithdrawalSchedulePercentageToJSON(wireWithdrawalSchedulePercentage) {
    return JSON.stringify(WireWithdrawalSchedulePercentage$outboundSchema.parse(wireWithdrawalSchedulePercentage));
}
export function wireWithdrawalSchedulePercentageFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalSchedulePercentage$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalSchedulePercentage' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleFederalTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => WireWithdrawalSchedulePercentage$inboundSchema)).optional(),
});
/** @internal */
export const WireWithdrawalScheduleFederalTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistributionFederalTaxWithholdingAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => WireWithdrawalSchedulePercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleFederalTaxWithholding$;
(function (WireWithdrawalScheduleFederalTaxWithholding$) {
    /** @deprecated use `WireWithdrawalScheduleFederalTaxWithholding$inboundSchema` instead. */
    WireWithdrawalScheduleFederalTaxWithholding$.inboundSchema = WireWithdrawalScheduleFederalTaxWithholding$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleFederalTaxWithholding$outboundSchema` instead. */
    WireWithdrawalScheduleFederalTaxWithholding$.outboundSchema = WireWithdrawalScheduleFederalTaxWithholding$outboundSchema;
})(WireWithdrawalScheduleFederalTaxWithholding$ || (WireWithdrawalScheduleFederalTaxWithholding$ = {}));
export function wireWithdrawalScheduleFederalTaxWithholdingToJSON(wireWithdrawalScheduleFederalTaxWithholding) {
    return JSON.stringify(WireWithdrawalScheduleFederalTaxWithholding$outboundSchema.parse(wireWithdrawalScheduleFederalTaxWithholding));
}
export function wireWithdrawalScheduleFederalTaxWithholdingFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleFederalTaxWithholding$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleFederalTaxWithholding' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleRetirementDistributionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const WireWithdrawalScheduleRetirementDistributionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleRetirementDistributionAmount$;
(function (WireWithdrawalScheduleRetirementDistributionAmount$) {
    /** @deprecated use `WireWithdrawalScheduleRetirementDistributionAmount$inboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistributionAmount$.inboundSchema = WireWithdrawalScheduleRetirementDistributionAmount$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleRetirementDistributionAmount$outboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistributionAmount$.outboundSchema = WireWithdrawalScheduleRetirementDistributionAmount$outboundSchema;
})(WireWithdrawalScheduleRetirementDistributionAmount$ || (WireWithdrawalScheduleRetirementDistributionAmount$ = {}));
export function wireWithdrawalScheduleRetirementDistributionAmountToJSON(wireWithdrawalScheduleRetirementDistributionAmount) {
    return JSON.stringify(WireWithdrawalScheduleRetirementDistributionAmount$outboundSchema.parse(wireWithdrawalScheduleRetirementDistributionAmount));
}
export function wireWithdrawalScheduleRetirementDistributionAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleRetirementDistributionAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleRetirementDistributionAmount' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleRetirementDistributionPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const WireWithdrawalScheduleRetirementDistributionPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleRetirementDistributionPercentage$;
(function (WireWithdrawalScheduleRetirementDistributionPercentage$) {
    /** @deprecated use `WireWithdrawalScheduleRetirementDistributionPercentage$inboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistributionPercentage$.inboundSchema = WireWithdrawalScheduleRetirementDistributionPercentage$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleRetirementDistributionPercentage$outboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistributionPercentage$.outboundSchema = WireWithdrawalScheduleRetirementDistributionPercentage$outboundSchema;
})(WireWithdrawalScheduleRetirementDistributionPercentage$ || (WireWithdrawalScheduleRetirementDistributionPercentage$ = {}));
export function wireWithdrawalScheduleRetirementDistributionPercentageToJSON(wireWithdrawalScheduleRetirementDistributionPercentage) {
    return JSON.stringify(WireWithdrawalScheduleRetirementDistributionPercentage$outboundSchema.parse(wireWithdrawalScheduleRetirementDistributionPercentage));
}
export function wireWithdrawalScheduleRetirementDistributionPercentageFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleRetirementDistributionPercentage$inboundSchema
        .parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleRetirementDistributionPercentage' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleStateTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistributionAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistributionPercentage$inboundSchema)).optional(),
});
/** @internal */
export const WireWithdrawalScheduleStateTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistributionAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistributionPercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleStateTaxWithholding$;
(function (WireWithdrawalScheduleStateTaxWithholding$) {
    /** @deprecated use `WireWithdrawalScheduleStateTaxWithholding$inboundSchema` instead. */
    WireWithdrawalScheduleStateTaxWithholding$.inboundSchema = WireWithdrawalScheduleStateTaxWithholding$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleStateTaxWithholding$outboundSchema` instead. */
    WireWithdrawalScheduleStateTaxWithholding$.outboundSchema = WireWithdrawalScheduleStateTaxWithholding$outboundSchema;
})(WireWithdrawalScheduleStateTaxWithholding$ || (WireWithdrawalScheduleStateTaxWithholding$ = {}));
export function wireWithdrawalScheduleStateTaxWithholdingToJSON(wireWithdrawalScheduleStateTaxWithholding) {
    return JSON.stringify(WireWithdrawalScheduleStateTaxWithholding$outboundSchema.parse(wireWithdrawalScheduleStateTaxWithholding));
}
export function wireWithdrawalScheduleStateTaxWithholdingFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleStateTaxWithholding$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleStateTaxWithholding' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleType$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalScheduleType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const WireWithdrawalScheduleType$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalScheduleType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleType$;
(function (WireWithdrawalScheduleType$) {
    /** @deprecated use `WireWithdrawalScheduleType$inboundSchema` instead. */
    WireWithdrawalScheduleType$.inboundSchema = WireWithdrawalScheduleType$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleType$outboundSchema` instead. */
    WireWithdrawalScheduleType$.outboundSchema = WireWithdrawalScheduleType$outboundSchema;
})(WireWithdrawalScheduleType$ || (WireWithdrawalScheduleType$ = {}));
/** @internal */
export const WireWithdrawalScheduleRetirementDistribution$inboundSchema = z.object({
    federal_tax_withholding: z.nullable(z.lazy(() => WireWithdrawalScheduleFederalTaxWithholding$inboundSchema)).optional(),
    receiving_institution: z.string().optional(),
    state_tax_withholding: z.nullable(z.lazy(() => WireWithdrawalScheduleStateTaxWithholding$inboundSchema)).optional(),
    state_withholding_waiver: z.boolean().optional(),
    tax_year: z.number().int().optional(),
    type: WireWithdrawalScheduleType$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "federal_tax_withholding": "federalTaxWithholding",
        "receiving_institution": "receivingInstitution",
        "state_tax_withholding": "stateTaxWithholding",
        "state_withholding_waiver": "stateWithholdingWaiver",
        "tax_year": "taxYear",
    });
});
/** @internal */
export const WireWithdrawalScheduleRetirementDistribution$outboundSchema = z.object({
    federalTaxWithholding: z.nullable(z.lazy(() => WireWithdrawalScheduleFederalTaxWithholding$outboundSchema)).optional(),
    receivingInstitution: z.string().optional(),
    stateTaxWithholding: z.nullable(z.lazy(() => WireWithdrawalScheduleStateTaxWithholding$outboundSchema)).optional(),
    stateWithholdingWaiver: z.boolean().optional(),
    taxYear: z.number().int().optional(),
    type: WireWithdrawalScheduleType$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        federalTaxWithholding: "federal_tax_withholding",
        receivingInstitution: "receiving_institution",
        stateTaxWithholding: "state_tax_withholding",
        stateWithholdingWaiver: "state_withholding_waiver",
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleRetirementDistribution$;
(function (WireWithdrawalScheduleRetirementDistribution$) {
    /** @deprecated use `WireWithdrawalScheduleRetirementDistribution$inboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistribution$.inboundSchema = WireWithdrawalScheduleRetirementDistribution$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleRetirementDistribution$outboundSchema` instead. */
    WireWithdrawalScheduleRetirementDistribution$.outboundSchema = WireWithdrawalScheduleRetirementDistribution$outboundSchema;
})(WireWithdrawalScheduleRetirementDistribution$ || (WireWithdrawalScheduleRetirementDistribution$ = {}));
export function wireWithdrawalScheduleRetirementDistributionToJSON(wireWithdrawalScheduleRetirementDistribution) {
    return JSON.stringify(WireWithdrawalScheduleRetirementDistribution$outboundSchema.parse(wireWithdrawalScheduleRetirementDistribution));
}
export function wireWithdrawalScheduleRetirementDistributionFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleRetirementDistribution$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleRetirementDistribution' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
export const WireWithdrawalScheduleAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleAmount$;
(function (WireWithdrawalScheduleAmount$) {
    /** @deprecated use `WireWithdrawalScheduleAmount$inboundSchema` instead. */
    WireWithdrawalScheduleAmount$.inboundSchema = WireWithdrawalScheduleAmount$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleAmount$outboundSchema` instead. */
    WireWithdrawalScheduleAmount$.outboundSchema = WireWithdrawalScheduleAmount$outboundSchema;
})(WireWithdrawalScheduleAmount$ || (WireWithdrawalScheduleAmount$ = {}));
export function wireWithdrawalScheduleAmountToJSON(wireWithdrawalScheduleAmount) {
    return JSON.stringify(WireWithdrawalScheduleAmount$outboundSchema.parse(wireWithdrawalScheduleAmount));
}
export function wireWithdrawalScheduleAmountFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleAmount$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleAmount' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleStartDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
export const WireWithdrawalScheduleStartDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleStartDate$;
(function (WireWithdrawalScheduleStartDate$) {
    /** @deprecated use `WireWithdrawalScheduleStartDate$inboundSchema` instead. */
    WireWithdrawalScheduleStartDate$.inboundSchema = WireWithdrawalScheduleStartDate$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleStartDate$outboundSchema` instead. */
    WireWithdrawalScheduleStartDate$.outboundSchema = WireWithdrawalScheduleStartDate$outboundSchema;
})(WireWithdrawalScheduleStartDate$ || (WireWithdrawalScheduleStartDate$ = {}));
export function wireWithdrawalScheduleStartDateToJSON(wireWithdrawalScheduleStartDate) {
    return JSON.stringify(WireWithdrawalScheduleStartDate$outboundSchema.parse(wireWithdrawalScheduleStartDate));
}
export function wireWithdrawalScheduleStartDateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleStartDate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleStartDate' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleState$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalScheduleState),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const WireWithdrawalScheduleState$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalScheduleState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleState$;
(function (WireWithdrawalScheduleState$) {
    /** @deprecated use `WireWithdrawalScheduleState$inboundSchema` instead. */
    WireWithdrawalScheduleState$.inboundSchema = WireWithdrawalScheduleState$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleState$outboundSchema` instead. */
    WireWithdrawalScheduleState$.outboundSchema = WireWithdrawalScheduleState$outboundSchema;
})(WireWithdrawalScheduleState$ || (WireWithdrawalScheduleState$ = {}));
/** @internal */
export const WireWithdrawalScheduleTimeUnit$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalScheduleTimeUnit),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const WireWithdrawalScheduleTimeUnit$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalScheduleTimeUnit),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleTimeUnit$;
(function (WireWithdrawalScheduleTimeUnit$) {
    /** @deprecated use `WireWithdrawalScheduleTimeUnit$inboundSchema` instead. */
    WireWithdrawalScheduleTimeUnit$.inboundSchema = WireWithdrawalScheduleTimeUnit$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleTimeUnit$outboundSchema` instead. */
    WireWithdrawalScheduleTimeUnit$.outboundSchema = WireWithdrawalScheduleTimeUnit$outboundSchema;
})(WireWithdrawalScheduleTimeUnit$ || (WireWithdrawalScheduleTimeUnit$ = {}));
/** @internal */
export const WireWithdrawalScheduleScheduleProperties$inboundSchema = z.object({
    occurrences: z.number().int().optional(),
    start_date: z.nullable(z.lazy(() => WireWithdrawalScheduleStartDate$inboundSchema)).optional(),
    state: WireWithdrawalScheduleState$inboundSchema.optional(),
    time_unit: WireWithdrawalScheduleTimeUnit$inboundSchema.optional(),
    unit_multiplier: z.number().int().optional(),
}).transform((v) => {
    return remap$(v, {
        "start_date": "startDate",
        "time_unit": "timeUnit",
        "unit_multiplier": "unitMultiplier",
    });
});
/** @internal */
export const WireWithdrawalScheduleScheduleProperties$outboundSchema = z.object({
    occurrences: z.number().int().optional(),
    startDate: z.nullable(z.lazy(() => WireWithdrawalScheduleStartDate$outboundSchema)).optional(),
    state: WireWithdrawalScheduleState$outboundSchema.optional(),
    timeUnit: WireWithdrawalScheduleTimeUnit$outboundSchema.optional(),
    unitMultiplier: z.number().int().optional(),
}).transform((v) => {
    return remap$(v, {
        startDate: "start_date",
        timeUnit: "time_unit",
        unitMultiplier: "unit_multiplier",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleScheduleProperties$;
(function (WireWithdrawalScheduleScheduleProperties$) {
    /** @deprecated use `WireWithdrawalScheduleScheduleProperties$inboundSchema` instead. */
    WireWithdrawalScheduleScheduleProperties$.inboundSchema = WireWithdrawalScheduleScheduleProperties$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleScheduleProperties$outboundSchema` instead. */
    WireWithdrawalScheduleScheduleProperties$.outboundSchema = WireWithdrawalScheduleScheduleProperties$outboundSchema;
})(WireWithdrawalScheduleScheduleProperties$ || (WireWithdrawalScheduleScheduleProperties$ = {}));
export function wireWithdrawalScheduleSchedulePropertiesToJSON(wireWithdrawalScheduleScheduleProperties) {
    return JSON.stringify(WireWithdrawalScheduleScheduleProperties$outboundSchema.parse(wireWithdrawalScheduleScheduleProperties));
}
export function wireWithdrawalScheduleSchedulePropertiesFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleScheduleProperties$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleScheduleProperties' from JSON`);
}
/** @internal */
export const WireWithdrawalScheduleScheduleDetails$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => WireWithdrawalScheduleAmount$inboundSchema))
        .optional(),
    client_schedule_id: z.string().optional(),
    full_disbursement: z.boolean().optional(),
    schedule_properties: z.nullable(z.lazy(() => WireWithdrawalScheduleScheduleProperties$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "client_schedule_id": "clientScheduleId",
        "full_disbursement": "fullDisbursement",
        "schedule_properties": "scheduleProperties",
    });
});
/** @internal */
export const WireWithdrawalScheduleScheduleDetails$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => WireWithdrawalScheduleAmount$outboundSchema))
        .optional(),
    clientScheduleId: z.string().optional(),
    fullDisbursement: z.boolean().optional(),
    scheduleProperties: z.nullable(z.lazy(() => WireWithdrawalScheduleScheduleProperties$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        clientScheduleId: "client_schedule_id",
        fullDisbursement: "full_disbursement",
        scheduleProperties: "schedule_properties",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalScheduleScheduleDetails$;
(function (WireWithdrawalScheduleScheduleDetails$) {
    /** @deprecated use `WireWithdrawalScheduleScheduleDetails$inboundSchema` instead. */
    WireWithdrawalScheduleScheduleDetails$.inboundSchema = WireWithdrawalScheduleScheduleDetails$inboundSchema;
    /** @deprecated use `WireWithdrawalScheduleScheduleDetails$outboundSchema` instead. */
    WireWithdrawalScheduleScheduleDetails$.outboundSchema = WireWithdrawalScheduleScheduleDetails$outboundSchema;
})(WireWithdrawalScheduleScheduleDetails$ || (WireWithdrawalScheduleScheduleDetails$ = {}));
export function wireWithdrawalScheduleScheduleDetailsToJSON(wireWithdrawalScheduleScheduleDetails) {
    return JSON.stringify(WireWithdrawalScheduleScheduleDetails$outboundSchema.parse(wireWithdrawalScheduleScheduleDetails));
}
export function wireWithdrawalScheduleScheduleDetailsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalScheduleScheduleDetails$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalScheduleScheduleDetails' from JSON`);
}
/** @internal */
export const WireWithdrawalSchedule$inboundSchema = z.object({
    beneficiary: z.nullable(z.lazy(() => WireWithdrawalScheduleBeneficiary$inboundSchema)).optional(),
    intermediary: z.nullable(z.lazy(() => Intermediary$inboundSchema)).optional(),
    name: z.string().optional(),
    recipient_bank: z.nullable(z.lazy(() => RecipientBank$inboundSchema))
        .optional(),
    retirement_distribution: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistribution$inboundSchema)).optional(),
    schedule_details: z.nullable(z.lazy(() => WireWithdrawalScheduleScheduleDetails$inboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        "recipient_bank": "recipientBank",
        "retirement_distribution": "retirementDistribution",
        "schedule_details": "scheduleDetails",
    });
});
/** @internal */
export const WireWithdrawalSchedule$outboundSchema = z.object({
    beneficiary: z.nullable(z.lazy(() => WireWithdrawalScheduleBeneficiary$outboundSchema)).optional(),
    intermediary: z.nullable(z.lazy(() => Intermediary$outboundSchema))
        .optional(),
    name: z.string().optional(),
    recipientBank: z.nullable(z.lazy(() => RecipientBank$outboundSchema))
        .optional(),
    retirementDistribution: z.nullable(z.lazy(() => WireWithdrawalScheduleRetirementDistribution$outboundSchema)).optional(),
    scheduleDetails: z.nullable(z.lazy(() => WireWithdrawalScheduleScheduleDetails$outboundSchema)).optional(),
}).transform((v) => {
    return remap$(v, {
        recipientBank: "recipient_bank",
        retirementDistribution: "retirement_distribution",
        scheduleDetails: "schedule_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalSchedule$;
(function (WireWithdrawalSchedule$) {
    /** @deprecated use `WireWithdrawalSchedule$inboundSchema` instead. */
    WireWithdrawalSchedule$.inboundSchema = WireWithdrawalSchedule$inboundSchema;
    /** @deprecated use `WireWithdrawalSchedule$outboundSchema` instead. */
    WireWithdrawalSchedule$.outboundSchema = WireWithdrawalSchedule$outboundSchema;
})(WireWithdrawalSchedule$ || (WireWithdrawalSchedule$ = {}));
export function wireWithdrawalScheduleToJSON(wireWithdrawalSchedule) {
    return JSON.stringify(WireWithdrawalSchedule$outboundSchema.parse(wireWithdrawalSchedule));
}
export function wireWithdrawalScheduleFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalSchedule$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalSchedule' from JSON`);
}
//# sourceMappingURL=wirewithdrawalschedule.js.map