/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { PostalAddressCreate$inboundSchema, PostalAddressCreate$outboundSchema, } from "./postaladdresscreate.js";
/** @internal */
export const TravelRuleEntityPartyCreate$inboundSchema = z.object({
    address: PostalAddressCreate$inboundSchema,
    tax_id: z.string().optional(),
    title: z.string(),
}).transform((v) => {
    return remap$(v, {
        "tax_id": "taxId",
    });
});
/** @internal */
export const TravelRuleEntityPartyCreate$outboundSchema = z.object({
    address: PostalAddressCreate$outboundSchema,
    taxId: z.string().optional(),
    title: z.string(),
}).transform((v) => {
    return remap$(v, {
        taxId: "tax_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TravelRuleEntityPartyCreate$;
(function (TravelRuleEntityPartyCreate$) {
    /** @deprecated use `TravelRuleEntityPartyCreate$inboundSchema` instead. */
    TravelRuleEntityPartyCreate$.inboundSchema = TravelRuleEntityPartyCreate$inboundSchema;
    /** @deprecated use `TravelRuleEntityPartyCreate$outboundSchema` instead. */
    TravelRuleEntityPartyCreate$.outboundSchema = TravelRuleEntityPartyCreate$outboundSchema;
})(TravelRuleEntityPartyCreate$ || (TravelRuleEntityPartyCreate$ = {}));
export function travelRuleEntityPartyCreateToJSON(travelRuleEntityPartyCreate) {
    return JSON.stringify(TravelRuleEntityPartyCreate$outboundSchema.parse(travelRuleEntityPartyCreate));
}
export function travelRuleEntityPartyCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TravelRuleEntityPartyCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TravelRuleEntityPartyCreate' from JSON`);
}
//# sourceMappingURL=travelruleentitypartycreate.js.map