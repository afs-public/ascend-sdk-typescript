/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { PostalAddressCreate$inboundSchema, PostalAddressCreate$outboundSchema, } from "./postaladdresscreate.js";
/** @internal */
export const TravelRulePartyCreate$inboundSchema = z.object({
    address: PostalAddressCreate$inboundSchema,
    family_name: z.string(),
    given_names: z.array(z.string()),
}).transform((v) => {
    return remap$(v, {
        "family_name": "familyName",
        "given_names": "givenNames",
    });
});
/** @internal */
export const TravelRulePartyCreate$outboundSchema = z.object({
    address: PostalAddressCreate$outboundSchema,
    familyName: z.string(),
    givenNames: z.array(z.string()),
}).transform((v) => {
    return remap$(v, {
        familyName: "family_name",
        givenNames: "given_names",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var TravelRulePartyCreate$;
(function (TravelRulePartyCreate$) {
    /** @deprecated use `TravelRulePartyCreate$inboundSchema` instead. */
    TravelRulePartyCreate$.inboundSchema = TravelRulePartyCreate$inboundSchema;
    /** @deprecated use `TravelRulePartyCreate$outboundSchema` instead. */
    TravelRulePartyCreate$.outboundSchema = TravelRulePartyCreate$outboundSchema;
})(TravelRulePartyCreate$ || (TravelRulePartyCreate$ = {}));
export function travelRulePartyCreateToJSON(travelRulePartyCreate) {
    return JSON.stringify(TravelRulePartyCreate$outboundSchema.parse(travelRulePartyCreate));
}
export function travelRulePartyCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => TravelRulePartyCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'TravelRulePartyCreate' from JSON`);
}
//# sourceMappingURL=travelrulepartycreate.js.map