/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { PushSubscriptionDelivery$inboundSchema, PushSubscriptionDelivery$outboundSchema, } from "./pushsubscriptiondelivery.js";
/** @internal */
export const ListPushSubscriptionDeliveriesResponse$inboundSchema = z.object({
    next_page_token: z.string().optional(),
    push_subscription_deliveries: z.array(PushSubscriptionDelivery$inboundSchema)
        .optional(),
}).transform((v) => {
    return remap$(v, {
        "next_page_token": "nextPageToken",
        "push_subscription_deliveries": "pushSubscriptionDeliveries",
    });
});
/** @internal */
export const ListPushSubscriptionDeliveriesResponse$outboundSchema = z.object({
    nextPageToken: z.string().optional(),
    pushSubscriptionDeliveries: z.array(PushSubscriptionDelivery$outboundSchema)
        .optional(),
}).transform((v) => {
    return remap$(v, {
        nextPageToken: "next_page_token",
        pushSubscriptionDeliveries: "push_subscription_deliveries",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListPushSubscriptionDeliveriesResponse$;
(function (ListPushSubscriptionDeliveriesResponse$) {
    /** @deprecated use `ListPushSubscriptionDeliveriesResponse$inboundSchema` instead. */
    ListPushSubscriptionDeliveriesResponse$.inboundSchema = ListPushSubscriptionDeliveriesResponse$inboundSchema;
    /** @deprecated use `ListPushSubscriptionDeliveriesResponse$outboundSchema` instead. */
    ListPushSubscriptionDeliveriesResponse$.outboundSchema = ListPushSubscriptionDeliveriesResponse$outboundSchema;
})(ListPushSubscriptionDeliveriesResponse$ || (ListPushSubscriptionDeliveriesResponse$ = {}));
export function listPushSubscriptionDeliveriesResponseToJSON(listPushSubscriptionDeliveriesResponse) {
    return JSON.stringify(ListPushSubscriptionDeliveriesResponse$outboundSchema.parse(listPushSubscriptionDeliveriesResponse));
}
export function listPushSubscriptionDeliveriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListPushSubscriptionDeliveriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListPushSubscriptionDeliveriesResponse' from JSON`);
}
//# sourceMappingURL=listpushsubscriptiondeliveriesresponse.js.map