/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const AssignLargeTraderRequestCreate$inboundSchema = z.object({
    large_trader_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "large_trader_id": "largeTraderId",
    });
});
/** @internal */
export const AssignLargeTraderRequestCreate$outboundSchema = z.object({
    largeTraderId: z.string(),
}).transform((v) => {
    return remap$(v, {
        largeTraderId: "large_trader_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssignLargeTraderRequestCreate$;
(function (AssignLargeTraderRequestCreate$) {
    /** @deprecated use `AssignLargeTraderRequestCreate$inboundSchema` instead. */
    AssignLargeTraderRequestCreate$.inboundSchema = AssignLargeTraderRequestCreate$inboundSchema;
    /** @deprecated use `AssignLargeTraderRequestCreate$outboundSchema` instead. */
    AssignLargeTraderRequestCreate$.outboundSchema = AssignLargeTraderRequestCreate$outboundSchema;
})(AssignLargeTraderRequestCreate$ || (AssignLargeTraderRequestCreate$ = {}));
export function assignLargeTraderRequestCreateToJSON(assignLargeTraderRequestCreate) {
    return JSON.stringify(AssignLargeTraderRequestCreate$outboundSchema.parse(assignLargeTraderRequestCreate));
}
export function assignLargeTraderRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssignLargeTraderRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssignLargeTraderRequestCreate' from JSON`);
}
//# sourceMappingURL=assignlargetraderrequestcreate.js.map