/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { AssetTradingConfig$inboundSchema, AssetTradingConfig$outboundSchema, } from "./assettradingconfig.js";
/** @internal */
export const ListAssetTradingConfigsResponse$inboundSchema = z.object({
    asset_trading_configs: z.array(AssetTradingConfig$inboundSchema).optional(),
    next_page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "asset_trading_configs": "assetTradingConfigs",
        "next_page_token": "nextPageToken",
    });
});
/** @internal */
export const ListAssetTradingConfigsResponse$outboundSchema = z.object({
    assetTradingConfigs: z.array(AssetTradingConfig$outboundSchema).optional(),
    nextPageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        assetTradingConfigs: "asset_trading_configs",
        nextPageToken: "next_page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ListAssetTradingConfigsResponse$;
(function (ListAssetTradingConfigsResponse$) {
    /** @deprecated use `ListAssetTradingConfigsResponse$inboundSchema` instead. */
    ListAssetTradingConfigsResponse$.inboundSchema = ListAssetTradingConfigsResponse$inboundSchema;
    /** @deprecated use `ListAssetTradingConfigsResponse$outboundSchema` instead. */
    ListAssetTradingConfigsResponse$.outboundSchema = ListAssetTradingConfigsResponse$outboundSchema;
})(ListAssetTradingConfigsResponse$ || (ListAssetTradingConfigsResponse$ = {}));
export function listAssetTradingConfigsResponseToJSON(listAssetTradingConfigsResponse) {
    return JSON.stringify(ListAssetTradingConfigsResponse$outboundSchema.parse(listAssetTradingConfigsResponse));
}
export function listAssetTradingConfigsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ListAssetTradingConfigsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ListAssetTradingConfigsResponse' from JSON`);
}
//# sourceMappingURL=listassettradingconfigsresponse.js.map