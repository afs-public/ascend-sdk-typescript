/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RejectTransferRequestCreate$inboundSchema = z.object({
    comment: z.string().optional(),
    name: z.string(),
    state_reason: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "state_reason": "stateReason",
    });
});
/** @internal */
export const RejectTransferRequestCreate$outboundSchema = z.object({
    comment: z.string().optional(),
    name: z.string(),
    stateReason: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        stateReason: "state_reason",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RejectTransferRequestCreate$;
(function (RejectTransferRequestCreate$) {
    /** @deprecated use `RejectTransferRequestCreate$inboundSchema` instead. */
    RejectTransferRequestCreate$.inboundSchema = RejectTransferRequestCreate$inboundSchema;
    /** @deprecated use `RejectTransferRequestCreate$outboundSchema` instead. */
    RejectTransferRequestCreate$.outboundSchema = RejectTransferRequestCreate$outboundSchema;
})(RejectTransferRequestCreate$ || (RejectTransferRequestCreate$ = {}));
export function rejectTransferRequestCreateToJSON(rejectTransferRequestCreate) {
    return JSON.stringify(RejectTransferRequestCreate$outboundSchema.parse(rejectTransferRequestCreate));
}
export function rejectTransferRequestCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RejectTransferRequestCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RejectTransferRequestCreate' from JSON`);
}
//# sourceMappingURL=rejecttransferrequestcreate.js.map