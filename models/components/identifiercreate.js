/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { catchUnrecognizedEnum, } from "../../types/enums.js";
/**
 * The type of identifier
 */
export var IdentifierCreateType;
(function (IdentifierCreateType) {
    IdentifierCreateType["IdentifierTypeUnspecified"] = "IDENTIFIER_TYPE_UNSPECIFIED";
    IdentifierCreateType["OriginatingAccountId"] = "ORIGINATING_ACCOUNT_ID";
    IdentifierCreateType["OriginatingFdid"] = "ORIGINATING_FDID";
    IdentifierCreateType["OriginatingCatReporterCrd"] = "ORIGINATING_CAT_REPORTER_CRD";
    IdentifierCreateType["ClientAccountId"] = "CLIENT_ACCOUNT_ID";
})(IdentifierCreateType || (IdentifierCreateType = {}));
/** @internal */
export const IdentifierCreateType$inboundSchema = z
    .union([
    z.nativeEnum(IdentifierCreateType),
    z.string().transform(catchUnrecognizedEnum),
]);
/** @internal */
export const IdentifierCreateType$outboundSchema = z.union([
    z.nativeEnum(IdentifierCreateType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IdentifierCreateType$;
(function (IdentifierCreateType$) {
    /** @deprecated use `IdentifierCreateType$inboundSchema` instead. */
    IdentifierCreateType$.inboundSchema = IdentifierCreateType$inboundSchema;
    /** @deprecated use `IdentifierCreateType$outboundSchema` instead. */
    IdentifierCreateType$.outboundSchema = IdentifierCreateType$outboundSchema;
})(IdentifierCreateType$ || (IdentifierCreateType$ = {}));
/** @internal */
export const IdentifierCreate$inboundSchema = z.object({
    type: IdentifierCreateType$inboundSchema,
    value: z.string(),
});
/** @internal */
export const IdentifierCreate$outboundSchema = z.object({
    type: IdentifierCreateType$outboundSchema,
    value: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IdentifierCreate$;
(function (IdentifierCreate$) {
    /** @deprecated use `IdentifierCreate$inboundSchema` instead. */
    IdentifierCreate$.inboundSchema = IdentifierCreate$inboundSchema;
    /** @deprecated use `IdentifierCreate$outboundSchema` instead. */
    IdentifierCreate$.outboundSchema = IdentifierCreate$outboundSchema;
})(IdentifierCreate$ || (IdentifierCreate$ = {}));
export function identifierCreateToJSON(identifierCreate) {
    return JSON.stringify(IdentifierCreate$outboundSchema.parse(identifierCreate));
}
export function identifierCreateFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IdentifierCreate$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IdentifierCreate' from JSON`);
}
//# sourceMappingURL=identifiercreate.js.map