/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CashJournalsCreateCashJournalResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    CashJournal: components.CashJournal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "CashJournal": "cashJournal",
        "Status": "status",
    });
});
/** @internal */
export const CashJournalsCreateCashJournalResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    cashJournal: components.CashJournal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        cashJournal: "CashJournal",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsCreateCashJournalResponse$;
(function (CashJournalsCreateCashJournalResponse$) {
    /** @deprecated use `CashJournalsCreateCashJournalResponse$inboundSchema` instead. */
    CashJournalsCreateCashJournalResponse$.inboundSchema = CashJournalsCreateCashJournalResponse$inboundSchema;
    /** @deprecated use `CashJournalsCreateCashJournalResponse$outboundSchema` instead. */
    CashJournalsCreateCashJournalResponse$.outboundSchema = CashJournalsCreateCashJournalResponse$outboundSchema;
})(CashJournalsCreateCashJournalResponse$ || (CashJournalsCreateCashJournalResponse$ = {}));
export function cashJournalsCreateCashJournalResponseToJSON(cashJournalsCreateCashJournalResponse) {
    return JSON.stringify(CashJournalsCreateCashJournalResponse$outboundSchema.parse(cashJournalsCreateCashJournalResponse));
}
export function cashJournalsCreateCashJournalResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsCreateCashJournalResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsCreateCashJournalResponse' from JSON`);
}
//# sourceMappingURL=cashjournalscreatecashjournal.js.map