/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const SubscriberListPushSubscriptionDeliveriesRequest$inboundSchema = z.object({
    subscription_id: z.string(),
    filter: z.string().optional(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "subscription_id": "subscriptionId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const SubscriberListPushSubscriptionDeliveriesRequest$outboundSchema = z.object({
    subscriptionId: z.string(),
    filter: z.string().optional(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        subscriptionId: "subscription_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberListPushSubscriptionDeliveriesRequest$;
(function (SubscriberListPushSubscriptionDeliveriesRequest$) {
    /** @deprecated use `SubscriberListPushSubscriptionDeliveriesRequest$inboundSchema` instead. */
    SubscriberListPushSubscriptionDeliveriesRequest$.inboundSchema = SubscriberListPushSubscriptionDeliveriesRequest$inboundSchema;
    /** @deprecated use `SubscriberListPushSubscriptionDeliveriesRequest$outboundSchema` instead. */
    SubscriberListPushSubscriptionDeliveriesRequest$.outboundSchema = SubscriberListPushSubscriptionDeliveriesRequest$outboundSchema;
})(SubscriberListPushSubscriptionDeliveriesRequest$ || (SubscriberListPushSubscriptionDeliveriesRequest$ = {}));
export function subscriberListPushSubscriptionDeliveriesRequestToJSON(subscriberListPushSubscriptionDeliveriesRequest) {
    return JSON.stringify(SubscriberListPushSubscriptionDeliveriesRequest$outboundSchema.parse(subscriberListPushSubscriptionDeliveriesRequest));
}
export function subscriberListPushSubscriptionDeliveriesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberListPushSubscriptionDeliveriesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberListPushSubscriptionDeliveriesRequest' from JSON`);
}
/** @internal */
export const SubscriberListPushSubscriptionDeliveriesResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListPushSubscriptionDeliveriesResponse: components
        .ListPushSubscriptionDeliveriesResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListPushSubscriptionDeliveriesResponse": "listPushSubscriptionDeliveriesResponse",
        "Status": "status",
    });
});
/** @internal */
export const SubscriberListPushSubscriptionDeliveriesResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listPushSubscriptionDeliveriesResponse: components
        .ListPushSubscriptionDeliveriesResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listPushSubscriptionDeliveriesResponse: "ListPushSubscriptionDeliveriesResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberListPushSubscriptionDeliveriesResponse$;
(function (SubscriberListPushSubscriptionDeliveriesResponse$) {
    /** @deprecated use `SubscriberListPushSubscriptionDeliveriesResponse$inboundSchema` instead. */
    SubscriberListPushSubscriptionDeliveriesResponse$.inboundSchema = SubscriberListPushSubscriptionDeliveriesResponse$inboundSchema;
    /** @deprecated use `SubscriberListPushSubscriptionDeliveriesResponse$outboundSchema` instead. */
    SubscriberListPushSubscriptionDeliveriesResponse$.outboundSchema = SubscriberListPushSubscriptionDeliveriesResponse$outboundSchema;
})(SubscriberListPushSubscriptionDeliveriesResponse$ || (SubscriberListPushSubscriptionDeliveriesResponse$ = {}));
export function subscriberListPushSubscriptionDeliveriesResponseToJSON(subscriberListPushSubscriptionDeliveriesResponse) {
    return JSON.stringify(SubscriberListPushSubscriptionDeliveriesResponse$outboundSchema.parse(subscriberListPushSubscriptionDeliveriesResponse));
}
export function subscriberListPushSubscriptionDeliveriesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberListPushSubscriptionDeliveriesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberListPushSubscriptionDeliveriesResponse' from JSON`);
}
//# sourceMappingURL=subscriberlistpushsubscriptiondeliveries.js.map