/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const InvestigationServiceListInvestigationsRequest$inboundSchema = z.object({
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
    order_by: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
        "order_by": "orderBy",
    });
});
/** @internal */
export const InvestigationServiceListInvestigationsRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
    orderBy: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
        orderBy: "order_by",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestigationServiceListInvestigationsRequest$;
(function (InvestigationServiceListInvestigationsRequest$) {
    /** @deprecated use `InvestigationServiceListInvestigationsRequest$inboundSchema` instead. */
    InvestigationServiceListInvestigationsRequest$.inboundSchema = InvestigationServiceListInvestigationsRequest$inboundSchema;
    /** @deprecated use `InvestigationServiceListInvestigationsRequest$outboundSchema` instead. */
    InvestigationServiceListInvestigationsRequest$.outboundSchema = InvestigationServiceListInvestigationsRequest$outboundSchema;
})(InvestigationServiceListInvestigationsRequest$ || (InvestigationServiceListInvestigationsRequest$ = {}));
export function investigationServiceListInvestigationsRequestToJSON(investigationServiceListInvestigationsRequest) {
    return JSON.stringify(InvestigationServiceListInvestigationsRequest$outboundSchema.parse(investigationServiceListInvestigationsRequest));
}
export function investigationServiceListInvestigationsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestigationServiceListInvestigationsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestigationServiceListInvestigationsRequest' from JSON`);
}
/** @internal */
export const InvestigationServiceListInvestigationsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListInvestigationsResponse: components
        .ListInvestigationsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListInvestigationsResponse": "listInvestigationsResponse",
        "Status": "status",
    });
});
/** @internal */
export const InvestigationServiceListInvestigationsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listInvestigationsResponse: components
        .ListInvestigationsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listInvestigationsResponse: "ListInvestigationsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestigationServiceListInvestigationsResponse$;
(function (InvestigationServiceListInvestigationsResponse$) {
    /** @deprecated use `InvestigationServiceListInvestigationsResponse$inboundSchema` instead. */
    InvestigationServiceListInvestigationsResponse$.inboundSchema = InvestigationServiceListInvestigationsResponse$inboundSchema;
    /** @deprecated use `InvestigationServiceListInvestigationsResponse$outboundSchema` instead. */
    InvestigationServiceListInvestigationsResponse$.outboundSchema = InvestigationServiceListInvestigationsResponse$outboundSchema;
})(InvestigationServiceListInvestigationsResponse$ || (InvestigationServiceListInvestigationsResponse$ = {}));
export function investigationServiceListInvestigationsResponseToJSON(investigationServiceListInvestigationsResponse) {
    return JSON.stringify(InvestigationServiceListInvestigationsResponse$outboundSchema.parse(investigationServiceListInvestigationsResponse));
}
export function investigationServiceListInvestigationsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestigationServiceListInvestigationsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestigationServiceListInvestigationsResponse' from JSON`);
}
//# sourceMappingURL=investigationservicelistinvestigations.js.map