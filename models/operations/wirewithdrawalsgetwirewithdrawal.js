/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const WireWithdrawalsGetWireWithdrawalRequest$inboundSchema = z.object({
    account_id: z.string(),
    wireWithdrawal_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "wireWithdrawal_id": "wireWithdrawalId",
    });
});
/** @internal */
export const WireWithdrawalsGetWireWithdrawalRequest$outboundSchema = z.object({
    accountId: z.string(),
    wireWithdrawalId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        wireWithdrawalId: "wireWithdrawal_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalsGetWireWithdrawalRequest$;
(function (WireWithdrawalsGetWireWithdrawalRequest$) {
    /** @deprecated use `WireWithdrawalsGetWireWithdrawalRequest$inboundSchema` instead. */
    WireWithdrawalsGetWireWithdrawalRequest$.inboundSchema = WireWithdrawalsGetWireWithdrawalRequest$inboundSchema;
    /** @deprecated use `WireWithdrawalsGetWireWithdrawalRequest$outboundSchema` instead. */
    WireWithdrawalsGetWireWithdrawalRequest$.outboundSchema = WireWithdrawalsGetWireWithdrawalRequest$outboundSchema;
})(WireWithdrawalsGetWireWithdrawalRequest$ || (WireWithdrawalsGetWireWithdrawalRequest$ = {}));
export function wireWithdrawalsGetWireWithdrawalRequestToJSON(wireWithdrawalsGetWireWithdrawalRequest) {
    return JSON.stringify(WireWithdrawalsGetWireWithdrawalRequest$outboundSchema.parse(wireWithdrawalsGetWireWithdrawalRequest));
}
export function wireWithdrawalsGetWireWithdrawalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalsGetWireWithdrawalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalsGetWireWithdrawalRequest' from JSON`);
}
/** @internal */
export const WireWithdrawalsGetWireWithdrawalResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    WireWithdrawal: components.WireWithdrawal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "WireWithdrawal": "wireWithdrawal",
        "Status": "status",
    });
});
/** @internal */
export const WireWithdrawalsGetWireWithdrawalResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    wireWithdrawal: components.WireWithdrawal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        wireWithdrawal: "WireWithdrawal",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var WireWithdrawalsGetWireWithdrawalResponse$;
(function (WireWithdrawalsGetWireWithdrawalResponse$) {
    /** @deprecated use `WireWithdrawalsGetWireWithdrawalResponse$inboundSchema` instead. */
    WireWithdrawalsGetWireWithdrawalResponse$.inboundSchema = WireWithdrawalsGetWireWithdrawalResponse$inboundSchema;
    /** @deprecated use `WireWithdrawalsGetWireWithdrawalResponse$outboundSchema` instead. */
    WireWithdrawalsGetWireWithdrawalResponse$.outboundSchema = WireWithdrawalsGetWireWithdrawalResponse$outboundSchema;
})(WireWithdrawalsGetWireWithdrawalResponse$ || (WireWithdrawalsGetWireWithdrawalResponse$ = {}));
export function wireWithdrawalsGetWireWithdrawalResponseToJSON(wireWithdrawalsGetWireWithdrawalResponse) {
    return JSON.stringify(WireWithdrawalsGetWireWithdrawalResponse$outboundSchema.parse(wireWithdrawalsGetWireWithdrawalResponse));
}
export function wireWithdrawalsGetWireWithdrawalResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => WireWithdrawalsGetWireWithdrawalResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'WireWithdrawalsGetWireWithdrawalResponse' from JSON`);
}
//# sourceMappingURL=wirewithdrawalsgetwirewithdrawal.js.map