/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const OrderPriceServiceRetrieveQuoteRequest$inboundSchema = z.object({
    account_id: z.string(),
    RetrieveQuoteRequestCreate: components.RetrieveQuoteRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "RetrieveQuoteRequestCreate": "retrieveQuoteRequestCreate",
    });
});
/** @internal */
export const OrderPriceServiceRetrieveQuoteRequest$outboundSchema = z.object({
    accountId: z.string(),
    retrieveQuoteRequestCreate: components.RetrieveQuoteRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        retrieveQuoteRequestCreate: "RetrieveQuoteRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderPriceServiceRetrieveQuoteRequest$;
(function (OrderPriceServiceRetrieveQuoteRequest$) {
    /** @deprecated use `OrderPriceServiceRetrieveQuoteRequest$inboundSchema` instead. */
    OrderPriceServiceRetrieveQuoteRequest$.inboundSchema = OrderPriceServiceRetrieveQuoteRequest$inboundSchema;
    /** @deprecated use `OrderPriceServiceRetrieveQuoteRequest$outboundSchema` instead. */
    OrderPriceServiceRetrieveQuoteRequest$.outboundSchema = OrderPriceServiceRetrieveQuoteRequest$outboundSchema;
})(OrderPriceServiceRetrieveQuoteRequest$ || (OrderPriceServiceRetrieveQuoteRequest$ = {}));
export function orderPriceServiceRetrieveQuoteRequestToJSON(orderPriceServiceRetrieveQuoteRequest) {
    return JSON.stringify(OrderPriceServiceRetrieveQuoteRequest$outboundSchema.parse(orderPriceServiceRetrieveQuoteRequest));
}
export function orderPriceServiceRetrieveQuoteRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderPriceServiceRetrieveQuoteRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderPriceServiceRetrieveQuoteRequest' from JSON`);
}
/** @internal */
export const OrderPriceServiceRetrieveQuoteResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    RetrieveQuoteResponse: components.RetrieveQuoteResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "RetrieveQuoteResponse": "retrieveQuoteResponse",
        "Status": "status",
    });
});
/** @internal */
export const OrderPriceServiceRetrieveQuoteResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    retrieveQuoteResponse: components.RetrieveQuoteResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        retrieveQuoteResponse: "RetrieveQuoteResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderPriceServiceRetrieveQuoteResponse$;
(function (OrderPriceServiceRetrieveQuoteResponse$) {
    /** @deprecated use `OrderPriceServiceRetrieveQuoteResponse$inboundSchema` instead. */
    OrderPriceServiceRetrieveQuoteResponse$.inboundSchema = OrderPriceServiceRetrieveQuoteResponse$inboundSchema;
    /** @deprecated use `OrderPriceServiceRetrieveQuoteResponse$outboundSchema` instead. */
    OrderPriceServiceRetrieveQuoteResponse$.outboundSchema = OrderPriceServiceRetrieveQuoteResponse$outboundSchema;
})(OrderPriceServiceRetrieveQuoteResponse$ || (OrderPriceServiceRetrieveQuoteResponse$ = {}));
export function orderPriceServiceRetrieveQuoteResponseToJSON(orderPriceServiceRetrieveQuoteResponse) {
    return JSON.stringify(OrderPriceServiceRetrieveQuoteResponse$outboundSchema.parse(orderPriceServiceRetrieveQuoteResponse));
}
export function orderPriceServiceRetrieveQuoteResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderPriceServiceRetrieveQuoteResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderPriceServiceRetrieveQuoteResponse' from JSON`);
}
//# sourceMappingURL=orderpriceserviceretrievequote.js.map