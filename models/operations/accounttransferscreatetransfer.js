/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountTransfersCreateTransferRequest$inboundSchema = z.object({
    correspondent_id: z.string(),
    account_id: z.string(),
    request_id: z.string().optional(),
    TransferCreate: components.TransferCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "correspondent_id": "correspondentId",
        "account_id": "accountId",
        "request_id": "requestId",
        "TransferCreate": "transferCreate",
    });
});
/** @internal */
export const AccountTransfersCreateTransferRequest$outboundSchema = z.object({
    correspondentId: z.string(),
    accountId: z.string(),
    requestId: z.string().optional(),
    transferCreate: components.TransferCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        correspondentId: "correspondent_id",
        accountId: "account_id",
        requestId: "request_id",
        transferCreate: "TransferCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountTransfersCreateTransferRequest$;
(function (AccountTransfersCreateTransferRequest$) {
    /** @deprecated use `AccountTransfersCreateTransferRequest$inboundSchema` instead. */
    AccountTransfersCreateTransferRequest$.inboundSchema = AccountTransfersCreateTransferRequest$inboundSchema;
    /** @deprecated use `AccountTransfersCreateTransferRequest$outboundSchema` instead. */
    AccountTransfersCreateTransferRequest$.outboundSchema = AccountTransfersCreateTransferRequest$outboundSchema;
})(AccountTransfersCreateTransferRequest$ || (AccountTransfersCreateTransferRequest$ = {}));
export function accountTransfersCreateTransferRequestToJSON(accountTransfersCreateTransferRequest) {
    return JSON.stringify(AccountTransfersCreateTransferRequest$outboundSchema.parse(accountTransfersCreateTransferRequest));
}
export function accountTransfersCreateTransferRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountTransfersCreateTransferRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountTransfersCreateTransferRequest' from JSON`);
}
/** @internal */
export const AccountTransfersCreateTransferResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    AcatsTransfer: components.AcatsTransfer$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "AcatsTransfer": "acatsTransfer",
        "Status": "status",
    });
});
/** @internal */
export const AccountTransfersCreateTransferResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    acatsTransfer: components.AcatsTransfer$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        acatsTransfer: "AcatsTransfer",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountTransfersCreateTransferResponse$;
(function (AccountTransfersCreateTransferResponse$) {
    /** @deprecated use `AccountTransfersCreateTransferResponse$inboundSchema` instead. */
    AccountTransfersCreateTransferResponse$.inboundSchema = AccountTransfersCreateTransferResponse$inboundSchema;
    /** @deprecated use `AccountTransfersCreateTransferResponse$outboundSchema` instead. */
    AccountTransfersCreateTransferResponse$.outboundSchema = AccountTransfersCreateTransferResponse$outboundSchema;
})(AccountTransfersCreateTransferResponse$ || (AccountTransfersCreateTransferResponse$ = {}));
export function accountTransfersCreateTransferResponseToJSON(accountTransfersCreateTransferResponse) {
    return JSON.stringify(AccountTransfersCreateTransferResponse$outboundSchema.parse(accountTransfersCreateTransferResponse));
}
export function accountTransfersCreateTransferResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountTransfersCreateTransferResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountTransfersCreateTransferResponse' from JSON`);
}
//# sourceMappingURL=accounttransferscreatetransfer.js.map