/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BookingCreateTradeAllocationRequest$inboundSchema = z.object({
    account_id: z.string(),
    request_id: z.string().optional(),
    TradeAllocationCreate: components.TradeAllocationCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "request_id": "requestId",
        "TradeAllocationCreate": "tradeAllocationCreate",
    });
});
/** @internal */
export const BookingCreateTradeAllocationRequest$outboundSchema = z.object({
    accountId: z.string(),
    requestId: z.string().optional(),
    tradeAllocationCreate: components.TradeAllocationCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        requestId: "request_id",
        tradeAllocationCreate: "TradeAllocationCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BookingCreateTradeAllocationRequest$;
(function (BookingCreateTradeAllocationRequest$) {
    /** @deprecated use `BookingCreateTradeAllocationRequest$inboundSchema` instead. */
    BookingCreateTradeAllocationRequest$.inboundSchema = BookingCreateTradeAllocationRequest$inboundSchema;
    /** @deprecated use `BookingCreateTradeAllocationRequest$outboundSchema` instead. */
    BookingCreateTradeAllocationRequest$.outboundSchema = BookingCreateTradeAllocationRequest$outboundSchema;
})(BookingCreateTradeAllocationRequest$ || (BookingCreateTradeAllocationRequest$ = {}));
export function bookingCreateTradeAllocationRequestToJSON(bookingCreateTradeAllocationRequest) {
    return JSON.stringify(BookingCreateTradeAllocationRequest$outboundSchema.parse(bookingCreateTradeAllocationRequest));
}
export function bookingCreateTradeAllocationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BookingCreateTradeAllocationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BookingCreateTradeAllocationRequest' from JSON`);
}
/** @internal */
export const BookingCreateTradeAllocationResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    TradeAllocation: components.TradeAllocation$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "TradeAllocation": "tradeAllocation",
        "Status": "status",
    });
});
/** @internal */
export const BookingCreateTradeAllocationResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    tradeAllocation: components.TradeAllocation$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        tradeAllocation: "TradeAllocation",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BookingCreateTradeAllocationResponse$;
(function (BookingCreateTradeAllocationResponse$) {
    /** @deprecated use `BookingCreateTradeAllocationResponse$inboundSchema` instead. */
    BookingCreateTradeAllocationResponse$.inboundSchema = BookingCreateTradeAllocationResponse$inboundSchema;
    /** @deprecated use `BookingCreateTradeAllocationResponse$outboundSchema` instead. */
    BookingCreateTradeAllocationResponse$.outboundSchema = BookingCreateTradeAllocationResponse$outboundSchema;
})(BookingCreateTradeAllocationResponse$ || (BookingCreateTradeAllocationResponse$ = {}));
export function bookingCreateTradeAllocationResponseToJSON(bookingCreateTradeAllocationResponse) {
    return JSON.stringify(BookingCreateTradeAllocationResponse$outboundSchema.parse(bookingCreateTradeAllocationResponse));
}
export function bookingCreateTradeAllocationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BookingCreateTradeAllocationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BookingCreateTradeAllocationResponse' from JSON`);
}
//# sourceMappingURL=bookingcreatetradeallocation.js.map