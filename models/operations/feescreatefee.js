/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const FeesCreateFeeRequest$inboundSchema = z.object({
    account_id: z.string(),
    TransfersFeeCreate: components.TransfersFeeCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "TransfersFeeCreate": "transfersFeeCreate",
    });
});
/** @internal */
export const FeesCreateFeeRequest$outboundSchema = z.object({
    accountId: z.string(),
    transfersFeeCreate: components.TransfersFeeCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        transfersFeeCreate: "TransfersFeeCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeesCreateFeeRequest$;
(function (FeesCreateFeeRequest$) {
    /** @deprecated use `FeesCreateFeeRequest$inboundSchema` instead. */
    FeesCreateFeeRequest$.inboundSchema = FeesCreateFeeRequest$inboundSchema;
    /** @deprecated use `FeesCreateFeeRequest$outboundSchema` instead. */
    FeesCreateFeeRequest$.outboundSchema = FeesCreateFeeRequest$outboundSchema;
})(FeesCreateFeeRequest$ || (FeesCreateFeeRequest$ = {}));
export function feesCreateFeeRequestToJSON(feesCreateFeeRequest) {
    return JSON.stringify(FeesCreateFeeRequest$outboundSchema.parse(feesCreateFeeRequest));
}
export function feesCreateFeeRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeesCreateFeeRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeesCreateFeeRequest' from JSON`);
}
/** @internal */
export const FeesCreateFeeResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    TransfersFee: components.TransfersFee$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "TransfersFee": "transfersFee",
        "Status": "status",
    });
});
/** @internal */
export const FeesCreateFeeResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    transfersFee: components.TransfersFee$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        transfersFee: "TransfersFee",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeesCreateFeeResponse$;
(function (FeesCreateFeeResponse$) {
    /** @deprecated use `FeesCreateFeeResponse$inboundSchema` instead. */
    FeesCreateFeeResponse$.inboundSchema = FeesCreateFeeResponse$inboundSchema;
    /** @deprecated use `FeesCreateFeeResponse$outboundSchema` instead. */
    FeesCreateFeeResponse$.outboundSchema = FeesCreateFeeResponse$outboundSchema;
})(FeesCreateFeeResponse$ || (FeesCreateFeeResponse$ = {}));
export function feesCreateFeeResponseToJSON(feesCreateFeeResponse) {
    return JSON.stringify(FeesCreateFeeResponse$outboundSchema.parse(feesCreateFeeResponse));
}
export function feesCreateFeeResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeesCreateFeeResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeesCreateFeeResponse' from JSON`);
}
//# sourceMappingURL=feescreatefee.js.map