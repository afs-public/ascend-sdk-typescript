/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AssetsListAssets1Request$inboundSchema = z.object({
    parent: z.string().optional(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const AssetsListAssets1Request$outboundSchema = z.object({
    parent: z.string().optional(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssetsListAssets1Request$;
(function (AssetsListAssets1Request$) {
    /** @deprecated use `AssetsListAssets1Request$inboundSchema` instead. */
    AssetsListAssets1Request$.inboundSchema = AssetsListAssets1Request$inboundSchema;
    /** @deprecated use `AssetsListAssets1Request$outboundSchema` instead. */
    AssetsListAssets1Request$.outboundSchema = AssetsListAssets1Request$outboundSchema;
})(AssetsListAssets1Request$ || (AssetsListAssets1Request$ = {}));
export function assetsListAssets1RequestToJSON(assetsListAssets1Request) {
    return JSON.stringify(AssetsListAssets1Request$outboundSchema.parse(assetsListAssets1Request));
}
export function assetsListAssets1RequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssetsListAssets1Request$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetsListAssets1Request' from JSON`);
}
/** @internal */
export const AssetsListAssets1Response$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListAssetsResponse: components.ListAssetsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListAssetsResponse": "listAssetsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AssetsListAssets1Response$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listAssetsResponse: components.ListAssetsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listAssetsResponse: "ListAssetsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssetsListAssets1Response$;
(function (AssetsListAssets1Response$) {
    /** @deprecated use `AssetsListAssets1Response$inboundSchema` instead. */
    AssetsListAssets1Response$.inboundSchema = AssetsListAssets1Response$inboundSchema;
    /** @deprecated use `AssetsListAssets1Response$outboundSchema` instead. */
    AssetsListAssets1Response$.outboundSchema = AssetsListAssets1Response$outboundSchema;
})(AssetsListAssets1Response$ || (AssetsListAssets1Response$ = {}));
export function assetsListAssets1ResponseToJSON(assetsListAssets1Response) {
    return JSON.stringify(AssetsListAssets1Response$outboundSchema.parse(assetsListAssets1Response));
}
export function assetsListAssets1ResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssetsListAssets1Response$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetsListAssets1Response' from JSON`);
}
//# sourceMappingURL=assetslistassets1.js.map