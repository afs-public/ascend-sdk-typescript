/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountTransfersGetTransferRequest$inboundSchema = z.object({
    correspondent_id: z.string(),
    account_id: z.string(),
    transfer_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "correspondent_id": "correspondentId",
        "account_id": "accountId",
        "transfer_id": "transferId",
    });
});
/** @internal */
export const AccountTransfersGetTransferRequest$outboundSchema = z.object({
    correspondentId: z.string(),
    accountId: z.string(),
    transferId: z.string(),
}).transform((v) => {
    return remap$(v, {
        correspondentId: "correspondent_id",
        accountId: "account_id",
        transferId: "transfer_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountTransfersGetTransferRequest$;
(function (AccountTransfersGetTransferRequest$) {
    /** @deprecated use `AccountTransfersGetTransferRequest$inboundSchema` instead. */
    AccountTransfersGetTransferRequest$.inboundSchema = AccountTransfersGetTransferRequest$inboundSchema;
    /** @deprecated use `AccountTransfersGetTransferRequest$outboundSchema` instead. */
    AccountTransfersGetTransferRequest$.outboundSchema = AccountTransfersGetTransferRequest$outboundSchema;
})(AccountTransfersGetTransferRequest$ || (AccountTransfersGetTransferRequest$ = {}));
export function accountTransfersGetTransferRequestToJSON(accountTransfersGetTransferRequest) {
    return JSON.stringify(AccountTransfersGetTransferRequest$outboundSchema.parse(accountTransfersGetTransferRequest));
}
export function accountTransfersGetTransferRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountTransfersGetTransferRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountTransfersGetTransferRequest' from JSON`);
}
/** @internal */
export const AccountTransfersGetTransferResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    AcatsTransfer: components.AcatsTransfer$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "AcatsTransfer": "acatsTransfer",
        "Status": "status",
    });
});
/** @internal */
export const AccountTransfersGetTransferResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    acatsTransfer: components.AcatsTransfer$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        acatsTransfer: "AcatsTransfer",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountTransfersGetTransferResponse$;
(function (AccountTransfersGetTransferResponse$) {
    /** @deprecated use `AccountTransfersGetTransferResponse$inboundSchema` instead. */
    AccountTransfersGetTransferResponse$.inboundSchema = AccountTransfersGetTransferResponse$inboundSchema;
    /** @deprecated use `AccountTransfersGetTransferResponse$outboundSchema` instead. */
    AccountTransfersGetTransferResponse$.outboundSchema = AccountTransfersGetTransferResponse$outboundSchema;
})(AccountTransfersGetTransferResponse$ || (AccountTransfersGetTransferResponse$ = {}));
export function accountTransfersGetTransferResponseToJSON(accountTransfersGetTransferResponse) {
    return JSON.stringify(AccountTransfersGetTransferResponse$outboundSchema.parse(accountTransfersGetTransferResponse));
}
export function accountTransfersGetTransferResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountTransfersGetTransferResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountTransfersGetTransferResponse' from JSON`);
}
//# sourceMappingURL=accounttransfersgettransfer.js.map