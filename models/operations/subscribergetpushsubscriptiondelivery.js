/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const SubscriberGetPushSubscriptionDeliveryRequest$inboundSchema = z.object({
    subscription_id: z.string(),
    delivery_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "subscription_id": "subscriptionId",
        "delivery_id": "deliveryId",
    });
});
/** @internal */
export const SubscriberGetPushSubscriptionDeliveryRequest$outboundSchema = z.object({
    subscriptionId: z.string(),
    deliveryId: z.string(),
}).transform((v) => {
    return remap$(v, {
        subscriptionId: "subscription_id",
        deliveryId: "delivery_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberGetPushSubscriptionDeliveryRequest$;
(function (SubscriberGetPushSubscriptionDeliveryRequest$) {
    /** @deprecated use `SubscriberGetPushSubscriptionDeliveryRequest$inboundSchema` instead. */
    SubscriberGetPushSubscriptionDeliveryRequest$.inboundSchema = SubscriberGetPushSubscriptionDeliveryRequest$inboundSchema;
    /** @deprecated use `SubscriberGetPushSubscriptionDeliveryRequest$outboundSchema` instead. */
    SubscriberGetPushSubscriptionDeliveryRequest$.outboundSchema = SubscriberGetPushSubscriptionDeliveryRequest$outboundSchema;
})(SubscriberGetPushSubscriptionDeliveryRequest$ || (SubscriberGetPushSubscriptionDeliveryRequest$ = {}));
export function subscriberGetPushSubscriptionDeliveryRequestToJSON(subscriberGetPushSubscriptionDeliveryRequest) {
    return JSON.stringify(SubscriberGetPushSubscriptionDeliveryRequest$outboundSchema.parse(subscriberGetPushSubscriptionDeliveryRequest));
}
export function subscriberGetPushSubscriptionDeliveryRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberGetPushSubscriptionDeliveryRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberGetPushSubscriptionDeliveryRequest' from JSON`);
}
/** @internal */
export const SubscriberGetPushSubscriptionDeliveryResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    PushSubscriptionDelivery: components.PushSubscriptionDelivery$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "PushSubscriptionDelivery": "pushSubscriptionDelivery",
        "Status": "status",
    });
});
/** @internal */
export const SubscriberGetPushSubscriptionDeliveryResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    pushSubscriptionDelivery: components.PushSubscriptionDelivery$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        pushSubscriptionDelivery: "PushSubscriptionDelivery",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberGetPushSubscriptionDeliveryResponse$;
(function (SubscriberGetPushSubscriptionDeliveryResponse$) {
    /** @deprecated use `SubscriberGetPushSubscriptionDeliveryResponse$inboundSchema` instead. */
    SubscriberGetPushSubscriptionDeliveryResponse$.inboundSchema = SubscriberGetPushSubscriptionDeliveryResponse$inboundSchema;
    /** @deprecated use `SubscriberGetPushSubscriptionDeliveryResponse$outboundSchema` instead. */
    SubscriberGetPushSubscriptionDeliveryResponse$.outboundSchema = SubscriberGetPushSubscriptionDeliveryResponse$outboundSchema;
})(SubscriberGetPushSubscriptionDeliveryResponse$ || (SubscriberGetPushSubscriptionDeliveryResponse$ = {}));
export function subscriberGetPushSubscriptionDeliveryResponseToJSON(subscriberGetPushSubscriptionDeliveryResponse) {
    return JSON.stringify(SubscriberGetPushSubscriptionDeliveryResponse$outboundSchema.parse(subscriberGetPushSubscriptionDeliveryResponse));
}
export function subscriberGetPushSubscriptionDeliveryResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberGetPushSubscriptionDeliveryResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberGetPushSubscriptionDeliveryResponse' from JSON`);
}
//# sourceMappingURL=subscribergetpushsubscriptiondelivery.js.map