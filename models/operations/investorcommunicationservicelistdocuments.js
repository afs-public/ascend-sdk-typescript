/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const InvestorCommunicationServiceListDocumentsRequest$inboundSchema = z.object({
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const InvestorCommunicationServiceListDocumentsRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestorCommunicationServiceListDocumentsRequest$;
(function (InvestorCommunicationServiceListDocumentsRequest$) {
    /** @deprecated use `InvestorCommunicationServiceListDocumentsRequest$inboundSchema` instead. */
    InvestorCommunicationServiceListDocumentsRequest$.inboundSchema = InvestorCommunicationServiceListDocumentsRequest$inboundSchema;
    /** @deprecated use `InvestorCommunicationServiceListDocumentsRequest$outboundSchema` instead. */
    InvestorCommunicationServiceListDocumentsRequest$.outboundSchema = InvestorCommunicationServiceListDocumentsRequest$outboundSchema;
})(InvestorCommunicationServiceListDocumentsRequest$ || (InvestorCommunicationServiceListDocumentsRequest$ = {}));
export function investorCommunicationServiceListDocumentsRequestToJSON(investorCommunicationServiceListDocumentsRequest) {
    return JSON.stringify(InvestorCommunicationServiceListDocumentsRequest$outboundSchema.parse(investorCommunicationServiceListDocumentsRequest));
}
export function investorCommunicationServiceListDocumentsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestorCommunicationServiceListDocumentsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestorCommunicationServiceListDocumentsRequest' from JSON`);
}
/** @internal */
export const InvestorCommunicationServiceListDocumentsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListDocumentsResponse: components.ListDocumentsResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListDocumentsResponse": "listDocumentsResponse",
        "Status": "status",
    });
});
/** @internal */
export const InvestorCommunicationServiceListDocumentsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listDocumentsResponse: components.ListDocumentsResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listDocumentsResponse: "ListDocumentsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestorCommunicationServiceListDocumentsResponse$;
(function (InvestorCommunicationServiceListDocumentsResponse$) {
    /** @deprecated use `InvestorCommunicationServiceListDocumentsResponse$inboundSchema` instead. */
    InvestorCommunicationServiceListDocumentsResponse$.inboundSchema = InvestorCommunicationServiceListDocumentsResponse$inboundSchema;
    /** @deprecated use `InvestorCommunicationServiceListDocumentsResponse$outboundSchema` instead. */
    InvestorCommunicationServiceListDocumentsResponse$.outboundSchema = InvestorCommunicationServiceListDocumentsResponse$outboundSchema;
})(InvestorCommunicationServiceListDocumentsResponse$ || (InvestorCommunicationServiceListDocumentsResponse$ = {}));
export function investorCommunicationServiceListDocumentsResponseToJSON(investorCommunicationServiceListDocumentsResponse) {
    return JSON.stringify(InvestorCommunicationServiceListDocumentsResponse$outboundSchema.parse(investorCommunicationServiceListDocumentsResponse));
}
export function investorCommunicationServiceListDocumentsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestorCommunicationServiceListDocumentsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestorCommunicationServiceListDocumentsResponse' from JSON`);
}
//# sourceMappingURL=investorcommunicationservicelistdocuments.js.map