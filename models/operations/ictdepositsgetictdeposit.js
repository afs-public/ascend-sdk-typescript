/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const IctDepositsGetIctDepositRequest$inboundSchema = z.object({
    account_id: z.string(),
    ictDeposit_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "ictDeposit_id": "ictDepositId",
    });
});
/** @internal */
export const IctDepositsGetIctDepositRequest$outboundSchema = z.object({
    accountId: z.string(),
    ictDepositId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        ictDepositId: "ictDeposit_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IctDepositsGetIctDepositRequest$;
(function (IctDepositsGetIctDepositRequest$) {
    /** @deprecated use `IctDepositsGetIctDepositRequest$inboundSchema` instead. */
    IctDepositsGetIctDepositRequest$.inboundSchema = IctDepositsGetIctDepositRequest$inboundSchema;
    /** @deprecated use `IctDepositsGetIctDepositRequest$outboundSchema` instead. */
    IctDepositsGetIctDepositRequest$.outboundSchema = IctDepositsGetIctDepositRequest$outboundSchema;
})(IctDepositsGetIctDepositRequest$ || (IctDepositsGetIctDepositRequest$ = {}));
export function ictDepositsGetIctDepositRequestToJSON(ictDepositsGetIctDepositRequest) {
    return JSON.stringify(IctDepositsGetIctDepositRequest$outboundSchema.parse(ictDepositsGetIctDepositRequest));
}
export function ictDepositsGetIctDepositRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IctDepositsGetIctDepositRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IctDepositsGetIctDepositRequest' from JSON`);
}
/** @internal */
export const IctDepositsGetIctDepositResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    IctDeposit: components.IctDeposit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "IctDeposit": "ictDeposit",
        "Status": "status",
    });
});
/** @internal */
export const IctDepositsGetIctDepositResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    ictDeposit: components.IctDeposit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        ictDeposit: "IctDeposit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IctDepositsGetIctDepositResponse$;
(function (IctDepositsGetIctDepositResponse$) {
    /** @deprecated use `IctDepositsGetIctDepositResponse$inboundSchema` instead. */
    IctDepositsGetIctDepositResponse$.inboundSchema = IctDepositsGetIctDepositResponse$inboundSchema;
    /** @deprecated use `IctDepositsGetIctDepositResponse$outboundSchema` instead. */
    IctDepositsGetIctDepositResponse$.outboundSchema = IctDepositsGetIctDepositResponse$outboundSchema;
})(IctDepositsGetIctDepositResponse$ || (IctDepositsGetIctDepositResponse$ = {}));
export function ictDepositsGetIctDepositResponseToJSON(ictDepositsGetIctDepositResponse) {
    return JSON.stringify(IctDepositsGetIctDepositResponse$outboundSchema.parse(ictDepositsGetIctDepositResponse));
}
export function ictDepositsGetIctDepositResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IctDepositsGetIctDepositResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IctDepositsGetIctDepositResponse' from JSON`);
}
//# sourceMappingURL=ictdepositsgetictdeposit.js.map