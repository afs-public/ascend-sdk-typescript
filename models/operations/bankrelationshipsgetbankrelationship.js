/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BankRelationshipsGetBankRelationshipRequest$inboundSchema = z.object({
    account_id: z.string(),
    bankRelationship_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "bankRelationship_id": "bankRelationshipId",
    });
});
/** @internal */
export const BankRelationshipsGetBankRelationshipRequest$outboundSchema = z.object({
    accountId: z.string(),
    bankRelationshipId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        bankRelationshipId: "bankRelationship_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsGetBankRelationshipRequest$;
(function (BankRelationshipsGetBankRelationshipRequest$) {
    /** @deprecated use `BankRelationshipsGetBankRelationshipRequest$inboundSchema` instead. */
    BankRelationshipsGetBankRelationshipRequest$.inboundSchema = BankRelationshipsGetBankRelationshipRequest$inboundSchema;
    /** @deprecated use `BankRelationshipsGetBankRelationshipRequest$outboundSchema` instead. */
    BankRelationshipsGetBankRelationshipRequest$.outboundSchema = BankRelationshipsGetBankRelationshipRequest$outboundSchema;
})(BankRelationshipsGetBankRelationshipRequest$ || (BankRelationshipsGetBankRelationshipRequest$ = {}));
export function bankRelationshipsGetBankRelationshipRequestToJSON(bankRelationshipsGetBankRelationshipRequest) {
    return JSON.stringify(BankRelationshipsGetBankRelationshipRequest$outboundSchema.parse(bankRelationshipsGetBankRelationshipRequest));
}
export function bankRelationshipsGetBankRelationshipRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsGetBankRelationshipRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsGetBankRelationshipRequest' from JSON`);
}
/** @internal */
export const BankRelationshipsGetBankRelationshipResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BankRelationship: components.BankRelationship$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "BankRelationship": "bankRelationship",
        "Status": "status",
    });
});
/** @internal */
export const BankRelationshipsGetBankRelationshipResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    bankRelationship: components.BankRelationship$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        bankRelationship: "BankRelationship",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsGetBankRelationshipResponse$;
(function (BankRelationshipsGetBankRelationshipResponse$) {
    /** @deprecated use `BankRelationshipsGetBankRelationshipResponse$inboundSchema` instead. */
    BankRelationshipsGetBankRelationshipResponse$.inboundSchema = BankRelationshipsGetBankRelationshipResponse$inboundSchema;
    /** @deprecated use `BankRelationshipsGetBankRelationshipResponse$outboundSchema` instead. */
    BankRelationshipsGetBankRelationshipResponse$.outboundSchema = BankRelationshipsGetBankRelationshipResponse$outboundSchema;
})(BankRelationshipsGetBankRelationshipResponse$ || (BankRelationshipsGetBankRelationshipResponse$ = {}));
export function bankRelationshipsGetBankRelationshipResponseToJSON(bankRelationshipsGetBankRelationshipResponse) {
    return JSON.stringify(BankRelationshipsGetBankRelationshipResponse$outboundSchema.parse(bankRelationshipsGetBankRelationshipResponse));
}
export function bankRelationshipsGetBankRelationshipResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsGetBankRelationshipResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsGetBankRelationshipResponse' from JSON`);
}
//# sourceMappingURL=bankrelationshipsgetbankrelationship.js.map