/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BankRelationshipsReuseBankRelationshipRequest$inboundSchema = z.object({
    account_id: z.string(),
    ReuseBankRelationshipRequestCreate: components.ReuseBankRelationshipRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "ReuseBankRelationshipRequestCreate": "reuseBankRelationshipRequestCreate",
    });
});
/** @internal */
export const BankRelationshipsReuseBankRelationshipRequest$outboundSchema = z.object({
    accountId: z.string(),
    reuseBankRelationshipRequestCreate: components.ReuseBankRelationshipRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        reuseBankRelationshipRequestCreate: "ReuseBankRelationshipRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsReuseBankRelationshipRequest$;
(function (BankRelationshipsReuseBankRelationshipRequest$) {
    /** @deprecated use `BankRelationshipsReuseBankRelationshipRequest$inboundSchema` instead. */
    BankRelationshipsReuseBankRelationshipRequest$.inboundSchema = BankRelationshipsReuseBankRelationshipRequest$inboundSchema;
    /** @deprecated use `BankRelationshipsReuseBankRelationshipRequest$outboundSchema` instead. */
    BankRelationshipsReuseBankRelationshipRequest$.outboundSchema = BankRelationshipsReuseBankRelationshipRequest$outboundSchema;
})(BankRelationshipsReuseBankRelationshipRequest$ || (BankRelationshipsReuseBankRelationshipRequest$ = {}));
export function bankRelationshipsReuseBankRelationshipRequestToJSON(bankRelationshipsReuseBankRelationshipRequest) {
    return JSON.stringify(BankRelationshipsReuseBankRelationshipRequest$outboundSchema.parse(bankRelationshipsReuseBankRelationshipRequest));
}
export function bankRelationshipsReuseBankRelationshipRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsReuseBankRelationshipRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsReuseBankRelationshipRequest' from JSON`);
}
/** @internal */
export const BankRelationshipsReuseBankRelationshipResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BankRelationship: components.BankRelationship$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "BankRelationship": "bankRelationship",
        "Status": "status",
    });
});
/** @internal */
export const BankRelationshipsReuseBankRelationshipResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    bankRelationship: components.BankRelationship$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        bankRelationship: "BankRelationship",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsReuseBankRelationshipResponse$;
(function (BankRelationshipsReuseBankRelationshipResponse$) {
    /** @deprecated use `BankRelationshipsReuseBankRelationshipResponse$inboundSchema` instead. */
    BankRelationshipsReuseBankRelationshipResponse$.inboundSchema = BankRelationshipsReuseBankRelationshipResponse$inboundSchema;
    /** @deprecated use `BankRelationshipsReuseBankRelationshipResponse$outboundSchema` instead. */
    BankRelationshipsReuseBankRelationshipResponse$.outboundSchema = BankRelationshipsReuseBankRelationshipResponse$outboundSchema;
})(BankRelationshipsReuseBankRelationshipResponse$ || (BankRelationshipsReuseBankRelationshipResponse$ = {}));
export function bankRelationshipsReuseBankRelationshipResponseToJSON(bankRelationshipsReuseBankRelationshipResponse) {
    return JSON.stringify(BankRelationshipsReuseBankRelationshipResponse$outboundSchema.parse(bankRelationshipsReuseBankRelationshipResponse));
}
export function bankRelationshipsReuseBankRelationshipResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsReuseBankRelationshipResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsReuseBankRelationshipResponse' from JSON`);
}
//# sourceMappingURL=bankrelationshipsreusebankrelationship.js.map