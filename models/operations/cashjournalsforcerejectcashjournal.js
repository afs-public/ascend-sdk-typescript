/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CashJournalsForceRejectCashJournalRequest$inboundSchema = z.object({
    cashJournal_id: z.string(),
    ForceRejectCashJournalRequestCreate: components.ForceRejectCashJournalRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "cashJournal_id": "cashJournalId",
        "ForceRejectCashJournalRequestCreate": "forceRejectCashJournalRequestCreate",
    });
});
/** @internal */
export const CashJournalsForceRejectCashJournalRequest$outboundSchema = z.object({
    cashJournalId: z.string(),
    forceRejectCashJournalRequestCreate: components.ForceRejectCashJournalRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        cashJournalId: "cashJournal_id",
        forceRejectCashJournalRequestCreate: "ForceRejectCashJournalRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsForceRejectCashJournalRequest$;
(function (CashJournalsForceRejectCashJournalRequest$) {
    /** @deprecated use `CashJournalsForceRejectCashJournalRequest$inboundSchema` instead. */
    CashJournalsForceRejectCashJournalRequest$.inboundSchema = CashJournalsForceRejectCashJournalRequest$inboundSchema;
    /** @deprecated use `CashJournalsForceRejectCashJournalRequest$outboundSchema` instead. */
    CashJournalsForceRejectCashJournalRequest$.outboundSchema = CashJournalsForceRejectCashJournalRequest$outboundSchema;
})(CashJournalsForceRejectCashJournalRequest$ || (CashJournalsForceRejectCashJournalRequest$ = {}));
export function cashJournalsForceRejectCashJournalRequestToJSON(cashJournalsForceRejectCashJournalRequest) {
    return JSON.stringify(CashJournalsForceRejectCashJournalRequest$outboundSchema.parse(cashJournalsForceRejectCashJournalRequest));
}
export function cashJournalsForceRejectCashJournalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsForceRejectCashJournalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsForceRejectCashJournalRequest' from JSON`);
}
/** @internal */
export const CashJournalsForceRejectCashJournalResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    CashJournal: components.CashJournal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "CashJournal": "cashJournal",
        "Status": "status",
    });
});
/** @internal */
export const CashJournalsForceRejectCashJournalResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    cashJournal: components.CashJournal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        cashJournal: "CashJournal",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsForceRejectCashJournalResponse$;
(function (CashJournalsForceRejectCashJournalResponse$) {
    /** @deprecated use `CashJournalsForceRejectCashJournalResponse$inboundSchema` instead. */
    CashJournalsForceRejectCashJournalResponse$.inboundSchema = CashJournalsForceRejectCashJournalResponse$inboundSchema;
    /** @deprecated use `CashJournalsForceRejectCashJournalResponse$outboundSchema` instead. */
    CashJournalsForceRejectCashJournalResponse$.outboundSchema = CashJournalsForceRejectCashJournalResponse$outboundSchema;
})(CashJournalsForceRejectCashJournalResponse$ || (CashJournalsForceRejectCashJournalResponse$ = {}));
export function cashJournalsForceRejectCashJournalResponseToJSON(cashJournalsForceRejectCashJournalResponse) {
    return JSON.stringify(CashJournalsForceRejectCashJournalResponse$outboundSchema.parse(cashJournalsForceRejectCashJournalResponse));
}
export function cashJournalsForceRejectCashJournalResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsForceRejectCashJournalResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsForceRejectCashJournalResponse' from JSON`);
}
//# sourceMappingURL=cashjournalsforcerejectcashjournal.js.map