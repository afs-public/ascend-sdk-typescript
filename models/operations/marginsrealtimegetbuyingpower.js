/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const MarginsRealTimeGetBuyingPowerRequest$inboundSchema = z.object({
    account_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
    });
});
/** @internal */
export const MarginsRealTimeGetBuyingPowerRequest$outboundSchema = z.object({
    accountId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MarginsRealTimeGetBuyingPowerRequest$;
(function (MarginsRealTimeGetBuyingPowerRequest$) {
    /** @deprecated use `MarginsRealTimeGetBuyingPowerRequest$inboundSchema` instead. */
    MarginsRealTimeGetBuyingPowerRequest$.inboundSchema = MarginsRealTimeGetBuyingPowerRequest$inboundSchema;
    /** @deprecated use `MarginsRealTimeGetBuyingPowerRequest$outboundSchema` instead. */
    MarginsRealTimeGetBuyingPowerRequest$.outboundSchema = MarginsRealTimeGetBuyingPowerRequest$outboundSchema;
})(MarginsRealTimeGetBuyingPowerRequest$ || (MarginsRealTimeGetBuyingPowerRequest$ = {}));
export function marginsRealTimeGetBuyingPowerRequestToJSON(marginsRealTimeGetBuyingPowerRequest) {
    return JSON.stringify(MarginsRealTimeGetBuyingPowerRequest$outboundSchema.parse(marginsRealTimeGetBuyingPowerRequest));
}
export function marginsRealTimeGetBuyingPowerRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MarginsRealTimeGetBuyingPowerRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MarginsRealTimeGetBuyingPowerRequest' from JSON`);
}
/** @internal */
export const MarginsRealTimeGetBuyingPowerResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BuyingPower: components.BuyingPower$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "BuyingPower": "buyingPower",
        "Status": "status",
    });
});
/** @internal */
export const MarginsRealTimeGetBuyingPowerResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    buyingPower: components.BuyingPower$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        buyingPower: "BuyingPower",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var MarginsRealTimeGetBuyingPowerResponse$;
(function (MarginsRealTimeGetBuyingPowerResponse$) {
    /** @deprecated use `MarginsRealTimeGetBuyingPowerResponse$inboundSchema` instead. */
    MarginsRealTimeGetBuyingPowerResponse$.inboundSchema = MarginsRealTimeGetBuyingPowerResponse$inboundSchema;
    /** @deprecated use `MarginsRealTimeGetBuyingPowerResponse$outboundSchema` instead. */
    MarginsRealTimeGetBuyingPowerResponse$.outboundSchema = MarginsRealTimeGetBuyingPowerResponse$outboundSchema;
})(MarginsRealTimeGetBuyingPowerResponse$ || (MarginsRealTimeGetBuyingPowerResponse$ = {}));
export function marginsRealTimeGetBuyingPowerResponseToJSON(marginsRealTimeGetBuyingPowerResponse) {
    return JSON.stringify(MarginsRealTimeGetBuyingPowerResponse$outboundSchema.parse(marginsRealTimeGetBuyingPowerResponse));
}
export function marginsRealTimeGetBuyingPowerResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => MarginsRealTimeGetBuyingPowerResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'MarginsRealTimeGetBuyingPowerResponse' from JSON`);
}
//# sourceMappingURL=marginsrealtimegetbuyingpower.js.map