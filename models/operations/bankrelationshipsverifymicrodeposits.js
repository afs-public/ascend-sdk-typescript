/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BankRelationshipsVerifyMicroDepositsRequest$inboundSchema = z.object({
    account_id: z.string(),
    bankRelationship_id: z.string(),
    VerifyMicroDepositsRequestCreate: components.VerifyMicroDepositsRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "bankRelationship_id": "bankRelationshipId",
        "VerifyMicroDepositsRequestCreate": "verifyMicroDepositsRequestCreate",
    });
});
/** @internal */
export const BankRelationshipsVerifyMicroDepositsRequest$outboundSchema = z.object({
    accountId: z.string(),
    bankRelationshipId: z.string(),
    verifyMicroDepositsRequestCreate: components.VerifyMicroDepositsRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        bankRelationshipId: "bankRelationship_id",
        verifyMicroDepositsRequestCreate: "VerifyMicroDepositsRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsVerifyMicroDepositsRequest$;
(function (BankRelationshipsVerifyMicroDepositsRequest$) {
    /** @deprecated use `BankRelationshipsVerifyMicroDepositsRequest$inboundSchema` instead. */
    BankRelationshipsVerifyMicroDepositsRequest$.inboundSchema = BankRelationshipsVerifyMicroDepositsRequest$inboundSchema;
    /** @deprecated use `BankRelationshipsVerifyMicroDepositsRequest$outboundSchema` instead. */
    BankRelationshipsVerifyMicroDepositsRequest$.outboundSchema = BankRelationshipsVerifyMicroDepositsRequest$outboundSchema;
})(BankRelationshipsVerifyMicroDepositsRequest$ || (BankRelationshipsVerifyMicroDepositsRequest$ = {}));
export function bankRelationshipsVerifyMicroDepositsRequestToJSON(bankRelationshipsVerifyMicroDepositsRequest) {
    return JSON.stringify(BankRelationshipsVerifyMicroDepositsRequest$outboundSchema.parse(bankRelationshipsVerifyMicroDepositsRequest));
}
export function bankRelationshipsVerifyMicroDepositsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsVerifyMicroDepositsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsVerifyMicroDepositsRequest' from JSON`);
}
/** @internal */
export const BankRelationshipsVerifyMicroDepositsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BankRelationship: components.BankRelationship$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "BankRelationship": "bankRelationship",
        "Status": "status",
    });
});
/** @internal */
export const BankRelationshipsVerifyMicroDepositsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    bankRelationship: components.BankRelationship$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        bankRelationship: "BankRelationship",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsVerifyMicroDepositsResponse$;
(function (BankRelationshipsVerifyMicroDepositsResponse$) {
    /** @deprecated use `BankRelationshipsVerifyMicroDepositsResponse$inboundSchema` instead. */
    BankRelationshipsVerifyMicroDepositsResponse$.inboundSchema = BankRelationshipsVerifyMicroDepositsResponse$inboundSchema;
    /** @deprecated use `BankRelationshipsVerifyMicroDepositsResponse$outboundSchema` instead. */
    BankRelationshipsVerifyMicroDepositsResponse$.outboundSchema = BankRelationshipsVerifyMicroDepositsResponse$outboundSchema;
})(BankRelationshipsVerifyMicroDepositsResponse$ || (BankRelationshipsVerifyMicroDepositsResponse$ = {}));
export function bankRelationshipsVerifyMicroDepositsResponseToJSON(bankRelationshipsVerifyMicroDepositsResponse) {
    return JSON.stringify(BankRelationshipsVerifyMicroDepositsResponse$outboundSchema.parse(bankRelationshipsVerifyMicroDepositsResponse));
}
export function bankRelationshipsVerifyMicroDepositsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsVerifyMicroDepositsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsVerifyMicroDepositsResponse' from JSON`);
}
//# sourceMappingURL=bankrelationshipsverifymicrodeposits.js.map