/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CashJournalsCancelCashJournalRequest$inboundSchema = z.object({
    cashJournal_id: z.string(),
    CancelCashJournalRequestCreate: components.CancelCashJournalRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "cashJournal_id": "cashJournalId",
        "CancelCashJournalRequestCreate": "cancelCashJournalRequestCreate",
    });
});
/** @internal */
export const CashJournalsCancelCashJournalRequest$outboundSchema = z.object({
    cashJournalId: z.string(),
    cancelCashJournalRequestCreate: components.CancelCashJournalRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        cashJournalId: "cashJournal_id",
        cancelCashJournalRequestCreate: "CancelCashJournalRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsCancelCashJournalRequest$;
(function (CashJournalsCancelCashJournalRequest$) {
    /** @deprecated use `CashJournalsCancelCashJournalRequest$inboundSchema` instead. */
    CashJournalsCancelCashJournalRequest$.inboundSchema = CashJournalsCancelCashJournalRequest$inboundSchema;
    /** @deprecated use `CashJournalsCancelCashJournalRequest$outboundSchema` instead. */
    CashJournalsCancelCashJournalRequest$.outboundSchema = CashJournalsCancelCashJournalRequest$outboundSchema;
})(CashJournalsCancelCashJournalRequest$ || (CashJournalsCancelCashJournalRequest$ = {}));
export function cashJournalsCancelCashJournalRequestToJSON(cashJournalsCancelCashJournalRequest) {
    return JSON.stringify(CashJournalsCancelCashJournalRequest$outboundSchema.parse(cashJournalsCancelCashJournalRequest));
}
export function cashJournalsCancelCashJournalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsCancelCashJournalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsCancelCashJournalRequest' from JSON`);
}
/** @internal */
export const CashJournalsCancelCashJournalResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    CashJournal: components.CashJournal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "CashJournal": "cashJournal",
        "Status": "status",
    });
});
/** @internal */
export const CashJournalsCancelCashJournalResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    cashJournal: components.CashJournal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        cashJournal: "CashJournal",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsCancelCashJournalResponse$;
(function (CashJournalsCancelCashJournalResponse$) {
    /** @deprecated use `CashJournalsCancelCashJournalResponse$inboundSchema` instead. */
    CashJournalsCancelCashJournalResponse$.inboundSchema = CashJournalsCancelCashJournalResponse$inboundSchema;
    /** @deprecated use `CashJournalsCancelCashJournalResponse$outboundSchema` instead. */
    CashJournalsCancelCashJournalResponse$.outboundSchema = CashJournalsCancelCashJournalResponse$outboundSchema;
})(CashJournalsCancelCashJournalResponse$ || (CashJournalsCancelCashJournalResponse$ = {}));
export function cashJournalsCancelCashJournalResponseToJSON(cashJournalsCancelCashJournalResponse) {
    return JSON.stringify(CashJournalsCancelCashJournalResponse$outboundSchema.parse(cashJournalsCancelCashJournalResponse));
}
export function cashJournalsCancelCashJournalResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsCancelCashJournalResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsCancelCashJournalResponse' from JSON`);
}
//# sourceMappingURL=cashjournalscancelcashjournal.js.map