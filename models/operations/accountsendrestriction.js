/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsEndRestrictionRequest$inboundSchema = z.object({
    account_id: z.string(),
    restriction_id: z.string(),
    EndRestrictionRequestCreate: components.EndRestrictionRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "restriction_id": "restrictionId",
        "EndRestrictionRequestCreate": "endRestrictionRequestCreate",
    });
});
/** @internal */
export const AccountsEndRestrictionRequest$outboundSchema = z.object({
    accountId: z.string(),
    restrictionId: z.string(),
    endRestrictionRequestCreate: components.EndRestrictionRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        restrictionId: "restriction_id",
        endRestrictionRequestCreate: "EndRestrictionRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEndRestrictionRequest$;
(function (AccountsEndRestrictionRequest$) {
    /** @deprecated use `AccountsEndRestrictionRequest$inboundSchema` instead. */
    AccountsEndRestrictionRequest$.inboundSchema = AccountsEndRestrictionRequest$inboundSchema;
    /** @deprecated use `AccountsEndRestrictionRequest$outboundSchema` instead. */
    AccountsEndRestrictionRequest$.outboundSchema = AccountsEndRestrictionRequest$outboundSchema;
})(AccountsEndRestrictionRequest$ || (AccountsEndRestrictionRequest$ = {}));
export function accountsEndRestrictionRequestToJSON(accountsEndRestrictionRequest) {
    return JSON.stringify(AccountsEndRestrictionRequest$outboundSchema.parse(accountsEndRestrictionRequest));
}
export function accountsEndRestrictionRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEndRestrictionRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEndRestrictionRequest' from JSON`);
}
/** @internal */
export const AccountsEndRestrictionResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Status": "status",
    });
});
/** @internal */
export const AccountsEndRestrictionResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEndRestrictionResponse$;
(function (AccountsEndRestrictionResponse$) {
    /** @deprecated use `AccountsEndRestrictionResponse$inboundSchema` instead. */
    AccountsEndRestrictionResponse$.inboundSchema = AccountsEndRestrictionResponse$inboundSchema;
    /** @deprecated use `AccountsEndRestrictionResponse$outboundSchema` instead. */
    AccountsEndRestrictionResponse$.outboundSchema = AccountsEndRestrictionResponse$outboundSchema;
})(AccountsEndRestrictionResponse$ || (AccountsEndRestrictionResponse$ = {}));
export function accountsEndRestrictionResponseToJSON(accountsEndRestrictionResponse) {
    return JSON.stringify(AccountsEndRestrictionResponse$outboundSchema.parse(accountsEndRestrictionResponse));
}
export function accountsEndRestrictionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEndRestrictionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEndRestrictionResponse' from JSON`);
}
//# sourceMappingURL=accountsendrestriction.js.map