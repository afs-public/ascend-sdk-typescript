/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsCloseAccountRequest$inboundSchema = z.object({
    account_id: z.string(),
    CloseAccountRequestCreate: components.CloseAccountRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "CloseAccountRequestCreate": "closeAccountRequestCreate",
    });
});
/** @internal */
export const AccountsCloseAccountRequest$outboundSchema = z.object({
    accountId: z.string(),
    closeAccountRequestCreate: components.CloseAccountRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        closeAccountRequestCreate: "CloseAccountRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsCloseAccountRequest$;
(function (AccountsCloseAccountRequest$) {
    /** @deprecated use `AccountsCloseAccountRequest$inboundSchema` instead. */
    AccountsCloseAccountRequest$.inboundSchema = AccountsCloseAccountRequest$inboundSchema;
    /** @deprecated use `AccountsCloseAccountRequest$outboundSchema` instead. */
    AccountsCloseAccountRequest$.outboundSchema = AccountsCloseAccountRequest$outboundSchema;
})(AccountsCloseAccountRequest$ || (AccountsCloseAccountRequest$ = {}));
export function accountsCloseAccountRequestToJSON(accountsCloseAccountRequest) {
    return JSON.stringify(AccountsCloseAccountRequest$outboundSchema.parse(accountsCloseAccountRequest));
}
export function accountsCloseAccountRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsCloseAccountRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsCloseAccountRequest' from JSON`);
}
/** @internal */
export const AccountsCloseAccountResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Account: components.Account$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Account": "account",
        "Status": "status",
    });
});
/** @internal */
export const AccountsCloseAccountResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    account: components.Account$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        account: "Account",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsCloseAccountResponse$;
(function (AccountsCloseAccountResponse$) {
    /** @deprecated use `AccountsCloseAccountResponse$inboundSchema` instead. */
    AccountsCloseAccountResponse$.inboundSchema = AccountsCloseAccountResponse$inboundSchema;
    /** @deprecated use `AccountsCloseAccountResponse$outboundSchema` instead. */
    AccountsCloseAccountResponse$.outboundSchema = AccountsCloseAccountResponse$outboundSchema;
})(AccountsCloseAccountResponse$ || (AccountsCloseAccountResponse$ = {}));
export function accountsCloseAccountResponseToJSON(accountsCloseAccountResponse) {
    return JSON.stringify(AccountsCloseAccountResponse$outboundSchema.parse(accountsCloseAccountResponse));
}
export function accountsCloseAccountResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsCloseAccountResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsCloseAccountResponse' from JSON`);
}
//# sourceMappingURL=accountscloseaccount.js.map