/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const SnapshotsListSnapshotsRequest$inboundSchema = z.object({
    filter: z.string().optional(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const SnapshotsListSnapshotsRequest$outboundSchema = z.object({
    filter: z.string().optional(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SnapshotsListSnapshotsRequest$;
(function (SnapshotsListSnapshotsRequest$) {
    /** @deprecated use `SnapshotsListSnapshotsRequest$inboundSchema` instead. */
    SnapshotsListSnapshotsRequest$.inboundSchema = SnapshotsListSnapshotsRequest$inboundSchema;
    /** @deprecated use `SnapshotsListSnapshotsRequest$outboundSchema` instead. */
    SnapshotsListSnapshotsRequest$.outboundSchema = SnapshotsListSnapshotsRequest$outboundSchema;
})(SnapshotsListSnapshotsRequest$ || (SnapshotsListSnapshotsRequest$ = {}));
export function snapshotsListSnapshotsRequestToJSON(snapshotsListSnapshotsRequest) {
    return JSON.stringify(SnapshotsListSnapshotsRequest$outboundSchema.parse(snapshotsListSnapshotsRequest));
}
export function snapshotsListSnapshotsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SnapshotsListSnapshotsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SnapshotsListSnapshotsRequest' from JSON`);
}
/** @internal */
export const SnapshotsListSnapshotsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListSnapshotsResponse: components.ListSnapshotsResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListSnapshotsResponse": "listSnapshotsResponse",
        "Status": "status",
    });
});
/** @internal */
export const SnapshotsListSnapshotsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listSnapshotsResponse: components.ListSnapshotsResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listSnapshotsResponse: "ListSnapshotsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SnapshotsListSnapshotsResponse$;
(function (SnapshotsListSnapshotsResponse$) {
    /** @deprecated use `SnapshotsListSnapshotsResponse$inboundSchema` instead. */
    SnapshotsListSnapshotsResponse$.inboundSchema = SnapshotsListSnapshotsResponse$inboundSchema;
    /** @deprecated use `SnapshotsListSnapshotsResponse$outboundSchema` instead. */
    SnapshotsListSnapshotsResponse$.outboundSchema = SnapshotsListSnapshotsResponse$outboundSchema;
})(SnapshotsListSnapshotsResponse$ || (SnapshotsListSnapshotsResponse$ = {}));
export function snapshotsListSnapshotsResponseToJSON(snapshotsListSnapshotsResponse) {
    return JSON.stringify(SnapshotsListSnapshotsResponse$outboundSchema.parse(snapshotsListSnapshotsResponse));
}
export function snapshotsListSnapshotsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SnapshotsListSnapshotsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SnapshotsListSnapshotsResponse' from JSON`);
}
//# sourceMappingURL=snapshotslistsnapshots.js.map