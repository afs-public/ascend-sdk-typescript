/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const IctDepositsForceApproveIctDepositRequest$inboundSchema = z.object({
    account_id: z.string(),
    ictDeposit_id: z.string(),
    ForceApproveIctDepositRequestCreate: components.ForceApproveIctDepositRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "ictDeposit_id": "ictDepositId",
        "ForceApproveIctDepositRequestCreate": "forceApproveIctDepositRequestCreate",
    });
});
/** @internal */
export const IctDepositsForceApproveIctDepositRequest$outboundSchema = z.object({
    accountId: z.string(),
    ictDepositId: z.string(),
    forceApproveIctDepositRequestCreate: components.ForceApproveIctDepositRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        ictDepositId: "ictDeposit_id",
        forceApproveIctDepositRequestCreate: "ForceApproveIctDepositRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IctDepositsForceApproveIctDepositRequest$;
(function (IctDepositsForceApproveIctDepositRequest$) {
    /** @deprecated use `IctDepositsForceApproveIctDepositRequest$inboundSchema` instead. */
    IctDepositsForceApproveIctDepositRequest$.inboundSchema = IctDepositsForceApproveIctDepositRequest$inboundSchema;
    /** @deprecated use `IctDepositsForceApproveIctDepositRequest$outboundSchema` instead. */
    IctDepositsForceApproveIctDepositRequest$.outboundSchema = IctDepositsForceApproveIctDepositRequest$outboundSchema;
})(IctDepositsForceApproveIctDepositRequest$ || (IctDepositsForceApproveIctDepositRequest$ = {}));
export function ictDepositsForceApproveIctDepositRequestToJSON(ictDepositsForceApproveIctDepositRequest) {
    return JSON.stringify(IctDepositsForceApproveIctDepositRequest$outboundSchema.parse(ictDepositsForceApproveIctDepositRequest));
}
export function ictDepositsForceApproveIctDepositRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IctDepositsForceApproveIctDepositRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IctDepositsForceApproveIctDepositRequest' from JSON`);
}
/** @internal */
export const IctDepositsForceApproveIctDepositResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    IctDeposit: components.IctDeposit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "IctDeposit": "ictDeposit",
        "Status": "status",
    });
});
/** @internal */
export const IctDepositsForceApproveIctDepositResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    ictDeposit: components.IctDeposit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        ictDeposit: "IctDeposit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IctDepositsForceApproveIctDepositResponse$;
(function (IctDepositsForceApproveIctDepositResponse$) {
    /** @deprecated use `IctDepositsForceApproveIctDepositResponse$inboundSchema` instead. */
    IctDepositsForceApproveIctDepositResponse$.inboundSchema = IctDepositsForceApproveIctDepositResponse$inboundSchema;
    /** @deprecated use `IctDepositsForceApproveIctDepositResponse$outboundSchema` instead. */
    IctDepositsForceApproveIctDepositResponse$.outboundSchema = IctDepositsForceApproveIctDepositResponse$outboundSchema;
})(IctDepositsForceApproveIctDepositResponse$ || (IctDepositsForceApproveIctDepositResponse$ = {}));
export function ictDepositsForceApproveIctDepositResponseToJSON(ictDepositsForceApproveIctDepositResponse) {
    return JSON.stringify(IctDepositsForceApproveIctDepositResponse$outboundSchema.parse(ictDepositsForceApproveIctDepositResponse));
}
export function ictDepositsForceApproveIctDepositResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IctDepositsForceApproveIctDepositResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IctDepositsForceApproveIctDepositResponse' from JSON`);
}
//# sourceMappingURL=ictdepositsforceapproveictdeposit.js.map