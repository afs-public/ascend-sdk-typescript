/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsEnrollAccountRequest$inboundSchema = z.object({
    account_id: z.string(),
    EnrollAccountRequestCreate: components.EnrollAccountRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "EnrollAccountRequestCreate": "enrollAccountRequestCreate",
    });
});
/** @internal */
export const AccountsEnrollAccountRequest$outboundSchema = z.object({
    accountId: z.string(),
    enrollAccountRequestCreate: components.EnrollAccountRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        enrollAccountRequestCreate: "EnrollAccountRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEnrollAccountRequest$;
(function (AccountsEnrollAccountRequest$) {
    /** @deprecated use `AccountsEnrollAccountRequest$inboundSchema` instead. */
    AccountsEnrollAccountRequest$.inboundSchema = AccountsEnrollAccountRequest$inboundSchema;
    /** @deprecated use `AccountsEnrollAccountRequest$outboundSchema` instead. */
    AccountsEnrollAccountRequest$.outboundSchema = AccountsEnrollAccountRequest$outboundSchema;
})(AccountsEnrollAccountRequest$ || (AccountsEnrollAccountRequest$ = {}));
export function accountsEnrollAccountRequestToJSON(accountsEnrollAccountRequest) {
    return JSON.stringify(AccountsEnrollAccountRequest$outboundSchema.parse(accountsEnrollAccountRequest));
}
export function accountsEnrollAccountRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEnrollAccountRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEnrollAccountRequest' from JSON`);
}
/** @internal */
export const AccountsEnrollAccountResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    EnrollAccountResponse: components.EnrollAccountResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "EnrollAccountResponse": "enrollAccountResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsEnrollAccountResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    enrollAccountResponse: components.EnrollAccountResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        enrollAccountResponse: "EnrollAccountResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEnrollAccountResponse$;
(function (AccountsEnrollAccountResponse$) {
    /** @deprecated use `AccountsEnrollAccountResponse$inboundSchema` instead. */
    AccountsEnrollAccountResponse$.inboundSchema = AccountsEnrollAccountResponse$inboundSchema;
    /** @deprecated use `AccountsEnrollAccountResponse$outboundSchema` instead. */
    AccountsEnrollAccountResponse$.outboundSchema = AccountsEnrollAccountResponse$outboundSchema;
})(AccountsEnrollAccountResponse$ || (AccountsEnrollAccountResponse$ = {}));
export function accountsEnrollAccountResponseToJSON(accountsEnrollAccountResponse) {
    return JSON.stringify(AccountsEnrollAccountResponse$outboundSchema.parse(accountsEnrollAccountResponse));
}
export function accountsEnrollAccountResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEnrollAccountResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEnrollAccountResponse' from JSON`);
}
//# sourceMappingURL=accountsenrollaccount.js.map