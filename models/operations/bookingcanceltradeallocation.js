/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BookingCancelTradeAllocationRequest$inboundSchema = z.object({
    account_id: z.string(),
    tradeAllocation_id: z.string(),
    CancelTradeAllocationRequestCreate: components.CancelTradeAllocationRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "tradeAllocation_id": "tradeAllocationId",
        "CancelTradeAllocationRequestCreate": "cancelTradeAllocationRequestCreate",
    });
});
/** @internal */
export const BookingCancelTradeAllocationRequest$outboundSchema = z.object({
    accountId: z.string(),
    tradeAllocationId: z.string(),
    cancelTradeAllocationRequestCreate: components.CancelTradeAllocationRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        tradeAllocationId: "tradeAllocation_id",
        cancelTradeAllocationRequestCreate: "CancelTradeAllocationRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BookingCancelTradeAllocationRequest$;
(function (BookingCancelTradeAllocationRequest$) {
    /** @deprecated use `BookingCancelTradeAllocationRequest$inboundSchema` instead. */
    BookingCancelTradeAllocationRequest$.inboundSchema = BookingCancelTradeAllocationRequest$inboundSchema;
    /** @deprecated use `BookingCancelTradeAllocationRequest$outboundSchema` instead. */
    BookingCancelTradeAllocationRequest$.outboundSchema = BookingCancelTradeAllocationRequest$outboundSchema;
})(BookingCancelTradeAllocationRequest$ || (BookingCancelTradeAllocationRequest$ = {}));
export function bookingCancelTradeAllocationRequestToJSON(bookingCancelTradeAllocationRequest) {
    return JSON.stringify(BookingCancelTradeAllocationRequest$outboundSchema.parse(bookingCancelTradeAllocationRequest));
}
export function bookingCancelTradeAllocationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BookingCancelTradeAllocationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BookingCancelTradeAllocationRequest' from JSON`);
}
/** @internal */
export const BookingCancelTradeAllocationResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    CancelTradeAllocationResponse: components
        .CancelTradeAllocationResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "CancelTradeAllocationResponse": "cancelTradeAllocationResponse",
        "Status": "status",
    });
});
/** @internal */
export const BookingCancelTradeAllocationResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    cancelTradeAllocationResponse: components
        .CancelTradeAllocationResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        cancelTradeAllocationResponse: "CancelTradeAllocationResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BookingCancelTradeAllocationResponse$;
(function (BookingCancelTradeAllocationResponse$) {
    /** @deprecated use `BookingCancelTradeAllocationResponse$inboundSchema` instead. */
    BookingCancelTradeAllocationResponse$.inboundSchema = BookingCancelTradeAllocationResponse$inboundSchema;
    /** @deprecated use `BookingCancelTradeAllocationResponse$outboundSchema` instead. */
    BookingCancelTradeAllocationResponse$.outboundSchema = BookingCancelTradeAllocationResponse$outboundSchema;
})(BookingCancelTradeAllocationResponse$ || (BookingCancelTradeAllocationResponse$ = {}));
export function bookingCancelTradeAllocationResponseToJSON(bookingCancelTradeAllocationResponse) {
    return JSON.stringify(BookingCancelTradeAllocationResponse$outboundSchema.parse(bookingCancelTradeAllocationResponse));
}
export function bookingCancelTradeAllocationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BookingCancelTradeAllocationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BookingCancelTradeAllocationResponse' from JSON`);
}
//# sourceMappingURL=bookingcanceltradeallocation.js.map