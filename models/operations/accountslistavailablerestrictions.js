/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsListAvailableRestrictionsRequest$inboundSchema = z.object({
    account_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
    });
});
/** @internal */
export const AccountsListAvailableRestrictionsRequest$outboundSchema = z.object({
    accountId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListAvailableRestrictionsRequest$;
(function (AccountsListAvailableRestrictionsRequest$) {
    /** @deprecated use `AccountsListAvailableRestrictionsRequest$inboundSchema` instead. */
    AccountsListAvailableRestrictionsRequest$.inboundSchema = AccountsListAvailableRestrictionsRequest$inboundSchema;
    /** @deprecated use `AccountsListAvailableRestrictionsRequest$outboundSchema` instead. */
    AccountsListAvailableRestrictionsRequest$.outboundSchema = AccountsListAvailableRestrictionsRequest$outboundSchema;
})(AccountsListAvailableRestrictionsRequest$ || (AccountsListAvailableRestrictionsRequest$ = {}));
export function accountsListAvailableRestrictionsRequestToJSON(accountsListAvailableRestrictionsRequest) {
    return JSON.stringify(AccountsListAvailableRestrictionsRequest$outboundSchema.parse(accountsListAvailableRestrictionsRequest));
}
export function accountsListAvailableRestrictionsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListAvailableRestrictionsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListAvailableRestrictionsRequest' from JSON`);
}
/** @internal */
export const AccountsListAvailableRestrictionsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListAvailableRestrictionsResponse: components
        .ListAvailableRestrictionsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListAvailableRestrictionsResponse": "listAvailableRestrictionsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsListAvailableRestrictionsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listAvailableRestrictionsResponse: components
        .ListAvailableRestrictionsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listAvailableRestrictionsResponse: "ListAvailableRestrictionsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListAvailableRestrictionsResponse$;
(function (AccountsListAvailableRestrictionsResponse$) {
    /** @deprecated use `AccountsListAvailableRestrictionsResponse$inboundSchema` instead. */
    AccountsListAvailableRestrictionsResponse$.inboundSchema = AccountsListAvailableRestrictionsResponse$inboundSchema;
    /** @deprecated use `AccountsListAvailableRestrictionsResponse$outboundSchema` instead. */
    AccountsListAvailableRestrictionsResponse$.outboundSchema = AccountsListAvailableRestrictionsResponse$outboundSchema;
})(AccountsListAvailableRestrictionsResponse$ || (AccountsListAvailableRestrictionsResponse$ = {}));
export function accountsListAvailableRestrictionsResponseToJSON(accountsListAvailableRestrictionsResponse) {
    return JSON.stringify(AccountsListAvailableRestrictionsResponse$outboundSchema.parse(accountsListAvailableRestrictionsResponse));
}
export function accountsListAvailableRestrictionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListAvailableRestrictionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListAvailableRestrictionsResponse' from JSON`);
}
//# sourceMappingURL=accountslistavailablerestrictions.js.map