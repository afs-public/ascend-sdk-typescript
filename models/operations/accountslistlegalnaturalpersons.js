/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsListLegalNaturalPersonsRequest$inboundSchema = z.object({
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    order_by: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
        "order_by": "orderBy",
    });
});
/** @internal */
export const AccountsListLegalNaturalPersonsRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    orderBy: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
        orderBy: "order_by",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListLegalNaturalPersonsRequest$;
(function (AccountsListLegalNaturalPersonsRequest$) {
    /** @deprecated use `AccountsListLegalNaturalPersonsRequest$inboundSchema` instead. */
    AccountsListLegalNaturalPersonsRequest$.inboundSchema = AccountsListLegalNaturalPersonsRequest$inboundSchema;
    /** @deprecated use `AccountsListLegalNaturalPersonsRequest$outboundSchema` instead. */
    AccountsListLegalNaturalPersonsRequest$.outboundSchema = AccountsListLegalNaturalPersonsRequest$outboundSchema;
})(AccountsListLegalNaturalPersonsRequest$ || (AccountsListLegalNaturalPersonsRequest$ = {}));
export function accountsListLegalNaturalPersonsRequestToJSON(accountsListLegalNaturalPersonsRequest) {
    return JSON.stringify(AccountsListLegalNaturalPersonsRequest$outboundSchema.parse(accountsListLegalNaturalPersonsRequest));
}
export function accountsListLegalNaturalPersonsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListLegalNaturalPersonsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListLegalNaturalPersonsRequest' from JSON`);
}
/** @internal */
export const AccountsListLegalNaturalPersonsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListLegalNaturalPersonsResponse: components
        .ListLegalNaturalPersonsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListLegalNaturalPersonsResponse": "listLegalNaturalPersonsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsListLegalNaturalPersonsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listLegalNaturalPersonsResponse: components
        .ListLegalNaturalPersonsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listLegalNaturalPersonsResponse: "ListLegalNaturalPersonsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListLegalNaturalPersonsResponse$;
(function (AccountsListLegalNaturalPersonsResponse$) {
    /** @deprecated use `AccountsListLegalNaturalPersonsResponse$inboundSchema` instead. */
    AccountsListLegalNaturalPersonsResponse$.inboundSchema = AccountsListLegalNaturalPersonsResponse$inboundSchema;
    /** @deprecated use `AccountsListLegalNaturalPersonsResponse$outboundSchema` instead. */
    AccountsListLegalNaturalPersonsResponse$.outboundSchema = AccountsListLegalNaturalPersonsResponse$outboundSchema;
})(AccountsListLegalNaturalPersonsResponse$ || (AccountsListLegalNaturalPersonsResponse$ = {}));
export function accountsListLegalNaturalPersonsResponseToJSON(accountsListLegalNaturalPersonsResponse) {
    return JSON.stringify(AccountsListLegalNaturalPersonsResponse$outboundSchema.parse(accountsListLegalNaturalPersonsResponse));
}
export function accountsListLegalNaturalPersonsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListLegalNaturalPersonsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListLegalNaturalPersonsResponse' from JSON`);
}
//# sourceMappingURL=accountslistlegalnaturalpersons.js.map