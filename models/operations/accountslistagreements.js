/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsListAgreementsRequest$inboundSchema = z.object({
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const AccountsListAgreementsRequest$outboundSchema = z.object({
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListAgreementsRequest$;
(function (AccountsListAgreementsRequest$) {
    /** @deprecated use `AccountsListAgreementsRequest$inboundSchema` instead. */
    AccountsListAgreementsRequest$.inboundSchema = AccountsListAgreementsRequest$inboundSchema;
    /** @deprecated use `AccountsListAgreementsRequest$outboundSchema` instead. */
    AccountsListAgreementsRequest$.outboundSchema = AccountsListAgreementsRequest$outboundSchema;
})(AccountsListAgreementsRequest$ || (AccountsListAgreementsRequest$ = {}));
export function accountsListAgreementsRequestToJSON(accountsListAgreementsRequest) {
    return JSON.stringify(AccountsListAgreementsRequest$outboundSchema.parse(accountsListAgreementsRequest));
}
export function accountsListAgreementsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListAgreementsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListAgreementsRequest' from JSON`);
}
/** @internal */
export const AccountsListAgreementsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListAgreementsResponse: components.ListAgreementsResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListAgreementsResponse": "listAgreementsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsListAgreementsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listAgreementsResponse: components.ListAgreementsResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listAgreementsResponse: "ListAgreementsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListAgreementsResponse$;
(function (AccountsListAgreementsResponse$) {
    /** @deprecated use `AccountsListAgreementsResponse$inboundSchema` instead. */
    AccountsListAgreementsResponse$.inboundSchema = AccountsListAgreementsResponse$inboundSchema;
    /** @deprecated use `AccountsListAgreementsResponse$outboundSchema` instead. */
    AccountsListAgreementsResponse$.outboundSchema = AccountsListAgreementsResponse$outboundSchema;
})(AccountsListAgreementsResponse$ || (AccountsListAgreementsResponse$ = {}));
export function accountsListAgreementsResponseToJSON(accountsListAgreementsResponse) {
    return JSON.stringify(AccountsListAgreementsResponse$outboundSchema.parse(accountsListAgreementsResponse));
}
export function accountsListAgreementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListAgreementsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListAgreementsResponse' from JSON`);
}
//# sourceMappingURL=accountslistagreements.js.map