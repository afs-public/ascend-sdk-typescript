/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsCreateTrustedContactRequest$inboundSchema = z.object({
    account_id: z.string(),
    TrustedContactCreate: components.TrustedContactCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "TrustedContactCreate": "trustedContactCreate",
    });
});
/** @internal */
export const AccountsCreateTrustedContactRequest$outboundSchema = z.object({
    accountId: z.string(),
    trustedContactCreate: components.TrustedContactCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        trustedContactCreate: "TrustedContactCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsCreateTrustedContactRequest$;
(function (AccountsCreateTrustedContactRequest$) {
    /** @deprecated use `AccountsCreateTrustedContactRequest$inboundSchema` instead. */
    AccountsCreateTrustedContactRequest$.inboundSchema = AccountsCreateTrustedContactRequest$inboundSchema;
    /** @deprecated use `AccountsCreateTrustedContactRequest$outboundSchema` instead. */
    AccountsCreateTrustedContactRequest$.outboundSchema = AccountsCreateTrustedContactRequest$outboundSchema;
})(AccountsCreateTrustedContactRequest$ || (AccountsCreateTrustedContactRequest$ = {}));
export function accountsCreateTrustedContactRequestToJSON(accountsCreateTrustedContactRequest) {
    return JSON.stringify(AccountsCreateTrustedContactRequest$outboundSchema.parse(accountsCreateTrustedContactRequest));
}
export function accountsCreateTrustedContactRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsCreateTrustedContactRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsCreateTrustedContactRequest' from JSON`);
}
/** @internal */
export const AccountsCreateTrustedContactResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    TrustedContact: components.TrustedContact$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "TrustedContact": "trustedContact",
        "Status": "status",
    });
});
/** @internal */
export const AccountsCreateTrustedContactResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    trustedContact: components.TrustedContact$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        trustedContact: "TrustedContact",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsCreateTrustedContactResponse$;
(function (AccountsCreateTrustedContactResponse$) {
    /** @deprecated use `AccountsCreateTrustedContactResponse$inboundSchema` instead. */
    AccountsCreateTrustedContactResponse$.inboundSchema = AccountsCreateTrustedContactResponse$inboundSchema;
    /** @deprecated use `AccountsCreateTrustedContactResponse$outboundSchema` instead. */
    AccountsCreateTrustedContactResponse$.outboundSchema = AccountsCreateTrustedContactResponse$outboundSchema;
})(AccountsCreateTrustedContactResponse$ || (AccountsCreateTrustedContactResponse$ = {}));
export function accountsCreateTrustedContactResponseToJSON(accountsCreateTrustedContactResponse) {
    return JSON.stringify(AccountsCreateTrustedContactResponse$outboundSchema.parse(accountsCreateTrustedContactResponse));
}
export function accountsCreateTrustedContactResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsCreateTrustedContactResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsCreateTrustedContactResponse' from JSON`);
}
//# sourceMappingURL=accountscreatetrustedcontact.js.map