/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BankRelationshipsReissueMicroDepositsRequest$inboundSchema = z.object({
    account_id: z.string(),
    bankRelationship_id: z.string(),
    ReissueMicroDepositsRequestCreate: components.ReissueMicroDepositsRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "bankRelationship_id": "bankRelationshipId",
        "ReissueMicroDepositsRequestCreate": "reissueMicroDepositsRequestCreate",
    });
});
/** @internal */
export const BankRelationshipsReissueMicroDepositsRequest$outboundSchema = z.object({
    accountId: z.string(),
    bankRelationshipId: z.string(),
    reissueMicroDepositsRequestCreate: components.ReissueMicroDepositsRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        bankRelationshipId: "bankRelationship_id",
        reissueMicroDepositsRequestCreate: "ReissueMicroDepositsRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsReissueMicroDepositsRequest$;
(function (BankRelationshipsReissueMicroDepositsRequest$) {
    /** @deprecated use `BankRelationshipsReissueMicroDepositsRequest$inboundSchema` instead. */
    BankRelationshipsReissueMicroDepositsRequest$.inboundSchema = BankRelationshipsReissueMicroDepositsRequest$inboundSchema;
    /** @deprecated use `BankRelationshipsReissueMicroDepositsRequest$outboundSchema` instead. */
    BankRelationshipsReissueMicroDepositsRequest$.outboundSchema = BankRelationshipsReissueMicroDepositsRequest$outboundSchema;
})(BankRelationshipsReissueMicroDepositsRequest$ || (BankRelationshipsReissueMicroDepositsRequest$ = {}));
export function bankRelationshipsReissueMicroDepositsRequestToJSON(bankRelationshipsReissueMicroDepositsRequest) {
    return JSON.stringify(BankRelationshipsReissueMicroDepositsRequest$outboundSchema.parse(bankRelationshipsReissueMicroDepositsRequest));
}
export function bankRelationshipsReissueMicroDepositsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsReissueMicroDepositsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsReissueMicroDepositsRequest' from JSON`);
}
/** @internal */
export const BankRelationshipsReissueMicroDepositsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BankRelationship: components.BankRelationship$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "BankRelationship": "bankRelationship",
        "Status": "status",
    });
});
/** @internal */
export const BankRelationshipsReissueMicroDepositsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    bankRelationship: components.BankRelationship$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        bankRelationship: "BankRelationship",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsReissueMicroDepositsResponse$;
(function (BankRelationshipsReissueMicroDepositsResponse$) {
    /** @deprecated use `BankRelationshipsReissueMicroDepositsResponse$inboundSchema` instead. */
    BankRelationshipsReissueMicroDepositsResponse$.inboundSchema = BankRelationshipsReissueMicroDepositsResponse$inboundSchema;
    /** @deprecated use `BankRelationshipsReissueMicroDepositsResponse$outboundSchema` instead. */
    BankRelationshipsReissueMicroDepositsResponse$.outboundSchema = BankRelationshipsReissueMicroDepositsResponse$outboundSchema;
})(BankRelationshipsReissueMicroDepositsResponse$ || (BankRelationshipsReissueMicroDepositsResponse$ = {}));
export function bankRelationshipsReissueMicroDepositsResponseToJSON(bankRelationshipsReissueMicroDepositsResponse) {
    return JSON.stringify(BankRelationshipsReissueMicroDepositsResponse$outboundSchema.parse(bankRelationshipsReissueMicroDepositsResponse));
}
export function bankRelationshipsReissueMicroDepositsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsReissueMicroDepositsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsReissueMicroDepositsResponse' from JSON`);
}
//# sourceMappingURL=bankrelationshipsreissuemicrodeposits.js.map