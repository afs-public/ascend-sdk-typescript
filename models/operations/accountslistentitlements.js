/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsListEntitlementsRequest$inboundSchema = z.object({
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const AccountsListEntitlementsRequest$outboundSchema = z.object({
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListEntitlementsRequest$;
(function (AccountsListEntitlementsRequest$) {
    /** @deprecated use `AccountsListEntitlementsRequest$inboundSchema` instead. */
    AccountsListEntitlementsRequest$.inboundSchema = AccountsListEntitlementsRequest$inboundSchema;
    /** @deprecated use `AccountsListEntitlementsRequest$outboundSchema` instead. */
    AccountsListEntitlementsRequest$.outboundSchema = AccountsListEntitlementsRequest$outboundSchema;
})(AccountsListEntitlementsRequest$ || (AccountsListEntitlementsRequest$ = {}));
export function accountsListEntitlementsRequestToJSON(accountsListEntitlementsRequest) {
    return JSON.stringify(AccountsListEntitlementsRequest$outboundSchema.parse(accountsListEntitlementsRequest));
}
export function accountsListEntitlementsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListEntitlementsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListEntitlementsRequest' from JSON`);
}
/** @internal */
export const AccountsListEntitlementsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListEntitlementsResponse: components.ListEntitlementsResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListEntitlementsResponse": "listEntitlementsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsListEntitlementsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listEntitlementsResponse: components.ListEntitlementsResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listEntitlementsResponse: "ListEntitlementsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListEntitlementsResponse$;
(function (AccountsListEntitlementsResponse$) {
    /** @deprecated use `AccountsListEntitlementsResponse$inboundSchema` instead. */
    AccountsListEntitlementsResponse$.inboundSchema = AccountsListEntitlementsResponse$inboundSchema;
    /** @deprecated use `AccountsListEntitlementsResponse$outboundSchema` instead. */
    AccountsListEntitlementsResponse$.outboundSchema = AccountsListEntitlementsResponse$outboundSchema;
})(AccountsListEntitlementsResponse$ || (AccountsListEntitlementsResponse$ = {}));
export function accountsListEntitlementsResponseToJSON(accountsListEntitlementsResponse) {
    return JSON.stringify(AccountsListEntitlementsResponse$outboundSchema.parse(accountsListEntitlementsResponse));
}
export function accountsListEntitlementsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListEntitlementsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListEntitlementsResponse' from JSON`);
}
//# sourceMappingURL=accountslistentitlements.js.map