/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const SubscriberDeletePushSubscriptionRequest$inboundSchema = z.object({
    subscription_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "subscription_id": "subscriptionId",
    });
});
/** @internal */
export const SubscriberDeletePushSubscriptionRequest$outboundSchema = z.object({
    subscriptionId: z.string(),
}).transform((v) => {
    return remap$(v, {
        subscriptionId: "subscription_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberDeletePushSubscriptionRequest$;
(function (SubscriberDeletePushSubscriptionRequest$) {
    /** @deprecated use `SubscriberDeletePushSubscriptionRequest$inboundSchema` instead. */
    SubscriberDeletePushSubscriptionRequest$.inboundSchema = SubscriberDeletePushSubscriptionRequest$inboundSchema;
    /** @deprecated use `SubscriberDeletePushSubscriptionRequest$outboundSchema` instead. */
    SubscriberDeletePushSubscriptionRequest$.outboundSchema = SubscriberDeletePushSubscriptionRequest$outboundSchema;
})(SubscriberDeletePushSubscriptionRequest$ || (SubscriberDeletePushSubscriptionRequest$ = {}));
export function subscriberDeletePushSubscriptionRequestToJSON(subscriberDeletePushSubscriptionRequest) {
    return JSON.stringify(SubscriberDeletePushSubscriptionRequest$outboundSchema.parse(subscriberDeletePushSubscriptionRequest));
}
export function subscriberDeletePushSubscriptionRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberDeletePushSubscriptionRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberDeletePushSubscriptionRequest' from JSON`);
}
/** @internal */
export const SubscriberDeletePushSubscriptionResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Status": "status",
    });
});
/** @internal */
export const SubscriberDeletePushSubscriptionResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberDeletePushSubscriptionResponse$;
(function (SubscriberDeletePushSubscriptionResponse$) {
    /** @deprecated use `SubscriberDeletePushSubscriptionResponse$inboundSchema` instead. */
    SubscriberDeletePushSubscriptionResponse$.inboundSchema = SubscriberDeletePushSubscriptionResponse$inboundSchema;
    /** @deprecated use `SubscriberDeletePushSubscriptionResponse$outboundSchema` instead. */
    SubscriberDeletePushSubscriptionResponse$.outboundSchema = SubscriberDeletePushSubscriptionResponse$outboundSchema;
})(SubscriberDeletePushSubscriptionResponse$ || (SubscriberDeletePushSubscriptionResponse$ = {}));
export function subscriberDeletePushSubscriptionResponseToJSON(subscriberDeletePushSubscriptionResponse) {
    return JSON.stringify(SubscriberDeletePushSubscriptionResponse$outboundSchema.parse(subscriberDeletePushSubscriptionResponse));
}
export function subscriberDeletePushSubscriptionResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberDeletePushSubscriptionResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberDeletePushSubscriptionResponse' from JSON`);
}
//# sourceMappingURL=subscriberdeletepushsubscription.js.map