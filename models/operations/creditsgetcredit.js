/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreditsGetCreditRequest$inboundSchema = z.object({
    account_id: z.string(),
    credit_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "credit_id": "creditId",
    });
});
/** @internal */
export const CreditsGetCreditRequest$outboundSchema = z.object({
    accountId: z.string(),
    creditId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        creditId: "credit_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreditsGetCreditRequest$;
(function (CreditsGetCreditRequest$) {
    /** @deprecated use `CreditsGetCreditRequest$inboundSchema` instead. */
    CreditsGetCreditRequest$.inboundSchema = CreditsGetCreditRequest$inboundSchema;
    /** @deprecated use `CreditsGetCreditRequest$outboundSchema` instead. */
    CreditsGetCreditRequest$.outboundSchema = CreditsGetCreditRequest$outboundSchema;
})(CreditsGetCreditRequest$ || (CreditsGetCreditRequest$ = {}));
export function creditsGetCreditRequestToJSON(creditsGetCreditRequest) {
    return JSON.stringify(CreditsGetCreditRequest$outboundSchema.parse(creditsGetCreditRequest));
}
export function creditsGetCreditRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreditsGetCreditRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreditsGetCreditRequest' from JSON`);
}
/** @internal */
export const CreditsGetCreditResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    TransfersCredit: components.TransfersCredit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "TransfersCredit": "transfersCredit",
        "Status": "status",
    });
});
/** @internal */
export const CreditsGetCreditResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    transfersCredit: components.TransfersCredit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        transfersCredit: "TransfersCredit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreditsGetCreditResponse$;
(function (CreditsGetCreditResponse$) {
    /** @deprecated use `CreditsGetCreditResponse$inboundSchema` instead. */
    CreditsGetCreditResponse$.inboundSchema = CreditsGetCreditResponse$inboundSchema;
    /** @deprecated use `CreditsGetCreditResponse$outboundSchema` instead. */
    CreditsGetCreditResponse$.outboundSchema = CreditsGetCreditResponse$outboundSchema;
})(CreditsGetCreditResponse$ || (CreditsGetCreditResponse$ = {}));
export function creditsGetCreditResponseToJSON(creditsGetCreditResponse) {
    return JSON.stringify(CreditsGetCreditResponse$outboundSchema.parse(creditsGetCreditResponse));
}
export function creditsGetCreditResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreditsGetCreditResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreditsGetCreditResponse' from JSON`);
}
//# sourceMappingURL=creditsgetcredit.js.map