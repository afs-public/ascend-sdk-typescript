/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const InvestigationServiceUpdateInvestigationRequest$inboundSchema = z.object({
    investigation_id: z.string(),
    update_mask: z.string().optional(),
    InvestigationUpdate: components.InvestigationUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "investigation_id": "investigationId",
        "update_mask": "updateMask",
        "InvestigationUpdate": "investigationUpdate",
    });
});
/** @internal */
export const InvestigationServiceUpdateInvestigationRequest$outboundSchema = z.object({
    investigationId: z.string(),
    updateMask: z.string().optional(),
    investigationUpdate: components.InvestigationUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        investigationId: "investigation_id",
        updateMask: "update_mask",
        investigationUpdate: "InvestigationUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestigationServiceUpdateInvestigationRequest$;
(function (InvestigationServiceUpdateInvestigationRequest$) {
    /** @deprecated use `InvestigationServiceUpdateInvestigationRequest$inboundSchema` instead. */
    InvestigationServiceUpdateInvestigationRequest$.inboundSchema = InvestigationServiceUpdateInvestigationRequest$inboundSchema;
    /** @deprecated use `InvestigationServiceUpdateInvestigationRequest$outboundSchema` instead. */
    InvestigationServiceUpdateInvestigationRequest$.outboundSchema = InvestigationServiceUpdateInvestigationRequest$outboundSchema;
})(InvestigationServiceUpdateInvestigationRequest$ || (InvestigationServiceUpdateInvestigationRequest$ = {}));
export function investigationServiceUpdateInvestigationRequestToJSON(investigationServiceUpdateInvestigationRequest) {
    return JSON.stringify(InvestigationServiceUpdateInvestigationRequest$outboundSchema.parse(investigationServiceUpdateInvestigationRequest));
}
export function investigationServiceUpdateInvestigationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestigationServiceUpdateInvestigationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestigationServiceUpdateInvestigationRequest' from JSON`);
}
/** @internal */
export const InvestigationServiceUpdateInvestigationResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Investigation: components.Investigation$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Investigation": "investigation",
        "Status": "status",
    });
});
/** @internal */
export const InvestigationServiceUpdateInvestigationResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    investigation: components.Investigation$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        investigation: "Investigation",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var InvestigationServiceUpdateInvestigationResponse$;
(function (InvestigationServiceUpdateInvestigationResponse$) {
    /** @deprecated use `InvestigationServiceUpdateInvestigationResponse$inboundSchema` instead. */
    InvestigationServiceUpdateInvestigationResponse$.inboundSchema = InvestigationServiceUpdateInvestigationResponse$inboundSchema;
    /** @deprecated use `InvestigationServiceUpdateInvestigationResponse$outboundSchema` instead. */
    InvestigationServiceUpdateInvestigationResponse$.outboundSchema = InvestigationServiceUpdateInvestigationResponse$outboundSchema;
})(InvestigationServiceUpdateInvestigationResponse$ || (InvestigationServiceUpdateInvestigationResponse$ = {}));
export function investigationServiceUpdateInvestigationResponseToJSON(investigationServiceUpdateInvestigationResponse) {
    return JSON.stringify(InvestigationServiceUpdateInvestigationResponse$outboundSchema.parse(investigationServiceUpdateInvestigationResponse));
}
export function investigationServiceUpdateInvestigationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => InvestigationServiceUpdateInvestigationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'InvestigationServiceUpdateInvestigationResponse' from JSON`);
}
//# sourceMappingURL=investigationserviceupdateinvestigation.js.map