/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const OrderPriceServicePreviewOrderCostRequest$inboundSchema = z.object({
    account_id: z.string(),
    OrderCostPreviewRequestCreate: components.OrderCostPreviewRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "OrderCostPreviewRequestCreate": "orderCostPreviewRequestCreate",
    });
});
/** @internal */
export const OrderPriceServicePreviewOrderCostRequest$outboundSchema = z.object({
    accountId: z.string(),
    orderCostPreviewRequestCreate: components.OrderCostPreviewRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        orderCostPreviewRequestCreate: "OrderCostPreviewRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderPriceServicePreviewOrderCostRequest$;
(function (OrderPriceServicePreviewOrderCostRequest$) {
    /** @deprecated use `OrderPriceServicePreviewOrderCostRequest$inboundSchema` instead. */
    OrderPriceServicePreviewOrderCostRequest$.inboundSchema = OrderPriceServicePreviewOrderCostRequest$inboundSchema;
    /** @deprecated use `OrderPriceServicePreviewOrderCostRequest$outboundSchema` instead. */
    OrderPriceServicePreviewOrderCostRequest$.outboundSchema = OrderPriceServicePreviewOrderCostRequest$outboundSchema;
})(OrderPriceServicePreviewOrderCostRequest$ || (OrderPriceServicePreviewOrderCostRequest$ = {}));
export function orderPriceServicePreviewOrderCostRequestToJSON(orderPriceServicePreviewOrderCostRequest) {
    return JSON.stringify(OrderPriceServicePreviewOrderCostRequest$outboundSchema.parse(orderPriceServicePreviewOrderCostRequest));
}
export function orderPriceServicePreviewOrderCostRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderPriceServicePreviewOrderCostRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderPriceServicePreviewOrderCostRequest' from JSON`);
}
/** @internal */
export const OrderPriceServicePreviewOrderCostResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    OrderCostPreviewResponse: components.OrderCostPreviewResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "OrderCostPreviewResponse": "orderCostPreviewResponse",
        "Status": "status",
    });
});
/** @internal */
export const OrderPriceServicePreviewOrderCostResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    orderCostPreviewResponse: components.OrderCostPreviewResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        orderCostPreviewResponse: "OrderCostPreviewResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderPriceServicePreviewOrderCostResponse$;
(function (OrderPriceServicePreviewOrderCostResponse$) {
    /** @deprecated use `OrderPriceServicePreviewOrderCostResponse$inboundSchema` instead. */
    OrderPriceServicePreviewOrderCostResponse$.inboundSchema = OrderPriceServicePreviewOrderCostResponse$inboundSchema;
    /** @deprecated use `OrderPriceServicePreviewOrderCostResponse$outboundSchema` instead. */
    OrderPriceServicePreviewOrderCostResponse$.outboundSchema = OrderPriceServicePreviewOrderCostResponse$outboundSchema;
})(OrderPriceServicePreviewOrderCostResponse$ || (OrderPriceServicePreviewOrderCostResponse$ = {}));
export function orderPriceServicePreviewOrderCostResponseToJSON(orderPriceServicePreviewOrderCostResponse) {
    return JSON.stringify(OrderPriceServicePreviewOrderCostResponse$outboundSchema.parse(orderPriceServicePreviewOrderCostResponse));
}
export function orderPriceServicePreviewOrderCostResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderPriceServicePreviewOrderCostResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderPriceServicePreviewOrderCostResponse' from JSON`);
}
//# sourceMappingURL=orderpriceservicepreviewordercost.js.map