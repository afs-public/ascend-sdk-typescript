/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountTransfersListTransfersRequest$inboundSchema = z.object({
    correspondent_id: z.string(),
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "correspondent_id": "correspondentId",
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const AccountTransfersListTransfersRequest$outboundSchema = z.object({
    correspondentId: z.string(),
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        correspondentId: "correspondent_id",
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountTransfersListTransfersRequest$;
(function (AccountTransfersListTransfersRequest$) {
    /** @deprecated use `AccountTransfersListTransfersRequest$inboundSchema` instead. */
    AccountTransfersListTransfersRequest$.inboundSchema = AccountTransfersListTransfersRequest$inboundSchema;
    /** @deprecated use `AccountTransfersListTransfersRequest$outboundSchema` instead. */
    AccountTransfersListTransfersRequest$.outboundSchema = AccountTransfersListTransfersRequest$outboundSchema;
})(AccountTransfersListTransfersRequest$ || (AccountTransfersListTransfersRequest$ = {}));
export function accountTransfersListTransfersRequestToJSON(accountTransfersListTransfersRequest) {
    return JSON.stringify(AccountTransfersListTransfersRequest$outboundSchema.parse(accountTransfersListTransfersRequest));
}
export function accountTransfersListTransfersRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountTransfersListTransfersRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountTransfersListTransfersRequest' from JSON`);
}
/** @internal */
export const AccountTransfersListTransfersResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListTransfersResponse: components.ListTransfersResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListTransfersResponse": "listTransfersResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountTransfersListTransfersResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listTransfersResponse: components.ListTransfersResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listTransfersResponse: "ListTransfersResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountTransfersListTransfersResponse$;
(function (AccountTransfersListTransfersResponse$) {
    /** @deprecated use `AccountTransfersListTransfersResponse$inboundSchema` instead. */
    AccountTransfersListTransfersResponse$.inboundSchema = AccountTransfersListTransfersResponse$inboundSchema;
    /** @deprecated use `AccountTransfersListTransfersResponse$outboundSchema` instead. */
    AccountTransfersListTransfersResponse$.outboundSchema = AccountTransfersListTransfersResponse$outboundSchema;
})(AccountTransfersListTransfersResponse$ || (AccountTransfersListTransfersResponse$ = {}));
export function accountTransfersListTransfersResponseToJSON(accountTransfersListTransfersResponse) {
    return JSON.stringify(AccountTransfersListTransfersResponse$outboundSchema.parse(accountTransfersListTransfersResponse));
}
export function accountTransfersListTransfersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountTransfersListTransfersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountTransfersListTransfersResponse' from JSON`);
}
//# sourceMappingURL=accounttransferslisttransfers.js.map