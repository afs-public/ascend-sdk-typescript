/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsDeactivateEnrollmentRequest$inboundSchema = z.object({
    account_id: z.string(),
    DeactivateEnrollmentRequestCreate: components.DeactivateEnrollmentRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "DeactivateEnrollmentRequestCreate": "deactivateEnrollmentRequestCreate",
    });
});
/** @internal */
export const AccountsDeactivateEnrollmentRequest$outboundSchema = z.object({
    accountId: z.string(),
    deactivateEnrollmentRequestCreate: components.DeactivateEnrollmentRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        deactivateEnrollmentRequestCreate: "DeactivateEnrollmentRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsDeactivateEnrollmentRequest$;
(function (AccountsDeactivateEnrollmentRequest$) {
    /** @deprecated use `AccountsDeactivateEnrollmentRequest$inboundSchema` instead. */
    AccountsDeactivateEnrollmentRequest$.inboundSchema = AccountsDeactivateEnrollmentRequest$inboundSchema;
    /** @deprecated use `AccountsDeactivateEnrollmentRequest$outboundSchema` instead. */
    AccountsDeactivateEnrollmentRequest$.outboundSchema = AccountsDeactivateEnrollmentRequest$outboundSchema;
})(AccountsDeactivateEnrollmentRequest$ || (AccountsDeactivateEnrollmentRequest$ = {}));
export function accountsDeactivateEnrollmentRequestToJSON(accountsDeactivateEnrollmentRequest) {
    return JSON.stringify(AccountsDeactivateEnrollmentRequest$outboundSchema.parse(accountsDeactivateEnrollmentRequest));
}
export function accountsDeactivateEnrollmentRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsDeactivateEnrollmentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsDeactivateEnrollmentRequest' from JSON`);
}
/** @internal */
export const AccountsDeactivateEnrollmentResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Enrollment: components.Enrollment$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Enrollment": "enrollment",
        "Status": "status",
    });
});
/** @internal */
export const AccountsDeactivateEnrollmentResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    enrollment: components.Enrollment$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        enrollment: "Enrollment",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsDeactivateEnrollmentResponse$;
(function (AccountsDeactivateEnrollmentResponse$) {
    /** @deprecated use `AccountsDeactivateEnrollmentResponse$inboundSchema` instead. */
    AccountsDeactivateEnrollmentResponse$.inboundSchema = AccountsDeactivateEnrollmentResponse$inboundSchema;
    /** @deprecated use `AccountsDeactivateEnrollmentResponse$outboundSchema` instead. */
    AccountsDeactivateEnrollmentResponse$.outboundSchema = AccountsDeactivateEnrollmentResponse$outboundSchema;
})(AccountsDeactivateEnrollmentResponse$ || (AccountsDeactivateEnrollmentResponse$ = {}));
export function accountsDeactivateEnrollmentResponseToJSON(accountsDeactivateEnrollmentResponse) {
    return JSON.stringify(AccountsDeactivateEnrollmentResponse$outboundSchema.parse(accountsDeactivateEnrollmentResponse));
}
export function accountsDeactivateEnrollmentResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsDeactivateEnrollmentResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsDeactivateEnrollmentResponse' from JSON`);
}
//# sourceMappingURL=accountsdeactivateenrollment.js.map