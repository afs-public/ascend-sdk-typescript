/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const OrderServiceCreateOrderRequest$inboundSchema = z.object({
    account_id: z.string(),
    OrderCreate: components.OrderCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "OrderCreate": "orderCreate",
    });
});
/** @internal */
export const OrderServiceCreateOrderRequest$outboundSchema = z.object({
    accountId: z.string(),
    orderCreate: components.OrderCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        orderCreate: "OrderCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderServiceCreateOrderRequest$;
(function (OrderServiceCreateOrderRequest$) {
    /** @deprecated use `OrderServiceCreateOrderRequest$inboundSchema` instead. */
    OrderServiceCreateOrderRequest$.inboundSchema = OrderServiceCreateOrderRequest$inboundSchema;
    /** @deprecated use `OrderServiceCreateOrderRequest$outboundSchema` instead. */
    OrderServiceCreateOrderRequest$.outboundSchema = OrderServiceCreateOrderRequest$outboundSchema;
})(OrderServiceCreateOrderRequest$ || (OrderServiceCreateOrderRequest$ = {}));
export function orderServiceCreateOrderRequestToJSON(orderServiceCreateOrderRequest) {
    return JSON.stringify(OrderServiceCreateOrderRequest$outboundSchema.parse(orderServiceCreateOrderRequest));
}
export function orderServiceCreateOrderRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderServiceCreateOrderRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderServiceCreateOrderRequest' from JSON`);
}
/** @internal */
export const OrderServiceCreateOrderResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Order: components.Order$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Order": "order",
        "Status": "status",
    });
});
/** @internal */
export const OrderServiceCreateOrderResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    order: components.Order$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        order: "Order",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderServiceCreateOrderResponse$;
(function (OrderServiceCreateOrderResponse$) {
    /** @deprecated use `OrderServiceCreateOrderResponse$inboundSchema` instead. */
    OrderServiceCreateOrderResponse$.inboundSchema = OrderServiceCreateOrderResponse$inboundSchema;
    /** @deprecated use `OrderServiceCreateOrderResponse$outboundSchema` instead. */
    OrderServiceCreateOrderResponse$.outboundSchema = OrderServiceCreateOrderResponse$outboundSchema;
})(OrderServiceCreateOrderResponse$ || (OrderServiceCreateOrderResponse$ = {}));
export function orderServiceCreateOrderResponseToJSON(orderServiceCreateOrderResponse) {
    return JSON.stringify(OrderServiceCreateOrderResponse$outboundSchema.parse(orderServiceCreateOrderResponse));
}
export function orderServiceCreateOrderResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderServiceCreateOrderResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderServiceCreateOrderResponse' from JSON`);
}
//# sourceMappingURL=orderservicecreateorder.js.map