/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const IctDepositsForceRejectIctDepositRequest$inboundSchema = z.object({
    account_id: z.string(),
    ictDeposit_id: z.string(),
    ForceRejectIctDepositRequestCreate: components.ForceRejectIctDepositRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "ictDeposit_id": "ictDepositId",
        "ForceRejectIctDepositRequestCreate": "forceRejectIctDepositRequestCreate",
    });
});
/** @internal */
export const IctDepositsForceRejectIctDepositRequest$outboundSchema = z.object({
    accountId: z.string(),
    ictDepositId: z.string(),
    forceRejectIctDepositRequestCreate: components.ForceRejectIctDepositRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        ictDepositId: "ictDeposit_id",
        forceRejectIctDepositRequestCreate: "ForceRejectIctDepositRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IctDepositsForceRejectIctDepositRequest$;
(function (IctDepositsForceRejectIctDepositRequest$) {
    /** @deprecated use `IctDepositsForceRejectIctDepositRequest$inboundSchema` instead. */
    IctDepositsForceRejectIctDepositRequest$.inboundSchema = IctDepositsForceRejectIctDepositRequest$inboundSchema;
    /** @deprecated use `IctDepositsForceRejectIctDepositRequest$outboundSchema` instead. */
    IctDepositsForceRejectIctDepositRequest$.outboundSchema = IctDepositsForceRejectIctDepositRequest$outboundSchema;
})(IctDepositsForceRejectIctDepositRequest$ || (IctDepositsForceRejectIctDepositRequest$ = {}));
export function ictDepositsForceRejectIctDepositRequestToJSON(ictDepositsForceRejectIctDepositRequest) {
    return JSON.stringify(IctDepositsForceRejectIctDepositRequest$outboundSchema.parse(ictDepositsForceRejectIctDepositRequest));
}
export function ictDepositsForceRejectIctDepositRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IctDepositsForceRejectIctDepositRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IctDepositsForceRejectIctDepositRequest' from JSON`);
}
/** @internal */
export const IctDepositsForceRejectIctDepositResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    IctDeposit: components.IctDeposit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "IctDeposit": "ictDeposit",
        "Status": "status",
    });
});
/** @internal */
export const IctDepositsForceRejectIctDepositResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    ictDeposit: components.IctDeposit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        ictDeposit: "IctDeposit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var IctDepositsForceRejectIctDepositResponse$;
(function (IctDepositsForceRejectIctDepositResponse$) {
    /** @deprecated use `IctDepositsForceRejectIctDepositResponse$inboundSchema` instead. */
    IctDepositsForceRejectIctDepositResponse$.inboundSchema = IctDepositsForceRejectIctDepositResponse$inboundSchema;
    /** @deprecated use `IctDepositsForceRejectIctDepositResponse$outboundSchema` instead. */
    IctDepositsForceRejectIctDepositResponse$.outboundSchema = IctDepositsForceRejectIctDepositResponse$outboundSchema;
})(IctDepositsForceRejectIctDepositResponse$ || (IctDepositsForceRejectIctDepositResponse$ = {}));
export function ictDepositsForceRejectIctDepositResponseToJSON(ictDepositsForceRejectIctDepositResponse) {
    return JSON.stringify(IctDepositsForceRejectIctDepositResponse$outboundSchema.parse(ictDepositsForceRejectIctDepositResponse));
}
export function ictDepositsForceRejectIctDepositResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => IctDepositsForceRejectIctDepositResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'IctDepositsForceRejectIctDepositResponse' from JSON`);
}
//# sourceMappingURL=ictdepositsforcerejectictdeposit.js.map