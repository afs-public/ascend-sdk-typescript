/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AuthenticationGenerateServiceAccountTokenSecurity$inboundSchema = z.object({
    ApiKeyAuth: z.string(),
}).transform((v) => {
    return remap$(v, {
        "ApiKeyAuth": "apiKeyAuth",
    });
});
/** @internal */
export const AuthenticationGenerateServiceAccountTokenSecurity$outboundSchema = z.object({
    apiKeyAuth: z.string(),
}).transform((v) => {
    return remap$(v, {
        apiKeyAuth: "ApiKeyAuth",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AuthenticationGenerateServiceAccountTokenSecurity$;
(function (AuthenticationGenerateServiceAccountTokenSecurity$) {
    /** @deprecated use `AuthenticationGenerateServiceAccountTokenSecurity$inboundSchema` instead. */
    AuthenticationGenerateServiceAccountTokenSecurity$.inboundSchema = AuthenticationGenerateServiceAccountTokenSecurity$inboundSchema;
    /** @deprecated use `AuthenticationGenerateServiceAccountTokenSecurity$outboundSchema` instead. */
    AuthenticationGenerateServiceAccountTokenSecurity$.outboundSchema = AuthenticationGenerateServiceAccountTokenSecurity$outboundSchema;
})(AuthenticationGenerateServiceAccountTokenSecurity$ || (AuthenticationGenerateServiceAccountTokenSecurity$ = {}));
export function authenticationGenerateServiceAccountTokenSecurityToJSON(authenticationGenerateServiceAccountTokenSecurity) {
    return JSON.stringify(AuthenticationGenerateServiceAccountTokenSecurity$outboundSchema.parse(authenticationGenerateServiceAccountTokenSecurity));
}
export function authenticationGenerateServiceAccountTokenSecurityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AuthenticationGenerateServiceAccountTokenSecurity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AuthenticationGenerateServiceAccountTokenSecurity' from JSON`);
}
/** @internal */
export const AuthenticationGenerateServiceAccountTokenResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Token: components.Token$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Token": "token",
        "Status": "status",
    });
});
/** @internal */
export const AuthenticationGenerateServiceAccountTokenResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    token: components.Token$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        token: "Token",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AuthenticationGenerateServiceAccountTokenResponse$;
(function (AuthenticationGenerateServiceAccountTokenResponse$) {
    /** @deprecated use `AuthenticationGenerateServiceAccountTokenResponse$inboundSchema` instead. */
    AuthenticationGenerateServiceAccountTokenResponse$.inboundSchema = AuthenticationGenerateServiceAccountTokenResponse$inboundSchema;
    /** @deprecated use `AuthenticationGenerateServiceAccountTokenResponse$outboundSchema` instead. */
    AuthenticationGenerateServiceAccountTokenResponse$.outboundSchema = AuthenticationGenerateServiceAccountTokenResponse$outboundSchema;
})(AuthenticationGenerateServiceAccountTokenResponse$ || (AuthenticationGenerateServiceAccountTokenResponse$ = {}));
export function authenticationGenerateServiceAccountTokenResponseToJSON(authenticationGenerateServiceAccountTokenResponse) {
    return JSON.stringify(AuthenticationGenerateServiceAccountTokenResponse$outboundSchema.parse(authenticationGenerateServiceAccountTokenResponse));
}
export function authenticationGenerateServiceAccountTokenResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AuthenticationGenerateServiceAccountTokenResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AuthenticationGenerateServiceAccountTokenResponse' from JSON`);
}
//# sourceMappingURL=authenticationgenerateserviceaccounttoken.js.map