/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AchDepositsCancelAchDepositRequest$inboundSchema = z.object({
    account_id: z.string(),
    achDeposit_id: z.string(),
    CancelAchDepositRequestCreate: components.CancelAchDepositRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "achDeposit_id": "achDepositId",
        "CancelAchDepositRequestCreate": "cancelAchDepositRequestCreate",
    });
});
/** @internal */
export const AchDepositsCancelAchDepositRequest$outboundSchema = z.object({
    accountId: z.string(),
    achDepositId: z.string(),
    cancelAchDepositRequestCreate: components.CancelAchDepositRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        achDepositId: "achDeposit_id",
        cancelAchDepositRequestCreate: "CancelAchDepositRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositsCancelAchDepositRequest$;
(function (AchDepositsCancelAchDepositRequest$) {
    /** @deprecated use `AchDepositsCancelAchDepositRequest$inboundSchema` instead. */
    AchDepositsCancelAchDepositRequest$.inboundSchema = AchDepositsCancelAchDepositRequest$inboundSchema;
    /** @deprecated use `AchDepositsCancelAchDepositRequest$outboundSchema` instead. */
    AchDepositsCancelAchDepositRequest$.outboundSchema = AchDepositsCancelAchDepositRequest$outboundSchema;
})(AchDepositsCancelAchDepositRequest$ || (AchDepositsCancelAchDepositRequest$ = {}));
export function achDepositsCancelAchDepositRequestToJSON(achDepositsCancelAchDepositRequest) {
    return JSON.stringify(AchDepositsCancelAchDepositRequest$outboundSchema.parse(achDepositsCancelAchDepositRequest));
}
export function achDepositsCancelAchDepositRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositsCancelAchDepositRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositsCancelAchDepositRequest' from JSON`);
}
/** @internal */
export const AchDepositsCancelAchDepositResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    AchDeposit: components.AchDeposit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "AchDeposit": "achDeposit",
        "Status": "status",
    });
});
/** @internal */
export const AchDepositsCancelAchDepositResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    achDeposit: components.AchDeposit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        achDeposit: "AchDeposit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositsCancelAchDepositResponse$;
(function (AchDepositsCancelAchDepositResponse$) {
    /** @deprecated use `AchDepositsCancelAchDepositResponse$inboundSchema` instead. */
    AchDepositsCancelAchDepositResponse$.inboundSchema = AchDepositsCancelAchDepositResponse$inboundSchema;
    /** @deprecated use `AchDepositsCancelAchDepositResponse$outboundSchema` instead. */
    AchDepositsCancelAchDepositResponse$.outboundSchema = AchDepositsCancelAchDepositResponse$outboundSchema;
})(AchDepositsCancelAchDepositResponse$ || (AchDepositsCancelAchDepositResponse$ = {}));
export function achDepositsCancelAchDepositResponseToJSON(achDepositsCancelAchDepositResponse) {
    return JSON.stringify(AchDepositsCancelAchDepositResponse$outboundSchema.parse(achDepositsCancelAchDepositResponse));
}
export function achDepositsCancelAchDepositResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositsCancelAchDepositResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositsCancelAchDepositResponse' from JSON`);
}
//# sourceMappingURL=achdepositscancelachdeposit.js.map