/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const OrderServiceGetOrderRequest$inboundSchema = z.object({
    account_id: z.string(),
    order_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "order_id": "orderId",
    });
});
/** @internal */
export const OrderServiceGetOrderRequest$outboundSchema = z.object({
    accountId: z.string(),
    orderId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        orderId: "order_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderServiceGetOrderRequest$;
(function (OrderServiceGetOrderRequest$) {
    /** @deprecated use `OrderServiceGetOrderRequest$inboundSchema` instead. */
    OrderServiceGetOrderRequest$.inboundSchema = OrderServiceGetOrderRequest$inboundSchema;
    /** @deprecated use `OrderServiceGetOrderRequest$outboundSchema` instead. */
    OrderServiceGetOrderRequest$.outboundSchema = OrderServiceGetOrderRequest$outboundSchema;
})(OrderServiceGetOrderRequest$ || (OrderServiceGetOrderRequest$ = {}));
export function orderServiceGetOrderRequestToJSON(orderServiceGetOrderRequest) {
    return JSON.stringify(OrderServiceGetOrderRequest$outboundSchema.parse(orderServiceGetOrderRequest));
}
export function orderServiceGetOrderRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderServiceGetOrderRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderServiceGetOrderRequest' from JSON`);
}
/** @internal */
export const OrderServiceGetOrderResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Order: components.Order$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Order": "order",
        "Status": "status",
    });
});
/** @internal */
export const OrderServiceGetOrderResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    order: components.Order$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        order: "Order",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var OrderServiceGetOrderResponse$;
(function (OrderServiceGetOrderResponse$) {
    /** @deprecated use `OrderServiceGetOrderResponse$inboundSchema` instead. */
    OrderServiceGetOrderResponse$.inboundSchema = OrderServiceGetOrderResponse$inboundSchema;
    /** @deprecated use `OrderServiceGetOrderResponse$outboundSchema` instead. */
    OrderServiceGetOrderResponse$.outboundSchema = OrderServiceGetOrderResponse$outboundSchema;
})(OrderServiceGetOrderResponse$ || (OrderServiceGetOrderResponse$ = {}));
export function orderServiceGetOrderResponseToJSON(orderServiceGetOrderResponse) {
    return JSON.stringify(OrderServiceGetOrderResponse$outboundSchema.parse(orderServiceGetOrderResponse));
}
export function orderServiceGetOrderResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => OrderServiceGetOrderResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'OrderServiceGetOrderResponse' from JSON`);
}
//# sourceMappingURL=orderservicegetorder.js.map