/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ReaderListEventMessagesRequest$inboundSchema = z.object({
    filter: z.string().optional(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const ReaderListEventMessagesRequest$outboundSchema = z.object({
    filter: z.string().optional(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ReaderListEventMessagesRequest$;
(function (ReaderListEventMessagesRequest$) {
    /** @deprecated use `ReaderListEventMessagesRequest$inboundSchema` instead. */
    ReaderListEventMessagesRequest$.inboundSchema = ReaderListEventMessagesRequest$inboundSchema;
    /** @deprecated use `ReaderListEventMessagesRequest$outboundSchema` instead. */
    ReaderListEventMessagesRequest$.outboundSchema = ReaderListEventMessagesRequest$outboundSchema;
})(ReaderListEventMessagesRequest$ || (ReaderListEventMessagesRequest$ = {}));
export function readerListEventMessagesRequestToJSON(readerListEventMessagesRequest) {
    return JSON.stringify(ReaderListEventMessagesRequest$outboundSchema.parse(readerListEventMessagesRequest));
}
export function readerListEventMessagesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ReaderListEventMessagesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReaderListEventMessagesRequest' from JSON`);
}
/** @internal */
export const ReaderListEventMessagesResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListEventMessagesResponse: components.ListEventMessagesResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListEventMessagesResponse": "listEventMessagesResponse",
        "Status": "status",
    });
});
/** @internal */
export const ReaderListEventMessagesResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listEventMessagesResponse: components.ListEventMessagesResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listEventMessagesResponse: "ListEventMessagesResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ReaderListEventMessagesResponse$;
(function (ReaderListEventMessagesResponse$) {
    /** @deprecated use `ReaderListEventMessagesResponse$inboundSchema` instead. */
    ReaderListEventMessagesResponse$.inboundSchema = ReaderListEventMessagesResponse$inboundSchema;
    /** @deprecated use `ReaderListEventMessagesResponse$outboundSchema` instead. */
    ReaderListEventMessagesResponse$.outboundSchema = ReaderListEventMessagesResponse$outboundSchema;
})(ReaderListEventMessagesResponse$ || (ReaderListEventMessagesResponse$ = {}));
export function readerListEventMessagesResponseToJSON(readerListEventMessagesResponse) {
    return JSON.stringify(ReaderListEventMessagesResponse$outboundSchema.parse(readerListEventMessagesResponse));
}
export function readerListEventMessagesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ReaderListEventMessagesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ReaderListEventMessagesResponse' from JSON`);
}
//# sourceMappingURL=readerlisteventmessages.js.map