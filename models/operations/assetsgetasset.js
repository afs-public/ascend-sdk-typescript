/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AssetsGetAssetRequest$inboundSchema = z.object({
    asset_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "asset_id": "assetId",
    });
});
/** @internal */
export const AssetsGetAssetRequest$outboundSchema = z.object({
    assetId: z.string(),
}).transform((v) => {
    return remap$(v, {
        assetId: "asset_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssetsGetAssetRequest$;
(function (AssetsGetAssetRequest$) {
    /** @deprecated use `AssetsGetAssetRequest$inboundSchema` instead. */
    AssetsGetAssetRequest$.inboundSchema = AssetsGetAssetRequest$inboundSchema;
    /** @deprecated use `AssetsGetAssetRequest$outboundSchema` instead. */
    AssetsGetAssetRequest$.outboundSchema = AssetsGetAssetRequest$outboundSchema;
})(AssetsGetAssetRequest$ || (AssetsGetAssetRequest$ = {}));
export function assetsGetAssetRequestToJSON(assetsGetAssetRequest) {
    return JSON.stringify(AssetsGetAssetRequest$outboundSchema.parse(assetsGetAssetRequest));
}
export function assetsGetAssetRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssetsGetAssetRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetsGetAssetRequest' from JSON`);
}
/** @internal */
export const AssetsGetAssetResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Asset: components.Asset$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Asset": "asset",
        "Status": "status",
    });
});
/** @internal */
export const AssetsGetAssetResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    asset: components.Asset$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        asset: "Asset",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssetsGetAssetResponse$;
(function (AssetsGetAssetResponse$) {
    /** @deprecated use `AssetsGetAssetResponse$inboundSchema` instead. */
    AssetsGetAssetResponse$.inboundSchema = AssetsGetAssetResponse$inboundSchema;
    /** @deprecated use `AssetsGetAssetResponse$outboundSchema` instead. */
    AssetsGetAssetResponse$.outboundSchema = AssetsGetAssetResponse$outboundSchema;
})(AssetsGetAssetResponse$ || (AssetsGetAssetResponse$ = {}));
export function assetsGetAssetResponseToJSON(assetsGetAssetResponse) {
    return JSON.stringify(AssetsGetAssetResponse$outboundSchema.parse(assetsGetAssetResponse));
}
export function assetsGetAssetResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssetsGetAssetResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetsGetAssetResponse' from JSON`);
}
//# sourceMappingURL=assetsgetasset.js.map