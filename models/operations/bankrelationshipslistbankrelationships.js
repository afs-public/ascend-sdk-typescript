/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/**
 * The state of bank relationships to filter by. Unspecified returns relationships of all states.
 */
export var State;
(function (State) {
    State["StateUnspecified"] = "STATE_UNSPECIFIED";
    State["Pending"] = "PENDING";
    State["Approved"] = "APPROVED";
    State["Canceled"] = "CANCELED";
    State["Rejected"] = "REJECTED";
})(State || (State = {}));
/** @internal */
export const State$inboundSchema = z.nativeEnum(State);
/** @internal */
export const State$outboundSchema = State$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var State$;
(function (State$) {
    /** @deprecated use `State$inboundSchema` instead. */
    State$.inboundSchema = State$inboundSchema;
    /** @deprecated use `State$outboundSchema` instead. */
    State$.outboundSchema = State$outboundSchema;
})(State$ || (State$ = {}));
/** @internal */
export const BankRelationshipsListBankRelationshipsRequest$inboundSchema = z.object({
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    state: State$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const BankRelationshipsListBankRelationshipsRequest$outboundSchema = z.object({
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    state: State$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsListBankRelationshipsRequest$;
(function (BankRelationshipsListBankRelationshipsRequest$) {
    /** @deprecated use `BankRelationshipsListBankRelationshipsRequest$inboundSchema` instead. */
    BankRelationshipsListBankRelationshipsRequest$.inboundSchema = BankRelationshipsListBankRelationshipsRequest$inboundSchema;
    /** @deprecated use `BankRelationshipsListBankRelationshipsRequest$outboundSchema` instead. */
    BankRelationshipsListBankRelationshipsRequest$.outboundSchema = BankRelationshipsListBankRelationshipsRequest$outboundSchema;
})(BankRelationshipsListBankRelationshipsRequest$ || (BankRelationshipsListBankRelationshipsRequest$ = {}));
export function bankRelationshipsListBankRelationshipsRequestToJSON(bankRelationshipsListBankRelationshipsRequest) {
    return JSON.stringify(BankRelationshipsListBankRelationshipsRequest$outboundSchema.parse(bankRelationshipsListBankRelationshipsRequest));
}
export function bankRelationshipsListBankRelationshipsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsListBankRelationshipsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsListBankRelationshipsRequest' from JSON`);
}
/** @internal */
export const BankRelationshipsListBankRelationshipsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListBankRelationshipsResponse: components
        .ListBankRelationshipsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListBankRelationshipsResponse": "listBankRelationshipsResponse",
        "Status": "status",
    });
});
/** @internal */
export const BankRelationshipsListBankRelationshipsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listBankRelationshipsResponse: components
        .ListBankRelationshipsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listBankRelationshipsResponse: "ListBankRelationshipsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsListBankRelationshipsResponse$;
(function (BankRelationshipsListBankRelationshipsResponse$) {
    /** @deprecated use `BankRelationshipsListBankRelationshipsResponse$inboundSchema` instead. */
    BankRelationshipsListBankRelationshipsResponse$.inboundSchema = BankRelationshipsListBankRelationshipsResponse$inboundSchema;
    /** @deprecated use `BankRelationshipsListBankRelationshipsResponse$outboundSchema` instead. */
    BankRelationshipsListBankRelationshipsResponse$.outboundSchema = BankRelationshipsListBankRelationshipsResponse$outboundSchema;
})(BankRelationshipsListBankRelationshipsResponse$ || (BankRelationshipsListBankRelationshipsResponse$ = {}));
export function bankRelationshipsListBankRelationshipsResponseToJSON(bankRelationshipsListBankRelationshipsResponse) {
    return JSON.stringify(BankRelationshipsListBankRelationshipsResponse$outboundSchema.parse(bankRelationshipsListBankRelationshipsResponse));
}
export function bankRelationshipsListBankRelationshipsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsListBankRelationshipsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsListBankRelationshipsResponse' from JSON`);
}
//# sourceMappingURL=bankrelationshipslistbankrelationships.js.map