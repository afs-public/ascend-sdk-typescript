/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const SubscriberListPushSubscriptionsRequest$inboundSchema = z.object({
    filter: z.string().optional(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const SubscriberListPushSubscriptionsRequest$outboundSchema = z.object({
    filter: z.string().optional(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberListPushSubscriptionsRequest$;
(function (SubscriberListPushSubscriptionsRequest$) {
    /** @deprecated use `SubscriberListPushSubscriptionsRequest$inboundSchema` instead. */
    SubscriberListPushSubscriptionsRequest$.inboundSchema = SubscriberListPushSubscriptionsRequest$inboundSchema;
    /** @deprecated use `SubscriberListPushSubscriptionsRequest$outboundSchema` instead. */
    SubscriberListPushSubscriptionsRequest$.outboundSchema = SubscriberListPushSubscriptionsRequest$outboundSchema;
})(SubscriberListPushSubscriptionsRequest$ || (SubscriberListPushSubscriptionsRequest$ = {}));
export function subscriberListPushSubscriptionsRequestToJSON(subscriberListPushSubscriptionsRequest) {
    return JSON.stringify(SubscriberListPushSubscriptionsRequest$outboundSchema.parse(subscriberListPushSubscriptionsRequest));
}
export function subscriberListPushSubscriptionsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberListPushSubscriptionsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberListPushSubscriptionsRequest' from JSON`);
}
/** @internal */
export const SubscriberListPushSubscriptionsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListPushSubscriptionsResponse: components
        .ListPushSubscriptionsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListPushSubscriptionsResponse": "listPushSubscriptionsResponse",
        "Status": "status",
    });
});
/** @internal */
export const SubscriberListPushSubscriptionsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listPushSubscriptionsResponse: components
        .ListPushSubscriptionsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listPushSubscriptionsResponse: "ListPushSubscriptionsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var SubscriberListPushSubscriptionsResponse$;
(function (SubscriberListPushSubscriptionsResponse$) {
    /** @deprecated use `SubscriberListPushSubscriptionsResponse$inboundSchema` instead. */
    SubscriberListPushSubscriptionsResponse$.inboundSchema = SubscriberListPushSubscriptionsResponse$inboundSchema;
    /** @deprecated use `SubscriberListPushSubscriptionsResponse$outboundSchema` instead. */
    SubscriberListPushSubscriptionsResponse$.outboundSchema = SubscriberListPushSubscriptionsResponse$outboundSchema;
})(SubscriberListPushSubscriptionsResponse$ || (SubscriberListPushSubscriptionsResponse$ = {}));
export function subscriberListPushSubscriptionsResponseToJSON(subscriberListPushSubscriptionsResponse) {
    return JSON.stringify(SubscriberListPushSubscriptionsResponse$outboundSchema.parse(subscriberListPushSubscriptionsResponse));
}
export function subscriberListPushSubscriptionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => SubscriberListPushSubscriptionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'SubscriberListPushSubscriptionsResponse' from JSON`);
}
//# sourceMappingURL=subscriberlistpushsubscriptions.js.map