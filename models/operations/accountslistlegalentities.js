/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsListLegalEntitiesRequest$inboundSchema = z.object({
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    order_by: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
        "order_by": "orderBy",
    });
});
/** @internal */
export const AccountsListLegalEntitiesRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    orderBy: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
        orderBy: "order_by",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListLegalEntitiesRequest$;
(function (AccountsListLegalEntitiesRequest$) {
    /** @deprecated use `AccountsListLegalEntitiesRequest$inboundSchema` instead. */
    AccountsListLegalEntitiesRequest$.inboundSchema = AccountsListLegalEntitiesRequest$inboundSchema;
    /** @deprecated use `AccountsListLegalEntitiesRequest$outboundSchema` instead. */
    AccountsListLegalEntitiesRequest$.outboundSchema = AccountsListLegalEntitiesRequest$outboundSchema;
})(AccountsListLegalEntitiesRequest$ || (AccountsListLegalEntitiesRequest$ = {}));
export function accountsListLegalEntitiesRequestToJSON(accountsListLegalEntitiesRequest) {
    return JSON.stringify(AccountsListLegalEntitiesRequest$outboundSchema.parse(accountsListLegalEntitiesRequest));
}
export function accountsListLegalEntitiesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListLegalEntitiesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListLegalEntitiesRequest' from JSON`);
}
/** @internal */
export const AccountsListLegalEntitiesResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListLegalEntitiesResponse: components.ListLegalEntitiesResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListLegalEntitiesResponse": "listLegalEntitiesResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsListLegalEntitiesResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listLegalEntitiesResponse: components.ListLegalEntitiesResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listLegalEntitiesResponse: "ListLegalEntitiesResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListLegalEntitiesResponse$;
(function (AccountsListLegalEntitiesResponse$) {
    /** @deprecated use `AccountsListLegalEntitiesResponse$inboundSchema` instead. */
    AccountsListLegalEntitiesResponse$.inboundSchema = AccountsListLegalEntitiesResponse$inboundSchema;
    /** @deprecated use `AccountsListLegalEntitiesResponse$outboundSchema` instead. */
    AccountsListLegalEntitiesResponse$.outboundSchema = AccountsListLegalEntitiesResponse$outboundSchema;
})(AccountsListLegalEntitiesResponse$ || (AccountsListLegalEntitiesResponse$ = {}));
export function accountsListLegalEntitiesResponseToJSON(accountsListLegalEntitiesResponse) {
    return JSON.stringify(AccountsListLegalEntitiesResponse$outboundSchema.parse(accountsListLegalEntitiesResponse));
}
export function accountsListLegalEntitiesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListLegalEntitiesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListLegalEntitiesResponse' from JSON`);
}
//# sourceMappingURL=accountslistlegalentities.js.map