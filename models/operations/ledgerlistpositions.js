/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const LedgerListPositionsRequest$inboundSchema = z.object({
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const LedgerListPositionsRequest$outboundSchema = z.object({
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LedgerListPositionsRequest$;
(function (LedgerListPositionsRequest$) {
    /** @deprecated use `LedgerListPositionsRequest$inboundSchema` instead. */
    LedgerListPositionsRequest$.inboundSchema = LedgerListPositionsRequest$inboundSchema;
    /** @deprecated use `LedgerListPositionsRequest$outboundSchema` instead. */
    LedgerListPositionsRequest$.outboundSchema = LedgerListPositionsRequest$outboundSchema;
})(LedgerListPositionsRequest$ || (LedgerListPositionsRequest$ = {}));
export function ledgerListPositionsRequestToJSON(ledgerListPositionsRequest) {
    return JSON.stringify(LedgerListPositionsRequest$outboundSchema.parse(ledgerListPositionsRequest));
}
export function ledgerListPositionsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LedgerListPositionsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LedgerListPositionsRequest' from JSON`);
}
/** @internal */
export const LedgerListPositionsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListPositionsResponse: components.ListPositionsResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListPositionsResponse": "listPositionsResponse",
        "Status": "status",
    });
});
/** @internal */
export const LedgerListPositionsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listPositionsResponse: components.ListPositionsResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listPositionsResponse: "ListPositionsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LedgerListPositionsResponse$;
(function (LedgerListPositionsResponse$) {
    /** @deprecated use `LedgerListPositionsResponse$inboundSchema` instead. */
    LedgerListPositionsResponse$.inboundSchema = LedgerListPositionsResponse$inboundSchema;
    /** @deprecated use `LedgerListPositionsResponse$outboundSchema` instead. */
    LedgerListPositionsResponse$.outboundSchema = LedgerListPositionsResponse$outboundSchema;
})(LedgerListPositionsResponse$ || (LedgerListPositionsResponse$ = {}));
export function ledgerListPositionsResponseToJSON(ledgerListPositionsResponse) {
    return JSON.stringify(LedgerListPositionsResponse$outboundSchema.parse(ledgerListPositionsResponse));
}
export function ledgerListPositionsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LedgerListPositionsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LedgerListPositionsResponse' from JSON`);
}
//# sourceMappingURL=ledgerlistpositions.js.map