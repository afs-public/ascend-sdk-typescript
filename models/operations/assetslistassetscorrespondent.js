/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AssetsListAssetsCorrespondentRequest$inboundSchema = z.object({
    correspondent_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "correspondent_id": "correspondentId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const AssetsListAssetsCorrespondentRequest$outboundSchema = z.object({
    correspondentId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        correspondentId: "correspondent_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssetsListAssetsCorrespondentRequest$;
(function (AssetsListAssetsCorrespondentRequest$) {
    /** @deprecated use `AssetsListAssetsCorrespondentRequest$inboundSchema` instead. */
    AssetsListAssetsCorrespondentRequest$.inboundSchema = AssetsListAssetsCorrespondentRequest$inboundSchema;
    /** @deprecated use `AssetsListAssetsCorrespondentRequest$outboundSchema` instead. */
    AssetsListAssetsCorrespondentRequest$.outboundSchema = AssetsListAssetsCorrespondentRequest$outboundSchema;
})(AssetsListAssetsCorrespondentRequest$ || (AssetsListAssetsCorrespondentRequest$ = {}));
export function assetsListAssetsCorrespondentRequestToJSON(assetsListAssetsCorrespondentRequest) {
    return JSON.stringify(AssetsListAssetsCorrespondentRequest$outboundSchema.parse(assetsListAssetsCorrespondentRequest));
}
export function assetsListAssetsCorrespondentRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssetsListAssetsCorrespondentRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetsListAssetsCorrespondentRequest' from JSON`);
}
/** @internal */
export const AssetsListAssetsCorrespondentResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListAssetsResponse: components.ListAssetsResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListAssetsResponse": "listAssetsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AssetsListAssetsCorrespondentResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listAssetsResponse: components.ListAssetsResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listAssetsResponse: "ListAssetsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AssetsListAssetsCorrespondentResponse$;
(function (AssetsListAssetsCorrespondentResponse$) {
    /** @deprecated use `AssetsListAssetsCorrespondentResponse$inboundSchema` instead. */
    AssetsListAssetsCorrespondentResponse$.inboundSchema = AssetsListAssetsCorrespondentResponse$inboundSchema;
    /** @deprecated use `AssetsListAssetsCorrespondentResponse$outboundSchema` instead. */
    AssetsListAssetsCorrespondentResponse$.outboundSchema = AssetsListAssetsCorrespondentResponse$outboundSchema;
})(AssetsListAssetsCorrespondentResponse$ || (AssetsListAssetsCorrespondentResponse$ = {}));
export function assetsListAssetsCorrespondentResponseToJSON(assetsListAssetsCorrespondentResponse) {
    return JSON.stringify(AssetsListAssetsCorrespondentResponse$outboundSchema.parse(assetsListAssetsCorrespondentResponse));
}
export function assetsListAssetsCorrespondentResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AssetsListAssetsCorrespondentResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AssetsListAssetsCorrespondentResponse' from JSON`);
}
//# sourceMappingURL=assetslistassetscorrespondent.js.map