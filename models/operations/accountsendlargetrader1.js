/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsEndLargeTrader1Request$inboundSchema = z.object({
    legalEntity_id: z.string(),
    EndLargeTraderRequestCreate: components.EndLargeTraderRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "legalEntity_id": "legalEntityId",
        "EndLargeTraderRequestCreate": "endLargeTraderRequestCreate",
    });
});
/** @internal */
export const AccountsEndLargeTrader1Request$outboundSchema = z.object({
    legalEntityId: z.string(),
    endLargeTraderRequestCreate: components.EndLargeTraderRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        legalEntityId: "legalEntity_id",
        endLargeTraderRequestCreate: "EndLargeTraderRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEndLargeTrader1Request$;
(function (AccountsEndLargeTrader1Request$) {
    /** @deprecated use `AccountsEndLargeTrader1Request$inboundSchema` instead. */
    AccountsEndLargeTrader1Request$.inboundSchema = AccountsEndLargeTrader1Request$inboundSchema;
    /** @deprecated use `AccountsEndLargeTrader1Request$outboundSchema` instead. */
    AccountsEndLargeTrader1Request$.outboundSchema = AccountsEndLargeTrader1Request$outboundSchema;
})(AccountsEndLargeTrader1Request$ || (AccountsEndLargeTrader1Request$ = {}));
export function accountsEndLargeTrader1RequestToJSON(accountsEndLargeTrader1Request) {
    return JSON.stringify(AccountsEndLargeTrader1Request$outboundSchema.parse(accountsEndLargeTrader1Request));
}
export function accountsEndLargeTrader1RequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEndLargeTrader1Request$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEndLargeTrader1Request' from JSON`);
}
/** @internal */
export const AccountsEndLargeTrader1Response$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Status": "status",
    });
});
/** @internal */
export const AccountsEndLargeTrader1Response$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEndLargeTrader1Response$;
(function (AccountsEndLargeTrader1Response$) {
    /** @deprecated use `AccountsEndLargeTrader1Response$inboundSchema` instead. */
    AccountsEndLargeTrader1Response$.inboundSchema = AccountsEndLargeTrader1Response$inboundSchema;
    /** @deprecated use `AccountsEndLargeTrader1Response$outboundSchema` instead. */
    AccountsEndLargeTrader1Response$.outboundSchema = AccountsEndLargeTrader1Response$outboundSchema;
})(AccountsEndLargeTrader1Response$ || (AccountsEndLargeTrader1Response$ = {}));
export function accountsEndLargeTrader1ResponseToJSON(accountsEndLargeTrader1Response) {
    return JSON.stringify(AccountsEndLargeTrader1Response$outboundSchema.parse(accountsEndLargeTrader1Response));
}
export function accountsEndLargeTrader1ResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEndLargeTrader1Response$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEndLargeTrader1Response' from JSON`);
}
//# sourceMappingURL=accountsendlargetrader1.js.map