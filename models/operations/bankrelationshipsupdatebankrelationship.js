/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BankRelationshipsUpdateBankRelationshipRequest$inboundSchema = z.object({
    account_id: z.string(),
    bankRelationship_id: z.string(),
    update_mask: z.string().optional(),
    BankRelationshipUpdate: components.BankRelationshipUpdate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "bankRelationship_id": "bankRelationshipId",
        "update_mask": "updateMask",
        "BankRelationshipUpdate": "bankRelationshipUpdate",
    });
});
/** @internal */
export const BankRelationshipsUpdateBankRelationshipRequest$outboundSchema = z.object({
    accountId: z.string(),
    bankRelationshipId: z.string(),
    updateMask: z.string().optional(),
    bankRelationshipUpdate: components.BankRelationshipUpdate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        bankRelationshipId: "bankRelationship_id",
        updateMask: "update_mask",
        bankRelationshipUpdate: "BankRelationshipUpdate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsUpdateBankRelationshipRequest$;
(function (BankRelationshipsUpdateBankRelationshipRequest$) {
    /** @deprecated use `BankRelationshipsUpdateBankRelationshipRequest$inboundSchema` instead. */
    BankRelationshipsUpdateBankRelationshipRequest$.inboundSchema = BankRelationshipsUpdateBankRelationshipRequest$inboundSchema;
    /** @deprecated use `BankRelationshipsUpdateBankRelationshipRequest$outboundSchema` instead. */
    BankRelationshipsUpdateBankRelationshipRequest$.outboundSchema = BankRelationshipsUpdateBankRelationshipRequest$outboundSchema;
})(BankRelationshipsUpdateBankRelationshipRequest$ || (BankRelationshipsUpdateBankRelationshipRequest$ = {}));
export function bankRelationshipsUpdateBankRelationshipRequestToJSON(bankRelationshipsUpdateBankRelationshipRequest) {
    return JSON.stringify(BankRelationshipsUpdateBankRelationshipRequest$outboundSchema.parse(bankRelationshipsUpdateBankRelationshipRequest));
}
export function bankRelationshipsUpdateBankRelationshipRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsUpdateBankRelationshipRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsUpdateBankRelationshipRequest' from JSON`);
}
/** @internal */
export const BankRelationshipsUpdateBankRelationshipResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BankRelationship: components.BankRelationship$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "BankRelationship": "bankRelationship",
        "Status": "status",
    });
});
/** @internal */
export const BankRelationshipsUpdateBankRelationshipResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    bankRelationship: components.BankRelationship$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        bankRelationship: "BankRelationship",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BankRelationshipsUpdateBankRelationshipResponse$;
(function (BankRelationshipsUpdateBankRelationshipResponse$) {
    /** @deprecated use `BankRelationshipsUpdateBankRelationshipResponse$inboundSchema` instead. */
    BankRelationshipsUpdateBankRelationshipResponse$.inboundSchema = BankRelationshipsUpdateBankRelationshipResponse$inboundSchema;
    /** @deprecated use `BankRelationshipsUpdateBankRelationshipResponse$outboundSchema` instead. */
    BankRelationshipsUpdateBankRelationshipResponse$.outboundSchema = BankRelationshipsUpdateBankRelationshipResponse$outboundSchema;
})(BankRelationshipsUpdateBankRelationshipResponse$ || (BankRelationshipsUpdateBankRelationshipResponse$ = {}));
export function bankRelationshipsUpdateBankRelationshipResponseToJSON(bankRelationshipsUpdateBankRelationshipResponse) {
    return JSON.stringify(BankRelationshipsUpdateBankRelationshipResponse$outboundSchema.parse(bankRelationshipsUpdateBankRelationshipResponse));
}
export function bankRelationshipsUpdateBankRelationshipResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BankRelationshipsUpdateBankRelationshipResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BankRelationshipsUpdateBankRelationshipResponse' from JSON`);
}
//# sourceMappingURL=bankrelationshipsupdatebankrelationship.js.map