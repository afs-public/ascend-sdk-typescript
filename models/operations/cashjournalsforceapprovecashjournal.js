/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CashJournalsForceApproveCashJournalRequest$inboundSchema = z.object({
    cashJournal_id: z.string(),
    ForceApproveCashJournalRequestCreate: components.ForceApproveCashJournalRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "cashJournal_id": "cashJournalId",
        "ForceApproveCashJournalRequestCreate": "forceApproveCashJournalRequestCreate",
    });
});
/** @internal */
export const CashJournalsForceApproveCashJournalRequest$outboundSchema = z.object({
    cashJournalId: z.string(),
    forceApproveCashJournalRequestCreate: components.ForceApproveCashJournalRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        cashJournalId: "cashJournal_id",
        forceApproveCashJournalRequestCreate: "ForceApproveCashJournalRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsForceApproveCashJournalRequest$;
(function (CashJournalsForceApproveCashJournalRequest$) {
    /** @deprecated use `CashJournalsForceApproveCashJournalRequest$inboundSchema` instead. */
    CashJournalsForceApproveCashJournalRequest$.inboundSchema = CashJournalsForceApproveCashJournalRequest$inboundSchema;
    /** @deprecated use `CashJournalsForceApproveCashJournalRequest$outboundSchema` instead. */
    CashJournalsForceApproveCashJournalRequest$.outboundSchema = CashJournalsForceApproveCashJournalRequest$outboundSchema;
})(CashJournalsForceApproveCashJournalRequest$ || (CashJournalsForceApproveCashJournalRequest$ = {}));
export function cashJournalsForceApproveCashJournalRequestToJSON(cashJournalsForceApproveCashJournalRequest) {
    return JSON.stringify(CashJournalsForceApproveCashJournalRequest$outboundSchema.parse(cashJournalsForceApproveCashJournalRequest));
}
export function cashJournalsForceApproveCashJournalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsForceApproveCashJournalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsForceApproveCashJournalRequest' from JSON`);
}
/** @internal */
export const CashJournalsForceApproveCashJournalResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    CashJournal: components.CashJournal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "CashJournal": "cashJournal",
        "Status": "status",
    });
});
/** @internal */
export const CashJournalsForceApproveCashJournalResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    cashJournal: components.CashJournal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        cashJournal: "CashJournal",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsForceApproveCashJournalResponse$;
(function (CashJournalsForceApproveCashJournalResponse$) {
    /** @deprecated use `CashJournalsForceApproveCashJournalResponse$inboundSchema` instead. */
    CashJournalsForceApproveCashJournalResponse$.inboundSchema = CashJournalsForceApproveCashJournalResponse$inboundSchema;
    /** @deprecated use `CashJournalsForceApproveCashJournalResponse$outboundSchema` instead. */
    CashJournalsForceApproveCashJournalResponse$.outboundSchema = CashJournalsForceApproveCashJournalResponse$outboundSchema;
})(CashJournalsForceApproveCashJournalResponse$ || (CashJournalsForceApproveCashJournalResponse$ = {}));
export function cashJournalsForceApproveCashJournalResponseToJSON(cashJournalsForceApproveCashJournalResponse) {
    return JSON.stringify(CashJournalsForceApproveCashJournalResponse$outboundSchema.parse(cashJournalsForceApproveCashJournalResponse));
}
export function cashJournalsForceApproveCashJournalResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsForceApproveCashJournalResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsForceApproveCashJournalResponse' from JSON`);
}
//# sourceMappingURL=cashjournalsforceapprovecashjournal.js.map