/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CashJournalsGetCashJournalRequest$inboundSchema = z.object({
    cashJournal_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "cashJournal_id": "cashJournalId",
    });
});
/** @internal */
export const CashJournalsGetCashJournalRequest$outboundSchema = z.object({
    cashJournalId: z.string(),
}).transform((v) => {
    return remap$(v, {
        cashJournalId: "cashJournal_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsGetCashJournalRequest$;
(function (CashJournalsGetCashJournalRequest$) {
    /** @deprecated use `CashJournalsGetCashJournalRequest$inboundSchema` instead. */
    CashJournalsGetCashJournalRequest$.inboundSchema = CashJournalsGetCashJournalRequest$inboundSchema;
    /** @deprecated use `CashJournalsGetCashJournalRequest$outboundSchema` instead. */
    CashJournalsGetCashJournalRequest$.outboundSchema = CashJournalsGetCashJournalRequest$outboundSchema;
})(CashJournalsGetCashJournalRequest$ || (CashJournalsGetCashJournalRequest$ = {}));
export function cashJournalsGetCashJournalRequestToJSON(cashJournalsGetCashJournalRequest) {
    return JSON.stringify(CashJournalsGetCashJournalRequest$outboundSchema.parse(cashJournalsGetCashJournalRequest));
}
export function cashJournalsGetCashJournalRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsGetCashJournalRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsGetCashJournalRequest' from JSON`);
}
/** @internal */
export const CashJournalsGetCashJournalResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    CashJournal: components.CashJournal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "CashJournal": "cashJournal",
        "Status": "status",
    });
});
/** @internal */
export const CashJournalsGetCashJournalResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    cashJournal: components.CashJournal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        cashJournal: "CashJournal",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CashJournalsGetCashJournalResponse$;
(function (CashJournalsGetCashJournalResponse$) {
    /** @deprecated use `CashJournalsGetCashJournalResponse$inboundSchema` instead. */
    CashJournalsGetCashJournalResponse$.inboundSchema = CashJournalsGetCashJournalResponse$inboundSchema;
    /** @deprecated use `CashJournalsGetCashJournalResponse$outboundSchema` instead. */
    CashJournalsGetCashJournalResponse$.outboundSchema = CashJournalsGetCashJournalResponse$outboundSchema;
})(CashJournalsGetCashJournalResponse$ || (CashJournalsGetCashJournalResponse$ = {}));
export function cashJournalsGetCashJournalResponseToJSON(cashJournalsGetCashJournalResponse) {
    return JSON.stringify(CashJournalsGetCashJournalResponse$outboundSchema.parse(cashJournalsGetCashJournalResponse));
}
export function cashJournalsGetCashJournalResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CashJournalsGetCashJournalResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CashJournalsGetCashJournalResponse' from JSON`);
}
//# sourceMappingURL=cashjournalsgetcashjournal.js.map