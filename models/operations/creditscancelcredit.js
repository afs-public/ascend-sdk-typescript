/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreditsCancelCreditRequest$inboundSchema = z.object({
    account_id: z.string(),
    credit_id: z.string(),
    CancelCreditRequestCreate: components.CancelCreditRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "credit_id": "creditId",
        "CancelCreditRequestCreate": "cancelCreditRequestCreate",
    });
});
/** @internal */
export const CreditsCancelCreditRequest$outboundSchema = z.object({
    accountId: z.string(),
    creditId: z.string(),
    cancelCreditRequestCreate: components.CancelCreditRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        creditId: "credit_id",
        cancelCreditRequestCreate: "CancelCreditRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreditsCancelCreditRequest$;
(function (CreditsCancelCreditRequest$) {
    /** @deprecated use `CreditsCancelCreditRequest$inboundSchema` instead. */
    CreditsCancelCreditRequest$.inboundSchema = CreditsCancelCreditRequest$inboundSchema;
    /** @deprecated use `CreditsCancelCreditRequest$outboundSchema` instead. */
    CreditsCancelCreditRequest$.outboundSchema = CreditsCancelCreditRequest$outboundSchema;
})(CreditsCancelCreditRequest$ || (CreditsCancelCreditRequest$ = {}));
export function creditsCancelCreditRequestToJSON(creditsCancelCreditRequest) {
    return JSON.stringify(CreditsCancelCreditRequest$outboundSchema.parse(creditsCancelCreditRequest));
}
export function creditsCancelCreditRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreditsCancelCreditRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreditsCancelCreditRequest' from JSON`);
}
/** @internal */
export const CreditsCancelCreditResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    TransfersCredit: components.TransfersCredit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "TransfersCredit": "transfersCredit",
        "Status": "status",
    });
});
/** @internal */
export const CreditsCancelCreditResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    transfersCredit: components.TransfersCredit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        transfersCredit: "TransfersCredit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreditsCancelCreditResponse$;
(function (CreditsCancelCreditResponse$) {
    /** @deprecated use `CreditsCancelCreditResponse$inboundSchema` instead. */
    CreditsCancelCreditResponse$.inboundSchema = CreditsCancelCreditResponse$inboundSchema;
    /** @deprecated use `CreditsCancelCreditResponse$outboundSchema` instead. */
    CreditsCancelCreditResponse$.outboundSchema = CreditsCancelCreditResponse$outboundSchema;
})(CreditsCancelCreditResponse$ || (CreditsCancelCreditResponse$ = {}));
export function creditsCancelCreditResponseToJSON(creditsCancelCreditResponse) {
    return JSON.stringify(CreditsCancelCreditResponse$outboundSchema.parse(creditsCancelCreditResponse));
}
export function creditsCancelCreditResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreditsCancelCreditResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreditsCancelCreditResponse' from JSON`);
}
//# sourceMappingURL=creditscancelcredit.js.map