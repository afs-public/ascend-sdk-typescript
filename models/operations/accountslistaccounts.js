/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/**
 * The view to return. Defaults to `BASIC`.
 */
export var View;
(function (View) {
    View["AccountViewUnspecified"] = "ACCOUNT_VIEW_UNSPECIFIED";
    View["Basic"] = "BASIC";
    View["Full"] = "FULL";
})(View || (View = {}));
/** @internal */
export const View$inboundSchema = z.nativeEnum(View);
/** @internal */
export const View$outboundSchema = View$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var View$;
(function (View$) {
    /** @deprecated use `View$inboundSchema` instead. */
    View$.inboundSchema = View$inboundSchema;
    /** @deprecated use `View$outboundSchema` instead. */
    View$.outboundSchema = View$outboundSchema;
})(View$ || (View$ = {}));
/** @internal */
export const AccountsListAccountsRequest$inboundSchema = z.object({
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    order_by: z.string().optional(),
    filter: z.string().optional(),
    view: View$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "page_size": "pageSize",
        "page_token": "pageToken",
        "order_by": "orderBy",
    });
});
/** @internal */
export const AccountsListAccountsRequest$outboundSchema = z.object({
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    orderBy: z.string().optional(),
    filter: z.string().optional(),
    view: View$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        pageSize: "page_size",
        pageToken: "page_token",
        orderBy: "order_by",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListAccountsRequest$;
(function (AccountsListAccountsRequest$) {
    /** @deprecated use `AccountsListAccountsRequest$inboundSchema` instead. */
    AccountsListAccountsRequest$.inboundSchema = AccountsListAccountsRequest$inboundSchema;
    /** @deprecated use `AccountsListAccountsRequest$outboundSchema` instead. */
    AccountsListAccountsRequest$.outboundSchema = AccountsListAccountsRequest$outboundSchema;
})(AccountsListAccountsRequest$ || (AccountsListAccountsRequest$ = {}));
export function accountsListAccountsRequestToJSON(accountsListAccountsRequest) {
    return JSON.stringify(AccountsListAccountsRequest$outboundSchema.parse(accountsListAccountsRequest));
}
export function accountsListAccountsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListAccountsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListAccountsRequest' from JSON`);
}
/** @internal */
export const AccountsListAccountsResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListAccountsResponse: components.ListAccountsResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListAccountsResponse": "listAccountsResponse",
        "Status": "status",
    });
});
/** @internal */
export const AccountsListAccountsResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listAccountsResponse: components.ListAccountsResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listAccountsResponse: "ListAccountsResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsListAccountsResponse$;
(function (AccountsListAccountsResponse$) {
    /** @deprecated use `AccountsListAccountsResponse$inboundSchema` instead. */
    AccountsListAccountsResponse$.inboundSchema = AccountsListAccountsResponse$inboundSchema;
    /** @deprecated use `AccountsListAccountsResponse$outboundSchema` instead. */
    AccountsListAccountsResponse$.outboundSchema = AccountsListAccountsResponse$outboundSchema;
})(AccountsListAccountsResponse$ || (AccountsListAccountsResponse$ = {}));
export function accountsListAccountsResponseToJSON(accountsListAccountsResponse) {
    return JSON.stringify(AccountsListAccountsResponse$outboundSchema.parse(accountsListAccountsResponse));
}
export function accountsListAccountsResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsListAccountsResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsListAccountsResponse' from JSON`);
}
//# sourceMappingURL=accountslistaccounts.js.map