/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BasketOrdersServiceListCompressedOrdersRequest$inboundSchema = z.object({
    correspondent_id: z.string(),
    basket_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "correspondent_id": "correspondentId",
        "basket_id": "basketId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const BasketOrdersServiceListCompressedOrdersRequest$outboundSchema = z.object({
    correspondentId: z.string(),
    basketId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        correspondentId: "correspondent_id",
        basketId: "basket_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BasketOrdersServiceListCompressedOrdersRequest$;
(function (BasketOrdersServiceListCompressedOrdersRequest$) {
    /** @deprecated use `BasketOrdersServiceListCompressedOrdersRequest$inboundSchema` instead. */
    BasketOrdersServiceListCompressedOrdersRequest$.inboundSchema = BasketOrdersServiceListCompressedOrdersRequest$inboundSchema;
    /** @deprecated use `BasketOrdersServiceListCompressedOrdersRequest$outboundSchema` instead. */
    BasketOrdersServiceListCompressedOrdersRequest$.outboundSchema = BasketOrdersServiceListCompressedOrdersRequest$outboundSchema;
})(BasketOrdersServiceListCompressedOrdersRequest$ || (BasketOrdersServiceListCompressedOrdersRequest$ = {}));
export function basketOrdersServiceListCompressedOrdersRequestToJSON(basketOrdersServiceListCompressedOrdersRequest) {
    return JSON.stringify(BasketOrdersServiceListCompressedOrdersRequest$outboundSchema.parse(basketOrdersServiceListCompressedOrdersRequest));
}
export function basketOrdersServiceListCompressedOrdersRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BasketOrdersServiceListCompressedOrdersRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BasketOrdersServiceListCompressedOrdersRequest' from JSON`);
}
/** @internal */
export const BasketOrdersServiceListCompressedOrdersResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListCompressedOrdersResponse: components
        .ListCompressedOrdersResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListCompressedOrdersResponse": "listCompressedOrdersResponse",
        "Status": "status",
    });
});
/** @internal */
export const BasketOrdersServiceListCompressedOrdersResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listCompressedOrdersResponse: components
        .ListCompressedOrdersResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listCompressedOrdersResponse: "ListCompressedOrdersResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BasketOrdersServiceListCompressedOrdersResponse$;
(function (BasketOrdersServiceListCompressedOrdersResponse$) {
    /** @deprecated use `BasketOrdersServiceListCompressedOrdersResponse$inboundSchema` instead. */
    BasketOrdersServiceListCompressedOrdersResponse$.inboundSchema = BasketOrdersServiceListCompressedOrdersResponse$inboundSchema;
    /** @deprecated use `BasketOrdersServiceListCompressedOrdersResponse$outboundSchema` instead. */
    BasketOrdersServiceListCompressedOrdersResponse$.outboundSchema = BasketOrdersServiceListCompressedOrdersResponse$outboundSchema;
})(BasketOrdersServiceListCompressedOrdersResponse$ || (BasketOrdersServiceListCompressedOrdersResponse$ = {}));
export function basketOrdersServiceListCompressedOrdersResponseToJSON(basketOrdersServiceListCompressedOrdersResponse) {
    return JSON.stringify(BasketOrdersServiceListCompressedOrdersResponse$outboundSchema.parse(basketOrdersServiceListCompressedOrdersResponse));
}
export function basketOrdersServiceListCompressedOrdersResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BasketOrdersServiceListCompressedOrdersResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BasketOrdersServiceListCompressedOrdersResponse' from JSON`);
}
//# sourceMappingURL=basketordersservicelistcompressedorders.js.map