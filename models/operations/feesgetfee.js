/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const FeesGetFeeRequest$inboundSchema = z.object({
    account_id: z.string(),
    fee_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "fee_id": "feeId",
    });
});
/** @internal */
export const FeesGetFeeRequest$outboundSchema = z.object({
    accountId: z.string(),
    feeId: z.string(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        feeId: "fee_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeesGetFeeRequest$;
(function (FeesGetFeeRequest$) {
    /** @deprecated use `FeesGetFeeRequest$inboundSchema` instead. */
    FeesGetFeeRequest$.inboundSchema = FeesGetFeeRequest$inboundSchema;
    /** @deprecated use `FeesGetFeeRequest$outboundSchema` instead. */
    FeesGetFeeRequest$.outboundSchema = FeesGetFeeRequest$outboundSchema;
})(FeesGetFeeRequest$ || (FeesGetFeeRequest$ = {}));
export function feesGetFeeRequestToJSON(feesGetFeeRequest) {
    return JSON.stringify(FeesGetFeeRequest$outboundSchema.parse(feesGetFeeRequest));
}
export function feesGetFeeRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeesGetFeeRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeesGetFeeRequest' from JSON`);
}
/** @internal */
export const FeesGetFeeResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    TransfersFee: components.TransfersFee$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "TransfersFee": "transfersFee",
        "Status": "status",
    });
});
/** @internal */
export const FeesGetFeeResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    transfersFee: components.TransfersFee$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        transfersFee: "TransfersFee",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeesGetFeeResponse$;
(function (FeesGetFeeResponse$) {
    /** @deprecated use `FeesGetFeeResponse$inboundSchema` instead. */
    FeesGetFeeResponse$.inboundSchema = FeesGetFeeResponse$inboundSchema;
    /** @deprecated use `FeesGetFeeResponse$outboundSchema` instead. */
    FeesGetFeeResponse$.outboundSchema = FeesGetFeeResponse$outboundSchema;
})(FeesGetFeeResponse$ || (FeesGetFeeResponse$ = {}));
export function feesGetFeeResponseToJSON(feesGetFeeResponse) {
    return JSON.stringify(FeesGetFeeResponse$outboundSchema.parse(feesGetFeeResponse));
}
export function feesGetFeeResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeesGetFeeResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeesGetFeeResponse' from JSON`);
}
//# sourceMappingURL=feesgetfee.js.map