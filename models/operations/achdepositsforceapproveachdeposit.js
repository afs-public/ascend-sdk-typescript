/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AchDepositsForceApproveAchDepositRequest$inboundSchema = z.object({
    account_id: z.string(),
    achDeposit_id: z.string(),
    ForceApproveAchDepositRequestCreate: components.ForceApproveAchDepositRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "achDeposit_id": "achDepositId",
        "ForceApproveAchDepositRequestCreate": "forceApproveAchDepositRequestCreate",
    });
});
/** @internal */
export const AchDepositsForceApproveAchDepositRequest$outboundSchema = z.object({
    accountId: z.string(),
    achDepositId: z.string(),
    forceApproveAchDepositRequestCreate: components.ForceApproveAchDepositRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        achDepositId: "achDeposit_id",
        forceApproveAchDepositRequestCreate: "ForceApproveAchDepositRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositsForceApproveAchDepositRequest$;
(function (AchDepositsForceApproveAchDepositRequest$) {
    /** @deprecated use `AchDepositsForceApproveAchDepositRequest$inboundSchema` instead. */
    AchDepositsForceApproveAchDepositRequest$.inboundSchema = AchDepositsForceApproveAchDepositRequest$inboundSchema;
    /** @deprecated use `AchDepositsForceApproveAchDepositRequest$outboundSchema` instead. */
    AchDepositsForceApproveAchDepositRequest$.outboundSchema = AchDepositsForceApproveAchDepositRequest$outboundSchema;
})(AchDepositsForceApproveAchDepositRequest$ || (AchDepositsForceApproveAchDepositRequest$ = {}));
export function achDepositsForceApproveAchDepositRequestToJSON(achDepositsForceApproveAchDepositRequest) {
    return JSON.stringify(AchDepositsForceApproveAchDepositRequest$outboundSchema.parse(achDepositsForceApproveAchDepositRequest));
}
export function achDepositsForceApproveAchDepositRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositsForceApproveAchDepositRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositsForceApproveAchDepositRequest' from JSON`);
}
/** @internal */
export const AchDepositsForceApproveAchDepositResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    AchDeposit: components.AchDeposit$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "AchDeposit": "achDeposit",
        "Status": "status",
    });
});
/** @internal */
export const AchDepositsForceApproveAchDepositResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    achDeposit: components.AchDeposit$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        achDeposit: "AchDeposit",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AchDepositsForceApproveAchDepositResponse$;
(function (AchDepositsForceApproveAchDepositResponse$) {
    /** @deprecated use `AchDepositsForceApproveAchDepositResponse$inboundSchema` instead. */
    AchDepositsForceApproveAchDepositResponse$.inboundSchema = AchDepositsForceApproveAchDepositResponse$inboundSchema;
    /** @deprecated use `AchDepositsForceApproveAchDepositResponse$outboundSchema` instead. */
    AchDepositsForceApproveAchDepositResponse$.outboundSchema = AchDepositsForceApproveAchDepositResponse$outboundSchema;
})(AchDepositsForceApproveAchDepositResponse$ || (AchDepositsForceApproveAchDepositResponse$ = {}));
export function achDepositsForceApproveAchDepositResponseToJSON(achDepositsForceApproveAchDepositResponse) {
    return JSON.stringify(AchDepositsForceApproveAchDepositResponse$outboundSchema.parse(achDepositsForceApproveAchDepositResponse));
}
export function achDepositsForceApproveAchDepositResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AchDepositsForceApproveAchDepositResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AchDepositsForceApproveAchDepositResponse' from JSON`);
}
//# sourceMappingURL=achdepositsforceapproveachdeposit.js.map