/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const AccountsEndLargeTraderLegalNaturalPersonRequest$inboundSchema = z.object({
    legalNaturalPerson_id: z.string(),
    EndLargeTraderRequestCreate: components.EndLargeTraderRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "legalNaturalPerson_id": "legalNaturalPersonId",
        "EndLargeTraderRequestCreate": "endLargeTraderRequestCreate",
    });
});
/** @internal */
export const AccountsEndLargeTraderLegalNaturalPersonRequest$outboundSchema = z.object({
    legalNaturalPersonId: z.string(),
    endLargeTraderRequestCreate: components.EndLargeTraderRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        legalNaturalPersonId: "legalNaturalPerson_id",
        endLargeTraderRequestCreate: "EndLargeTraderRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEndLargeTraderLegalNaturalPersonRequest$;
(function (AccountsEndLargeTraderLegalNaturalPersonRequest$) {
    /** @deprecated use `AccountsEndLargeTraderLegalNaturalPersonRequest$inboundSchema` instead. */
    AccountsEndLargeTraderLegalNaturalPersonRequest$.inboundSchema = AccountsEndLargeTraderLegalNaturalPersonRequest$inboundSchema;
    /** @deprecated use `AccountsEndLargeTraderLegalNaturalPersonRequest$outboundSchema` instead. */
    AccountsEndLargeTraderLegalNaturalPersonRequest$.outboundSchema = AccountsEndLargeTraderLegalNaturalPersonRequest$outboundSchema;
})(AccountsEndLargeTraderLegalNaturalPersonRequest$ || (AccountsEndLargeTraderLegalNaturalPersonRequest$ = {}));
export function accountsEndLargeTraderLegalNaturalPersonRequestToJSON(accountsEndLargeTraderLegalNaturalPersonRequest) {
    return JSON.stringify(AccountsEndLargeTraderLegalNaturalPersonRequest$outboundSchema.parse(accountsEndLargeTraderLegalNaturalPersonRequest));
}
export function accountsEndLargeTraderLegalNaturalPersonRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEndLargeTraderLegalNaturalPersonRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEndLargeTraderLegalNaturalPersonRequest' from JSON`);
}
/** @internal */
export const AccountsEndLargeTraderLegalNaturalPersonResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "Status": "status",
    });
});
/** @internal */
export const AccountsEndLargeTraderLegalNaturalPersonResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var AccountsEndLargeTraderLegalNaturalPersonResponse$;
(function (AccountsEndLargeTraderLegalNaturalPersonResponse$) {
    /** @deprecated use `AccountsEndLargeTraderLegalNaturalPersonResponse$inboundSchema` instead. */
    AccountsEndLargeTraderLegalNaturalPersonResponse$.inboundSchema = AccountsEndLargeTraderLegalNaturalPersonResponse$inboundSchema;
    /** @deprecated use `AccountsEndLargeTraderLegalNaturalPersonResponse$outboundSchema` instead. */
    AccountsEndLargeTraderLegalNaturalPersonResponse$.outboundSchema = AccountsEndLargeTraderLegalNaturalPersonResponse$outboundSchema;
})(AccountsEndLargeTraderLegalNaturalPersonResponse$ || (AccountsEndLargeTraderLegalNaturalPersonResponse$ = {}));
export function accountsEndLargeTraderLegalNaturalPersonResponseToJSON(accountsEndLargeTraderLegalNaturalPersonResponse) {
    return JSON.stringify(AccountsEndLargeTraderLegalNaturalPersonResponse$outboundSchema.parse(accountsEndLargeTraderLegalNaturalPersonResponse));
}
export function accountsEndLargeTraderLegalNaturalPersonResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => AccountsEndLargeTraderLegalNaturalPersonResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'AccountsEndLargeTraderLegalNaturalPersonResponse' from JSON`);
}
//# sourceMappingURL=accountsendlargetraderlegalnaturalperson.js.map