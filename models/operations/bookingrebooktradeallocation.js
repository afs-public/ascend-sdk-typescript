/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const BookingRebookTradeAllocationRequest$inboundSchema = z.object({
    account_id: z.string(),
    tradeAllocation_id: z.string(),
    RebookTradeAllocationRequestCreate: components.RebookTradeAllocationRequestCreate$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "tradeAllocation_id": "tradeAllocationId",
        "RebookTradeAllocationRequestCreate": "rebookTradeAllocationRequestCreate",
    });
});
/** @internal */
export const BookingRebookTradeAllocationRequest$outboundSchema = z.object({
    accountId: z.string(),
    tradeAllocationId: z.string(),
    rebookTradeAllocationRequestCreate: components.RebookTradeAllocationRequestCreate$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        tradeAllocationId: "tradeAllocation_id",
        rebookTradeAllocationRequestCreate: "RebookTradeAllocationRequestCreate",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BookingRebookTradeAllocationRequest$;
(function (BookingRebookTradeAllocationRequest$) {
    /** @deprecated use `BookingRebookTradeAllocationRequest$inboundSchema` instead. */
    BookingRebookTradeAllocationRequest$.inboundSchema = BookingRebookTradeAllocationRequest$inboundSchema;
    /** @deprecated use `BookingRebookTradeAllocationRequest$outboundSchema` instead. */
    BookingRebookTradeAllocationRequest$.outboundSchema = BookingRebookTradeAllocationRequest$outboundSchema;
})(BookingRebookTradeAllocationRequest$ || (BookingRebookTradeAllocationRequest$ = {}));
export function bookingRebookTradeAllocationRequestToJSON(bookingRebookTradeAllocationRequest) {
    return JSON.stringify(BookingRebookTradeAllocationRequest$outboundSchema.parse(bookingRebookTradeAllocationRequest));
}
export function bookingRebookTradeAllocationRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BookingRebookTradeAllocationRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BookingRebookTradeAllocationRequest' from JSON`);
}
/** @internal */
export const BookingRebookTradeAllocationResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    RebookTradeAllocationResponse: components
        .RebookTradeAllocationResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "RebookTradeAllocationResponse": "rebookTradeAllocationResponse",
        "Status": "status",
    });
});
/** @internal */
export const BookingRebookTradeAllocationResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    rebookTradeAllocationResponse: components
        .RebookTradeAllocationResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        rebookTradeAllocationResponse: "RebookTradeAllocationResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BookingRebookTradeAllocationResponse$;
(function (BookingRebookTradeAllocationResponse$) {
    /** @deprecated use `BookingRebookTradeAllocationResponse$inboundSchema` instead. */
    BookingRebookTradeAllocationResponse$.inboundSchema = BookingRebookTradeAllocationResponse$inboundSchema;
    /** @deprecated use `BookingRebookTradeAllocationResponse$outboundSchema` instead. */
    BookingRebookTradeAllocationResponse$.outboundSchema = BookingRebookTradeAllocationResponse$outboundSchema;
})(BookingRebookTradeAllocationResponse$ || (BookingRebookTradeAllocationResponse$ = {}));
export function bookingRebookTradeAllocationResponseToJSON(bookingRebookTradeAllocationResponse) {
    return JSON.stringify(BookingRebookTradeAllocationResponse$outboundSchema.parse(bookingRebookTradeAllocationResponse));
}
export function bookingRebookTradeAllocationResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BookingRebookTradeAllocationResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BookingRebookTradeAllocationResponse' from JSON`);
}
//# sourceMappingURL=bookingrebooktradeallocation.js.map