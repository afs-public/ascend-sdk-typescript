/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const LedgerListActivitiesRequest$inboundSchema = z.object({
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
export const LedgerListActivitiesRequest$outboundSchema = z.object({
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return remap$(v, {
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LedgerListActivitiesRequest$;
(function (LedgerListActivitiesRequest$) {
    /** @deprecated use `LedgerListActivitiesRequest$inboundSchema` instead. */
    LedgerListActivitiesRequest$.inboundSchema = LedgerListActivitiesRequest$inboundSchema;
    /** @deprecated use `LedgerListActivitiesRequest$outboundSchema` instead. */
    LedgerListActivitiesRequest$.outboundSchema = LedgerListActivitiesRequest$outboundSchema;
})(LedgerListActivitiesRequest$ || (LedgerListActivitiesRequest$ = {}));
export function ledgerListActivitiesRequestToJSON(ledgerListActivitiesRequest) {
    return JSON.stringify(LedgerListActivitiesRequest$outboundSchema.parse(ledgerListActivitiesRequest));
}
export function ledgerListActivitiesRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LedgerListActivitiesRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LedgerListActivitiesRequest' from JSON`);
}
/** @internal */
export const LedgerListActivitiesResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListActivitiesResponse: components.ListActivitiesResponse$inboundSchema
        .optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        "HttpMeta": "httpMeta",
        "ListActivitiesResponse": "listActivitiesResponse",
        "Status": "status",
    });
});
/** @internal */
export const LedgerListActivitiesResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listActivitiesResponse: components.ListActivitiesResponse$outboundSchema
        .optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return remap$(v, {
        httpMeta: "HttpMeta",
        listActivitiesResponse: "ListActivitiesResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var LedgerListActivitiesResponse$;
(function (LedgerListActivitiesResponse$) {
    /** @deprecated use `LedgerListActivitiesResponse$inboundSchema` instead. */
    LedgerListActivitiesResponse$.inboundSchema = LedgerListActivitiesResponse$inboundSchema;
    /** @deprecated use `LedgerListActivitiesResponse$outboundSchema` instead. */
    LedgerListActivitiesResponse$.outboundSchema = LedgerListActivitiesResponse$outboundSchema;
})(LedgerListActivitiesResponse$ || (LedgerListActivitiesResponse$ = {}));
export function ledgerListActivitiesResponseToJSON(ledgerListActivitiesResponse) {
    return JSON.stringify(LedgerListActivitiesResponse$outboundSchema.parse(ledgerListActivitiesResponse));
}
export function ledgerListActivitiesResponseFromJSON(jsonString) {
    return safeParse(jsonString, (x) => LedgerListActivitiesResponse$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'LedgerListActivitiesResponse' from JSON`);
}
//# sourceMappingURL=ledgerlistactivities.js.map